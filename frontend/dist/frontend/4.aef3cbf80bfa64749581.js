(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{3:function(e,t){},4:function(e,t){},5:function(e,t){},"8szH":function(e){e.exports=JSON.parse('{"b":{"AS":{"mean":0.57274,"std":0.23651},"AD_1":{"mean":0.539248,"std":0.239284},"AD_2":{"mean":0.504462,"std":0.282136},"AD_3":{"mean":0.560258,"std":0.217828},"AD_4":{"mean":0.518065,"std":0.264104},"AD_5":{"mean":0.513932,"std":0.270076},"AD_6":{"mean":0.510336,"std":0.274473},"AD_7":{"mean":0.519434,"std":0.262884},"AD_8":{"mean":0.635923,"std":0.15328},"AD_9":{"mean":0.512548,"std":0.271193},"AD_10":{"mean":0.522523,"std":0.258701},"AD_11":{"mean":0.701813,"std":0.108689},"AD_12":{"mean":0.504773,"std":0.281825},"AD_13":{"mean":0.516376,"std":0.266278},"ND_1":{"mean":0.513932,"std":0.270076},"ND_2":{"mean":0.519434,"std":0.262884},"ND_3":{"mean":0.539248,"std":0.239284},"ND_4":{"mean":0.522523,"std":0.258701},"ND_5":{"mean":0.516376,"std":0.266278},"ND_6":{"mean":0.611062,"std":0.17252},"ND_7":{"mean":0.513987,"std":0.269489},"ND_8":{"mean":0.558095,"std":0.220596},"ND_9":{"mean":0.53097,"std":0.249533},"ND_10":{"mean":0.541114,"std":0.237388},"ND_11":{"mean":0.547042,"std":0.231211},"ND_12":{"mean":0.551743,"std":0.226409},"ND_13":{"mean":0.648117,"std":0.144254},"ND_14":{"mean":0.504419,"std":0.282267},"ND_15":{"mean":0.605491,"std":0.177104},"ND_16":{"mean":0.540689,"std":0.23793},"ND_17":{"mean":0.572896,"std":0.209628},"ND_18":{"mean":0.598075,"std":0.184207},"ND_19":{"mean":0.725505,"std":0.095008},"ND_20":{"mean":0.715943,"std":0.100437},"ND_21":{"mean":0.706319,"std":0.105886},"ND_22":{"mean":0.652969,"std":0.141},"ND_23":{"mean":0.710774,"std":0.103196},"ND_24":{"mean":0.667517,"std":0.130989},"ND_25":{"mean":0.548089,"std":0.230642},"TD_1":{"mean":0.512021,"std":0.273056},"TD_2":{"mean":0.512373,"std":0.272647},"ES":{"mean":0.500209,"std":0.28879}},"a":["No_1_Angle_Deviation","No_2_Angle_Deviation","No_3_Angle_Deviation","No_4_Angle_Deviation","No_5_Angle_Deviation","No_6_Angle_Deviation","No_7_Angle_Deviation","No_8_Angle_Deviation","No_9_Angle_Deviation","No_10_Angle_Deviation","No_11_Angle_Deviation","No_12_Angle_Deviation","No_13_Angle_Deviation","No_1_NASM_Deviation","No_2_NASM_Deviation","No_3_NASM_Deviation","No_4_NASM_Deviation","No_5_NASM_Deviation","No_6_NASM_Deviation","No_7_NASM_Deviation","No_8_NASM_Deviation","No_9_NASM_Deviation","No_10_NASM_Deviation","No_11_NASM_Deviation","No_12_NASM_Deviation","No_13_NASM_Deviation","No_14_NASM_Deviation","No_15_NASM_Deviation","No_16_NASM_Deviation","No_17_NASM_Deviation","No_18_NASM_Deviation","No_19_NASM_Deviation","No_20_NASM_Deviation","No_21_NASM_Deviation","No_22_NASM_Deviation","No_23_NASM_Deviation","No_24_NASM_Deviation","No_25_NASM_Deviation","No_1_Time_Deviation","No_2_Time_Deviation"]}')},B9Yq:function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},EhIR:function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},PDX0:function(e,t){(function(t){e.exports=t}).call(this,{})},XoyV:function(e,t,n){"use strict";n.r(t),n.d(t,"DashboardModule",function(){return oI});var r={};n.r(r),n.d(r,"shuffle",function(){return cn}),n.d(r,"shuffleCombo",function(){return dn}),n.d(r,"clamp",function(){return pn}),n.d(r,"nearestLargerEven",function(){return hn}),n.d(r,"sum",function(){return fn}),n.d(r,"randUniform",function(){return mn}),n.d(r,"distSquared",function(){return gn}),n.d(r,"assert",function(){return bn}),n.d(r,"assertShapesMatch",function(){return yn}),n.d(r,"assertNonNull",function(){return xn}),n.d(r,"flatten",function(){return vn}),n.d(r,"sizeFromShape",function(){return wn}),n.d(r,"isScalarShape",function(){return _n}),n.d(r,"arraysEqual",function(){return Nn}),n.d(r,"isInt",function(){return kn}),n.d(r,"tanh",function(){return Cn}),n.d(r,"sizeToSquarishShape",function(){return $n}),n.d(r,"createShuffledIndices",function(){return In}),n.d(r,"rightPad",function(){return Sn}),n.d(r,"repeatedTry",function(){return Tn}),n.d(r,"inferFromImplicitShape",function(){return En}),n.d(r,"parseAxisParam",function(){return An}),n.d(r,"squeezeShape",function(){return Rn}),n.d(r,"getTypedArrayFromDType",function(){return Dn}),n.d(r,"getArrayFromDType",function(){return On}),n.d(r,"checkConversionForErrors",function(){return Fn}),n.d(r,"isValidDtype",function(){return Mn}),n.d(r,"hasEncodingLoss",function(){return Pn}),n.d(r,"isTypedArray",function(){return Ln}),n.d(r,"bytesPerElement",function(){return Bn}),n.d(r,"bytesFromStringArray",function(){return Vn}),n.d(r,"isString",function(){return zn}),n.d(r,"isBoolean",function(){return Wn}),n.d(r,"isNumber",function(){return Gn}),n.d(r,"inferDtype",function(){return Un}),n.d(r,"isFunction",function(){return Hn}),n.d(r,"nearestDivisor",function(){return jn}),n.d(r,"computeStrides",function(){return qn}),n.d(r,"toNestedArray",function(){return Xn}),n.d(r,"makeOnesTypedArray",function(){return Qn}),n.d(r,"makeZerosTypedArray",function(){return Yn}),n.d(r,"makeZerosNestedTypedArray",function(){return Zn}),n.d(r,"assertNonNegativeIntegerDimensions",function(){return Jn}),n.d(r,"locToIndex",function(){return er}),n.d(r,"indexToLoc",function(){return tr}),n.d(r,"isPromise",function(){return nr}),n.d(r,"createScalarValue",function(){return bs}),n.d(r,"toTypedArray",function(){return ys}),n.d(r,"now",function(){return xs}),n.d(r,"fetch",function(){return vs}),n.d(r,"encodeString",function(){return ws}),n.d(r,"decodeString",function(){return _s});var a={};n.r(a),n.d(a,"makeTypesMatch",function(){return Hs}),n.d(a,"assertTypesMatch",function(){return js}),n.d(a,"isTensorInList",function(){return qs}),n.d(a,"getTensorsInContainer",function(){return Ks});var o={};n.r(o),n.d(o,"isMobile",function(){return ni}),n.d(o,"isBrowser",function(){return ri});var s={};n.r(s),n.d(s,"copyModel",function(){return nu}),n.d(s,"listModels",function(){return eu}),n.d(s,"moveModel",function(){return ru}),n.d(s,"removeModel",function(){return tu}),n.d(s,"browserFiles",function(){return hu}),n.d(s,"browserHTTPRequest",function(){return _u}),n.d(s,"concatenateArrayBuffers",function(){return wi}),n.d(s,"decodeWeights",function(){return bi}),n.d(s,"encodeWeights",function(){return gi}),n.d(s,"fromMemory",function(){return Cu}),n.d(s,"getLoadHandlers",function(){return Ti}),n.d(s,"getModelArtifactsInfoForJSON",function(){return Ni}),n.d(s,"getSaveHandlers",function(){return Si}),n.d(s,"http",function(){return wu}),n.d(s,"isHTTPScheme",function(){return xu}),n.d(s,"loadWeights",function(){return gu}),n.d(s,"registerLoadRouter",function(){return Ii}),n.d(s,"registerSaveRouter",function(){return $i}),n.d(s,"weightsLoaderFactory",function(){return bu}),n.d(s,"withSaveHandler",function(){return $u});var i={};n.r(i),n.d(i,"confusionMatrix",function(){return Eu});var u={};n.r(u),n.d(u,"fromPixelsAsync",function(){return Ou}),n.d(u,"toPixels",function(){return Fu}),n.d(u,"fromPixels",function(){return Mu});var l={};n.r(l),n.d(l,"prepareAndValidate",function(){return Pu});var c={};n.r(c),n.d(c,"validateUpdateShape",function(){return Lu}),n.d(c,"validateInput",function(){return Bu}),n.d(c,"calculateShapes",function(){return Vu});var d={};n.r(d),n.d(d,"assertParamsValid",function(){return zu}),n.d(d,"maskToAxes",function(){return Wu}),n.d(d,"computeOutShape",function(){return Gu}),n.d(d,"stridesWithElidedDims",function(){return Uu}),n.d(d,"getNormalizedAxes",function(){return qu}),n.d(d,"startIndicesWithElidedDims",function(){return Ku}),n.d(d,"stopIndicesWithElidedDims",function(){return Xu}),n.d(d,"stridesForAxis",function(){return Qu}),n.d(d,"startForAxis",function(){return Yu}),n.d(d,"stopForAxis",function(){return Zu}),n.d(d,"isSliceContinous",function(){return Ju}),n.d(d,"computeFlatOffset",function(){return el}),n.d(d,"parseSliceParams",function(){return tl}),n.d(d,"sliceInfo",function(){return nl});var p={};n.r(p),n.d(p,"Serializable",function(){return rl}),n.d(p,"SerializationMap",function(){return al}),n.d(p,"registerClass",function(){return ol});var h={};n.r(h),n.d(h,"TEST_EPSILON_FLOAT16",function(){return sl}),n.d(h,"expectArraysClose",function(){return il}),n.d(h,"testEpsilon",function(){return ul}),n.d(h,"expectPromiseToFail",function(){return cl}),n.d(h,"expectArraysEqual",function(){return dl}),n.d(h,"expectNumbersClose",function(){return pl}),n.d(h,"expectValuesInRange",function(){return fl}),n.d(h,"expectArrayBuffersEqual",function(){return ml}),n.d(h,"encodeStrings",function(){return gl});var f={};n.r(f),n.d(f,"conv2d",function(){return nf}),n.d(f,"depthwiseConv2d",function(){return of}),n.d(f,"matMul",function(){return sf});var m={};n.r(m),n.d(m,"segOpComputeOptimalWindowSize",function(){return Tm}),n.d(m,"computeOutShape",function(){return Em}),n.d(m,"collectGatherOpShapeInfo",function(){return Am});var g={};n.r(g),n.d(g,"axesAreInnerMostDims",function(){return tp}),n.d(g,"combineLocations",function(){return np}),n.d(g,"computeOutAndReduceShapes",function(){return rp}),n.d(g,"expandShapeToKeepDim",function(){return ap}),n.d(g,"assertAxesAreInnerMostDims",function(){return op}),n.d(g,"getAxesPermutation",function(){return sp}),n.d(g,"getUndoAxesPermutation",function(){return ip}),n.d(g,"getInnerMostAxes",function(){return up}),n.d(g,"getBroadcastDims",function(){return uc}),n.d(g,"getReductionAxes",function(){return lc}),n.d(g,"assertAndGetBroadcastShape",function(){return cc}),n.d(g,"assertParamsConsistent",function(){return em}),n.d(g,"computeOutShape",function(){return tm}),n.d(g,"computeDilation2DInfo",function(){return Sc}),n.d(g,"computePool2DInfo",function(){return Tc}),n.d(g,"computePool3DInfo",function(){return Ec}),n.d(g,"computeConv2DInfo",function(){return Ac}),n.d(g,"computeConv3DInfo",function(){return Rc}),n.d(g,"computeDefaultPad",function(){return Dc}),n.d(g,"tupleValuesAreOne",function(){return Lc}),n.d(g,"eitherStridesOrDilationsAreOne",function(){return Bc}),n.d(g,"convertConv2DDataFormat",function(){return Vc}),n.d(g,"getFusedDyActivation",function(){return Zh}),n.d(g,"getFusedBiasGradient",function(){return Jh}),n.d(g,"applyActivation",function(){return ef}),n.d(g,"shouldFuse",function(){return tf}),n.d(g,"PARALLELIZE_THRESHOLD",function(){return nm}),n.d(g,"computeOptimalWindowSize",function(){return rm}),n.d(g,"slice_util",function(){return d}),n.d(g,"upcastType",function(){return Gs}),n.d(g,"getImageCenter",function(){return am}),n.d(g,"getReshaped",function(){return om}),n.d(g,"getPermuted",function(){return sm}),n.d(g,"getReshapedPermuted",function(){return im}),n.d(g,"getSliceBeginCoords",function(){return um}),n.d(g,"getSliceSize",function(){return lm}),n.d(g,"prepareAndValidate",function(){return Pu}),n.d(g,"validateUpdateShape",function(){return Lu}),n.d(g,"validateInput",function(){return Bu}),n.d(g,"calculateShapes",function(){return Vu}),n.d(g,"SELU_SCALEALPHA",function(){return cm}),n.d(g,"SELU_SCALE",function(){return dm}),n.d(g,"ERF_P",function(){return pm}),n.d(g,"ERF_A1",function(){return hm}),n.d(g,"ERF_A2",function(){return fm}),n.d(g,"ERF_A3",function(){return mm}),n.d(g,"ERF_A4",function(){return gm}),n.d(g,"ERF_A5",function(){return bm}),n.d(g,"warn",function(){return ym}),n.d(g,"log",function(){return xm}),n.d(g,"mergeRealAndImagArrays",function(){return vm}),n.d(g,"splitRealAndImagArrays",function(){return wm}),n.d(g,"complexWithEvenIndex",function(){return _m}),n.d(g,"complexWithOddIndex",function(){return Nm}),n.d(g,"getComplexWithIndex",function(){return km}),n.d(g,"assignToTypedArray",function(){return Cm}),n.d(g,"exponents",function(){return $m}),n.d(g,"exponent",function(){return Im}),n.d(g,"prepareSplitSize",function(){return Sm}),n.d(g,"segment_util",function(){return m}),n.d(g,"fromUint8ToStringArray",function(){return Rm}),n.d(g,"fromStringArrayToUint8",function(){return Dm});var b={};n.r(b),n.d(b,"nonMaxSuppressionV3Impl",function(){return xf}),n.d(b,"nonMaxSuppressionV4Impl",function(){return vf}),n.d(b,"nonMaxSuppressionV5Impl",function(){return wf}),n.d(b,"whereImpl",function(){return Lh});var y={};n.r(y),n.d(y,"AdadeltaOptimizer",function(){return tc}),n.d(y,"AdagradOptimizer",function(){return rc}),n.d(y,"AdamOptimizer",function(){return sc}),n.d(y,"AdamaxOptimizer",function(){return pc}),n.d(y,"MomentumOptimizer",function(){return fc}),n.d(y,"Optimizer",function(){return ec}),n.d(y,"RMSPropOptimizer",function(){return mc}),n.d(y,"SGDOptimizer",function(){return hc}),n.d(y,"Tensor",function(){return Fs}),n.d(y,"TensorBuffer",function(){return As}),n.d(y,"Variable",function(){return Ms}),n.d(y,"Rank",function(){return Ps}),n.d(y,"sumOutType",function(){return Us}),n.d(y,"upcastType",function(){return Gs}),n.d(y,"abs",function(){return ic}),n.d(y,"acos",function(){return gc}),n.d(y,"acosh",function(){return bc}),n.d(y,"add",function(){return Bl}),n.d(y,"addN",function(){return yc}),n.d(y,"all",function(){return xc}),n.d(y,"any",function(){return vc}),n.d(y,"argMax",function(){return wc}),n.d(y,"argMin",function(){return _c}),n.d(y,"asin",function(){return Nc}),n.d(y,"asinh",function(){return kc}),n.d(y,"atan",function(){return Cc}),n.d(y,"atan2",function(){return $c}),n.d(y,"atanh",function(){return Ic}),n.d(y,"avgPool",function(){return Wc}),n.d(y,"avgPool3d",function(){return Gc}),n.d(y,"basicLSTMCell",function(){return Kc}),n.d(y,"batchToSpaceND",function(){return Xc}),n.d(y,"batchNorm",function(){return Qc}),n.d(y,"batchNorm2d",function(){return Yc}),n.d(y,"batchNorm3d",function(){return Zc}),n.d(y,"batchNorm4d",function(){return Jc}),n.d(y,"bincount",function(){return ed}),n.d(y,"broadcastTo",function(){return td}),n.d(y,"buffer",function(){return su}),n.d(y,"cast",function(){return iu}),n.d(y,"ceil",function(){return nd}),n.d(y,"clipByValue",function(){return rd}),n.d(y,"clone",function(){return uu}),n.d(y,"complex",function(){return pi}),n.d(y,"concat",function(){return Uc}),n.d(y,"concat1d",function(){return ad}),n.d(y,"concat2d",function(){return od}),n.d(y,"concat3d",function(){return sd}),n.d(y,"concat4d",function(){return id}),n.d(y,"conv1d",function(){return ld}),n.d(y,"conv2d",function(){return ud}),n.d(y,"conv2dTranspose",function(){return dd}),n.d(y,"conv3d",function(){return pd}),n.d(y,"conv3dTranspose",function(){return fd}),n.d(y,"cos",function(){return md}),n.d(y,"cosh",function(){return gd}),n.d(y,"cumsum",function(){return bd}),n.d(y,"denseBincount",function(){return yd}),n.d(y,"depthToSpace",function(){return xd}),n.d(y,"depthwiseConv2d",function(){return vd}),n.d(y,"diag",function(){return wd}),n.d(y,"dilation2d",function(){return _d}),n.d(y,"div",function(){return zl}),n.d(y,"divNoNan",function(){return Cd}),n.d(y,"dot",function(){return $d}),n.d(y,"elu",function(){return Id}),n.d(y,"equal",function(){return Nd}),n.d(y,"erf",function(){return Sd}),n.d(y,"exp",function(){return Td}),n.d(y,"expandDims",function(){return Ed}),n.d(y,"expm1",function(){return Ad}),n.d(y,"eye",function(){return Dd}),n.d(y,"fill",function(){return nc}),n.d(y,"floor",function(){return Od}),n.d(y,"floorDiv",function(){return Vl}),n.d(y,"gather",function(){return Fd}),n.d(y,"greater",function(){return Md}),n.d(y,"greaterEqual",function(){return Pd}),n.d(y,"imag",function(){return Ld}),n.d(y,"isFinite",function(){return Bd}),n.d(y,"isInf",function(){return Vd}),n.d(y,"isNaN",function(){return zd}),n.d(y,"leakyRelu",function(){return Wd}),n.d(y,"less",function(){return Gd}),n.d(y,"lessEqual",function(){return Ud}),n.d(y,"linspace",function(){return Hd}),n.d(y,"localResponseNormalization",function(){return jd}),n.d(y,"log",function(){return qd}),n.d(y,"log1p",function(){return Kd}),n.d(y,"logSigmoid",function(){return Yd}),n.d(y,"logSoftmax",function(){return ep}),n.d(y,"logSumExp",function(){return lp}),n.d(y,"logicalAnd",function(){return cp}),n.d(y,"logicalNot",function(){return dp}),n.d(y,"logicalOr",function(){return pp}),n.d(y,"logicalXor",function(){return hp}),n.d(y,"matMul",function(){return Iu}),n.d(y,"max",function(){return Zd}),n.d(y,"maxPool",function(){return fp}),n.d(y,"maxPool3d",function(){return mp}),n.d(y,"maxPoolWithArgmax",function(){return gp}),n.d(y,"maximum",function(){return dc}),n.d(y,"mean",function(){return bp}),n.d(y,"min",function(){return yp}),n.d(y,"minimum",function(){return xp}),n.d(y,"mirrorPad",function(){return vp}),n.d(y,"mod",function(){return wp}),n.d(y,"moments",function(){return _p}),n.d(y,"mul",function(){return Wl}),n.d(y,"multiRNNCell",function(){return Np}),n.d(y,"multinomial",function(){return kp}),n.d(y,"neg",function(){return Xd}),n.d(y,"notEqual",function(){return Cp}),n.d(y,"oneHot",function(){return Su}),n.d(y,"ones",function(){return Ip}),n.d(y,"onesLike",function(){return Sp}),n.d(y,"outerProduct",function(){return Tp}),n.d(y,"pad",function(){return Ep}),n.d(y,"pad1d",function(){return Ap}),n.d(y,"pad2d",function(){return Rp}),n.d(y,"pad3d",function(){return Dp}),n.d(y,"pad4d",function(){return Op}),n.d(y,"pool",function(){return Mp}),n.d(y,"pow",function(){return ac}),n.d(y,"prelu",function(){return Pp}),n.d(y,"print",function(){return lu}),n.d(y,"prod",function(){return Lp}),n.d(y,"rand",function(){return Bp}),n.d(y,"randomGamma",function(){return Up}),n.d(y,"randomNormal",function(){return Hp}),n.d(y,"randomUniform",function(){return jp}),n.d(y,"range",function(){return qp}),n.d(y,"real",function(){return Kp}),n.d(y,"reciprocal",function(){return Xp}),n.d(y,"relu",function(){return Qp}),n.d(y,"relu6",function(){return Yp}),n.d(y,"reshape",function(){return zc}),n.d(y,"reverse",function(){return Zp}),n.d(y,"reverse1d",function(){return Jp}),n.d(y,"reverse2d",function(){return eh}),n.d(y,"reverse3d",function(){return th}),n.d(y,"reverse4d",function(){return nh}),n.d(y,"round",function(){return rh}),n.d(y,"rsqrt",function(){return ah}),n.d(y,"scalar",function(){return Jl}),n.d(y,"selu",function(){return oh}),n.d(y,"separableConv2d",function(){return sh}),n.d(y,"setdiff1dAsync",function(){return ih}),n.d(y,"sigmoid",function(){return Hc}),n.d(y,"sign",function(){return uh}),n.d(y,"sin",function(){return lh}),n.d(y,"sinh",function(){return ch}),n.d(y,"slice",function(){return jc}),n.d(y,"slice1d",function(){return dh}),n.d(y,"slice2d",function(){return ph}),n.d(y,"slice3d",function(){return hh}),n.d(y,"slice4d",function(){return fh}),n.d(y,"softmax",function(){return mh}),n.d(y,"softplus",function(){return Qd}),n.d(y,"spaceToBatchND",function(){return Fp}),n.d(y,"fft",function(){return gh}),n.d(y,"ifft",function(){return bh}),n.d(y,"irfft",function(){return yh}),n.d(y,"rfft",function(){return vh}),n.d(y,"split",function(){return xh}),n.d(y,"sqrt",function(){return Gl}),n.d(y,"square",function(){return Ul}),n.d(y,"squaredDifference",function(){return wh}),n.d(y,"squeeze",function(){return _h}),n.d(y,"stack",function(){return Nh}),n.d(y,"step",function(){return kh}),n.d(y,"stridedSlice",function(){return Ch}),n.d(y,"sub",function(){return oc}),n.d(y,"sum",function(){return Jd}),n.d(y,"tan",function(){return $h}),n.d(y,"tanh",function(){return qc}),n.d(y,"tensor",function(){return fi}),n.d(y,"tensor1d",function(){return Ih}),n.d(y,"tensor2d",function(){return Sh}),n.d(y,"tensor3d",function(){return Au}),n.d(y,"tensor4d",function(){return Th}),n.d(y,"tensor5d",function(){return Eh}),n.d(y,"tensor6d",function(){return Ah}),n.d(y,"tile",function(){return Rd}),n.d(y,"topk",function(){return Rh}),n.d(y,"truncatedNormal",function(){return Dh}),n.d(y,"unique",function(){return Oh}),n.d(y,"unsortedSegmentSum",function(){return Fh}),n.d(y,"unstack",function(){return Mh}),n.d(y,"variable",function(){return Ph}),n.d(y,"where",function(){return kd}),n.d(y,"whereAsync",function(){return Bh}),n.d(y,"zeros",function(){return $p}),n.d(y,"zerosLike",function(){return Hl}),n.d(y,"booleanMaskAsync",function(){return Vh}),n.d(y,"transpose",function(){return Tu}),n.d(y,"norm",function(){return Wh}),n.d(y,"movingAverage",function(){return Gh}),n.d(y,"scatterND",function(){return Uh}),n.d(y,"sparseToDense",function(){return Hh}),n.d(y,"gatherND",function(){return jh}),n.d(y,"dropout",function(){return qh}),n.d(y,"enclosingPowerOfTwo",function(){return Kh}),n.d(y,"cosineWindow",function(){return Xh}),n.d(y,"inTopKAsync",function(){return Qh}),n.d(y,"op",function(){return di}),n.d(y,"OP_SCOPE_SUFFIX",function(){return ci}),n.d(y,"image",function(){return qf}),n.d(y,"linalg",function(){return Kf}),n.d(y,"losses",function(){return Xf}),n.d(y,"spectral",function(){return Hf}),n.d(y,"fused",function(){return f}),n.d(y,"signal",function(){return jf}),n.d(y,"Reduction",function(){return Ff}),n.d(y,"train",function(){return Yf}),n.d(y,"enableProdMode",function(){return yl}),n.d(y,"enableDebugMode",function(){return xl}),n.d(y,"disableDeprecationWarnings",function(){return vl}),n.d(y,"deprecationWarn",function(){return wl}),n.d(y,"disposeVariables",function(){return _l}),n.d(y,"engine",function(){return Nl}),n.d(y,"memory",function(){return kl}),n.d(y,"profile",function(){return Cl}),n.d(y,"tidy",function(){return $l}),n.d(y,"dispose",function(){return Il}),n.d(y,"keep",function(){return Sl}),n.d(y,"time",function(){return Tl}),n.d(y,"setBackend",function(){return El}),n.d(y,"ready",function(){return Al}),n.d(y,"getBackend",function(){return Rl}),n.d(y,"removeBackend",function(){return Dl}),n.d(y,"findBackend",function(){return Ol}),n.d(y,"findBackendFactory",function(){return Fl}),n.d(y,"registerBackend",function(){return Ml}),n.d(y,"backend",function(){return Pl}),n.d(y,"setPlatform",function(){return Ll}),n.d(y,"getKernel",function(){return us}),n.d(y,"getGradient",function(){return ls}),n.d(y,"getKernelsForBackend",function(){return cs}),n.d(y,"registerKernel",function(){return ds}),n.d(y,"registerGradient",function(){return ps}),n.d(y,"unregisterKernel",function(){return hs}),n.d(y,"unregisterGradient",function(){return fs}),n.d(y,"copyRegisteredKernels",function(){return ms}),n.d(y,"customGrad",function(){return Yl}),n.d(y,"grad",function(){return jl}),n.d(y,"grads",function(){return ql}),n.d(y,"valueAndGrad",function(){return Kl}),n.d(y,"valueAndGrads",function(){return Xl}),n.d(y,"variableGrads",function(){return Ql}),n.d(y,"Environment",function(){return rr}),n.d(y,"env",function(){return ar}),n.d(y,"ENV",function(){return sr}),n.d(y,"version_core",function(){return bl}),n.d(y,"nextFrame",function(){return Jf}),n.d(y,"browser",function(){return u}),n.d(y,"io",function(){return s}),n.d(y,"math",function(){return i}),n.d(y,"serialization",function(){return p}),n.d(y,"test_util",function(){return h}),n.d(y,"util",function(){return r}),n.d(y,"backend_util",function(){return g}),n.d(y,"tensor_util",function(){return a}),n.d(y,"slice_util",function(){return d}),n.d(y,"gather_util",function(){return l}),n.d(y,"scatter_util",function(){return c}),n.d(y,"device_util",function(){return o}),n.d(y,"kernel_impls",function(){return b}),n.d(y,"KernelBackend",function(){return un}),n.d(y,"DataStorage",function(){return sn}),n.d(y,"Abs",function(){return lr}),n.d(y,"Acos",function(){return cr}),n.d(y,"Acosh",function(){return dr}),n.d(y,"Add",function(){return pr}),n.d(y,"AddN",function(){return hr}),n.d(y,"All",function(){return fr}),n.d(y,"Any",function(){return mr}),n.d(y,"ArgMax",function(){return gr}),n.d(y,"ArgMin",function(){return br}),n.d(y,"Asin",function(){return yr}),n.d(y,"Asinh",function(){return xr}),n.d(y,"Atan",function(){return vr}),n.d(y,"Atanh",function(){return wr}),n.d(y,"Atan2",function(){return _r}),n.d(y,"AvgPool",function(){return Nr}),n.d(y,"AvgPoolGrad",function(){return kr}),n.d(y,"AvgPool3D",function(){return Cr}),n.d(y,"AvgPool3DGrad",function(){return $r}),n.d(y,"BatchMatMul",function(){return Ir}),n.d(y,"BatchToSpaceND",function(){return Sr}),n.d(y,"Bincount",function(){return Tr}),n.d(y,"BroadcastTo",function(){return Er}),n.d(y,"Cast",function(){return Ar}),n.d(y,"Ceil",function(){return Rr}),n.d(y,"ClipByValue",function(){return Dr}),n.d(y,"Complex",function(){return Or}),n.d(y,"ComplexAbs",function(){return Fr}),n.d(y,"Concat",function(){return Mr}),n.d(y,"Conv2D",function(){return Pr}),n.d(y,"Conv2DBackpropFilter",function(){return Lr}),n.d(y,"Conv2DBackpropInput",function(){return Br}),n.d(y,"Conv3D",function(){return Vr}),n.d(y,"Conv3DBackpropFilterV2",function(){return zr}),n.d(y,"Conv3DBackpropInputV2",function(){return Wr}),n.d(y,"Cos",function(){return Gr}),n.d(y,"Cosh",function(){return Ur}),n.d(y,"Cumsum",function(){return Hr}),n.d(y,"CropAndResize",function(){return jr}),n.d(y,"DenseBincount",function(){return qr}),n.d(y,"DepthToSpace",function(){return Kr}),n.d(y,"DepthwiseConv2dNative",function(){return Xr}),n.d(y,"DepthwiseConv2dNativeBackpropFilter",function(){return Qr}),n.d(y,"DepthwiseConv2dNativeBackpropInput",function(){return Yr}),n.d(y,"Diag",function(){return Zr}),n.d(y,"Dilation2D",function(){return Jr}),n.d(y,"Dilation2DBackpropInput",function(){return ea}),n.d(y,"Dilation2DBackpropFilter",function(){return ta}),n.d(y,"RealDiv",function(){return na}),n.d(y,"Elu",function(){return ra}),n.d(y,"EluGrad",function(){return aa}),n.d(y,"Erf",function(){return oa}),n.d(y,"Equal",function(){return sa}),n.d(y,"Exp",function(){return ia}),n.d(y,"ExpandDims",function(){return ua}),n.d(y,"Expm1",function(){return la}),n.d(y,"FFT",function(){return ca}),n.d(y,"Fill",function(){return da}),n.d(y,"FlipLeftRight",function(){return pa}),n.d(y,"Floor",function(){return ha}),n.d(y,"FloorDiv",function(){return fa}),n.d(y,"FusedBatchNorm",function(){return ma}),n.d(y,"GatherV2",function(){return ga}),n.d(y,"GatherNd",function(){return ba}),n.d(y,"Greater",function(){return ya}),n.d(y,"GreaterEqual",function(){return xa}),n.d(y,"Identity",function(){return va}),n.d(y,"IFFT",function(){return wa}),n.d(y,"Imag",function(){return _a}),n.d(y,"IsFinite",function(){return Na}),n.d(y,"IsInf",function(){return ka}),n.d(y,"IsNan",function(){return Ca}),n.d(y,"LeakyRelu",function(){return $a}),n.d(y,"Less",function(){return Ia}),n.d(y,"LessEqual",function(){return Sa}),n.d(y,"LinSpace",function(){return Ta}),n.d(y,"Log",function(){return Ea}),n.d(y,"Log1p",function(){return Aa}),n.d(y,"LogicalAnd",function(){return Ra}),n.d(y,"LogicalNot",function(){return Da}),n.d(y,"LogicalOr",function(){return Oa}),n.d(y,"LogSoftmax",function(){return Fa}),n.d(y,"LRN",function(){return Ma}),n.d(y,"LRNGrad",function(){return Pa}),n.d(y,"Max",function(){return La}),n.d(y,"Maximum",function(){return Ba}),n.d(y,"MaxPool",function(){return Va}),n.d(y,"MaxPoolGrad",function(){return za}),n.d(y,"MaxPool3D",function(){return Wa}),n.d(y,"MaxPool3DGrad",function(){return Ga}),n.d(y,"MaxPoolWithArgmax",function(){return Ua}),n.d(y,"Mean",function(){return Ha}),n.d(y,"Min",function(){return ja}),n.d(y,"Minimum",function(){return qa}),n.d(y,"MirrorPad",function(){return Ka}),n.d(y,"Mod",function(){return Xa}),n.d(y,"Multinomial",function(){return Qa}),n.d(y,"Multiply",function(){return Ya}),n.d(y,"Neg",function(){return Za}),n.d(y,"NotEqual",function(){return Ja}),n.d(y,"NonMaxSuppressionV3",function(){return eo}),n.d(y,"NonMaxSuppressionV4",function(){return to}),n.d(y,"NonMaxSuppressionV5",function(){return no}),n.d(y,"OnesLike",function(){return ro}),n.d(y,"OneHot",function(){return ao}),n.d(y,"Pack",function(){return oo}),n.d(y,"PadV2",function(){return so}),n.d(y,"Pool",function(){return io}),n.d(y,"Pow",function(){return uo}),n.d(y,"Prelu",function(){return lo}),n.d(y,"Prod",function(){return co}),n.d(y,"Range",function(){return po}),n.d(y,"Real",function(){return ho}),n.d(y,"Reciprocal",function(){return fo}),n.d(y,"Relu",function(){return mo}),n.d(y,"Reshape",function(){return go}),n.d(y,"ResizeNearestNeighbor",function(){return bo}),n.d(y,"ResizeNearestNeighborGrad",function(){return yo}),n.d(y,"ResizeBilinear",function(){return xo}),n.d(y,"ResizeBilinearGrad",function(){return vo}),n.d(y,"Relu6",function(){return wo}),n.d(y,"Reverse",function(){return _o}),n.d(y,"Round",function(){return No}),n.d(y,"Rsqrt",function(){return ko}),n.d(y,"ScatterNd",function(){return Co}),n.d(y,"Select",function(){return $o}),n.d(y,"Selu",function(){return Io}),n.d(y,"Slice",function(){return So}),n.d(y,"Sin",function(){return To}),n.d(y,"Sinh",function(){return Eo}),n.d(y,"Sign",function(){return Ao}),n.d(y,"Sigmoid",function(){return Ro}),n.d(y,"Softplus",function(){return Do}),n.d(y,"Sqrt",function(){return Oo}),n.d(y,"Sum",function(){return Fo}),n.d(y,"SpaceToBatchND",function(){return Mo}),n.d(y,"SplitV",function(){return Po}),n.d(y,"Softmax",function(){return Lo}),n.d(y,"SquaredDifference",function(){return Bo}),n.d(y,"Square",function(){return Vo}),n.d(y,"Sub",function(){return zo}),n.d(y,"SparseToDense",function(){return Wo}),n.d(y,"StridedSlice",function(){return Go}),n.d(y,"Tan",function(){return Uo}),n.d(y,"Tanh",function(){return Ho}),n.d(y,"Tile",function(){return jo}),n.d(y,"TopK",function(){return qo}),n.d(y,"Transform",function(){return Ko}),n.d(y,"Transpose",function(){return Xo}),n.d(y,"Unique",function(){return Qo}),n.d(y,"Unpack",function(){return Yo}),n.d(y,"UnsortedSegmentSum",function(){return Zo}),n.d(y,"ZerosLike",function(){return Jo}),n.d(y,"Step",function(){return es}),n.d(y,"FromPixels",function(){return ts}),n.d(y,"RotateWithOffset",function(){return ns}),n.d(y,"_FusedMatMul",function(){return rs}),n.d(y,"FusedConv2D",function(){return as}),n.d(y,"FusedDepthwiseConv2D",function(){return os});var x={};n.r(x),n.d(x,"simpleAbsImpl",function(){return Ug}),n.d(x,"addImpl",function(){return Zg}),n.d(x,"bincountImpl",function(){return eb}),n.d(x,"bincountReduceImpl",function(){return tb}),n.d(x,"ceilImpl",function(){return ab}),n.d(x,"concatImpl",function(){return ob}),n.d(x,"expImpl",function(){return sb}),n.d(x,"expm1Impl",function(){return ib}),n.d(x,"floorImpl",function(){return ub}),n.d(x,"gatherV2Impl",function(){return lb}),n.d(x,"greaterImpl",function(){return cb}),n.d(x,"lessImpl",function(){return db}),n.d(x,"linSpaceImpl",function(){return pb}),n.d(x,"logImpl",function(){return hb}),n.d(x,"maxImpl",function(){return fb}),n.d(x,"maximumImpl",function(){return mb}),n.d(x,"minimumImpl",function(){return gb}),n.d(x,"multiplyImpl",function(){return bb}),n.d(x,"negImpl",function(){return xb}),n.d(x,"notEqualImpl",function(){return vb}),n.d(x,"prodImpl",function(){return _b}),n.d(x,"rangeImpl",function(){return Nb}),n.d(x,"rsqrtImpl",function(){return kb}),n.d(x,"sliceImpl",function(){return Cb}),n.d(x,"squaredDifferenceImpl",function(){return $b}),n.d(x,"stridedSliceImpl",function(){return Ib}),n.d(x,"subImpl",function(){return Sb}),n.d(x,"tileImpl",function(){return Eb}),n.d(x,"topKImpl",function(){return Ab}),n.d(x,"transposeImpl",function(){return wb}),n.d(x,"uniqueImpl",function(){return Rb});var v={};n.r(v),n.d(v,"json",function(){return Hk});var w={};n.r(w),n.d(w,"json",function(){return jk});var _={};n.r(_),n.d(_,"json",function(){return qk});var N={};n.r(N),n.d(N,"json",function(){return Kk});var k={};n.r(k),n.d(k,"json",function(){return Xk});var C={};n.r(C),n.d(C,"json",function(){return Qk});var $={};n.r($),n.d($,"json",function(){return Yk});var I={};n.r(I),n.d(I,"json",function(){return Zk});var S={};n.r(S),n.d(S,"json",function(){return Jk});var T={};n.r(T),n.d(T,"json",function(){return eC});var E={};n.r(E),n.d(E,"json",function(){return tC});var A={};n.r(A),n.d(A,"json",function(){return nC});var R={};n.r(R),n.d(R,"json",function(){return rC});var D={};n.r(D),n.d(D,"json",function(){return aC});var O={};n.r(O),n.d(O,"json",function(){return oC});var F={};n.r(F),n.d(F,"json",function(){return sC});var M={};n.r(M),n.d(M,"json",function(){return iC});var P=n("ofXK"),L=n("fXoL"),B=n("tyNb"),V=n("R1ws"),z=n("FKr1");const W=["*",[["mat-card-footer"]]],G=["*","mat-card-footer"];let U=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=L.Gb({type:e,selectors:[["mat-card-content"],["","mat-card-content",""],["","matCardContent",""]],hostAttrs:[1,"mat-card-content"]}),e})(),H=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=L.Gb({type:e,selectors:[["mat-card-title"],["","mat-card-title",""],["","matCardTitle",""]],hostAttrs:[1,"mat-card-title"]}),e})(),j=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=L.Gb({type:e,selectors:[["","mat-card-image",""],["","matCardImage",""]],hostAttrs:[1,"mat-card-image"]}),e})(),q=(()=>{class e{constructor(e){this._animationMode=e}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(V.a,8))},e.\u0275cmp=L.Fb({type:e,selectors:[["mat-card"]],hostAttrs:[1,"mat-card","mat-focus-indicator"],hostVars:2,hostBindings:function(e,t){2&e&&L.Db("_mat-animation-noopable","NoopAnimations"===t._animationMode)},exportAs:["matCard"],ngContentSelectors:G,decls:4,vars:0,template:function(e,t){1&e&&(L.dc(W),L.cc(0),L.rc(1,"\n"),L.cc(2,1),L.rc(3,"\n"))},styles:[".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\n"],encapsulation:2,changeDetection:0}),e})(),K=(()=>{class e{}return e.\u0275mod=L.Jb({type:e}),e.\u0275inj=L.Ib({factory:function(t){return new(t||e)},imports:[[z.c],z.c]}),e})(),X=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=L.Fb({type:e,selectors:[["app-option-card"]],inputs:{image:"image",text:"text"},decls:11,vars:2,consts:[[1,"example-card"],["mat-card-image","","alt","Photo of a Shiba Inu",3,"src"]],template:function(e,t){1&e&&(L.Qb(0,"mat-card",0),L.rc(1,"\n  "),L.Mb(2,"img",1),L.rc(3,"\n  "),L.Qb(4,"mat-card-content"),L.rc(5,"\n    "),L.Qb(6,"p"),L.rc(7),L.Pb(),L.rc(8,"\n  "),L.Pb(),L.rc(9,"\n"),L.Pb(),L.rc(10,"\n")),2&e&&(L.Bb(2),L.fc("src",t.image,L.lc),L.Bb(5),L.tc("\n      ",t.text,"\n    "))},directives:[q,j,U],styles:["mat-card[_ngcontent-%COMP%]{margin:5vw}mat-card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:35vw;height:35vw;object-fit:cover}"]}),e})(),Q=(()=>{class e{constructor(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=L.Fb({type:e,selectors:[["app-dashboard"]],decls:12,vars:0,consts:[[1,"container"],["routerLink","/webcam","routerLinkActive","active"],["text","Using Camera","image","https://cdn.vox-cdn.com/thumbor/WnLacfl9OVPN1dPqekfkLEivwSA=/1400x1400/filters:format(jpeg)/cdn.vox-cdn.com/uploads/chorus_asset/file/20070440/jporter_200705_4087_0005.0.jpg"],["routerLink","/params","routerLinkActive","active"],["text","Using Form","image","https://www.altair.com/newsroom/wp-content/uploads/MainImage-2.jpg"]],template:function(e,t){1&e&&(L.Qb(0,"h2"),L.rc(1,"Please choose an option:"),L.Pb(),L.rc(2,"\n"),L.Qb(3,"div",0),L.rc(4,"\n  "),L.Qb(5,"a",1),L.Mb(6,"app-option-card",2),L.Pb(),L.rc(7,"\n  "),L.Qb(8,"a",3),L.Mb(9,"app-option-card",4),L.Pb(),L.rc(10,"\n"),L.Pb(),L.rc(11,"\n"))},directives:[B.b,B.a,X],styles:[".container[_ngcontent-%COMP%]{display:flex;align-items:center;height:80vh}"]}),e})();var Y=n("3Pt+"),Z=n("bTqV"),J=n("NFeN"),ee=n("nLfN"),te=n("8LU1"),ne=n("EY2u"),re=n("XNiG"),ae=n("xgIS"),oe=(n("3UWI"),n("1G5W"));const se=Object(ee.f)({passive:!0});let ie=(()=>{class e{constructor(e,t){this._platform=e,this._ngZone=t,this._monitoredElements=new Map}monitor(e){if(!this._platform.isBrowser)return ne.a;const t=Object(te.d)(e),n=this._monitoredElements.get(t);if(n)return n.subject;const r=new re.a,a="cdk-text-field-autofilled",o=e=>{"cdk-text-field-autofill-start"!==e.animationName||t.classList.contains(a)?"cdk-text-field-autofill-end"===e.animationName&&t.classList.contains(a)&&(t.classList.remove(a),this._ngZone.run(()=>r.next({target:e.target,isAutofilled:!1}))):(t.classList.add(a),this._ngZone.run(()=>r.next({target:e.target,isAutofilled:!0})))};return this._ngZone.runOutsideAngular(()=>{t.addEventListener("animationstart",o,se),t.classList.add("cdk-text-field-autofill-monitored")}),this._monitoredElements.set(t,{subject:r,unlisten:()=>{t.removeEventListener("animationstart",o,se)}}),r}stopMonitoring(e){const t=Object(te.d)(e),n=this._monitoredElements.get(t);n&&(n.unlisten(),n.subject.complete(),t.classList.remove("cdk-text-field-autofill-monitored"),t.classList.remove("cdk-text-field-autofilled"),this._monitoredElements.delete(t))}ngOnDestroy(){this._monitoredElements.forEach((e,t)=>this.stopMonitoring(t))}}return e.\u0275fac=function(t){return new(t||e)(L.Ub(ee.a),L.Ub(L.A))},e.\u0275prov=Object(L.Hb)({factory:function(){return new e(Object(L.Ub)(ee.a),Object(L.Ub)(L.A))},token:e,providedIn:"root"}),e})(),ue=(()=>{class e{}return e.\u0275mod=L.Jb({type:e}),e.\u0275inj=L.Ib({factory:function(t){return new(t||e)},imports:[[ee.b]]}),e})();var le=n("GU7r"),ce=n("VRyK"),de=n("JX91"),pe=n("IzEk"),he=n("R0Ic"),fe=n("cH1L");const me=["underline"],ge=["connectionContainer"],be=["inputContainer"],ye=["label"];function xe(e,t){1&e&&(L.Ob(0),L.rc(1,"\n      "),L.Qb(2,"div",14),L.rc(3,"\n        "),L.Mb(4,"div",15),L.rc(5,"\n        "),L.Mb(6,"div",16),L.rc(7,"\n        "),L.Mb(8,"div",17),L.rc(9,"\n      "),L.Pb(),L.rc(10,"\n      "),L.Qb(11,"div",18),L.rc(12,"\n        "),L.Mb(13,"div",15),L.rc(14,"\n        "),L.Mb(15,"div",16),L.rc(16,"\n        "),L.Mb(17,"div",17),L.rc(18,"\n      "),L.Pb(),L.rc(19,"\n    "),L.Nb())}function ve(e,t){1&e&&(L.Qb(0,"div",19),L.rc(1,"\n      "),L.cc(2,1),L.rc(3,"\n    "),L.Pb())}function we(e,t){if(1&e&&(L.Ob(0),L.rc(1,"\n            "),L.cc(2,2),L.rc(3,"\n            "),L.Qb(4,"span"),L.rc(5),L.Pb(),L.rc(6,"\n          "),L.Nb()),2&e){const e=L.Zb(2);L.Bb(5),L.sc(e._control.placeholder)}}function _e(e,t){1&e&&L.cc(0,3,["*ngSwitchCase","true"])}function Ne(e,t){1&e&&(L.Qb(0,"span",23),L.rc(1," *"),L.Pb())}function ke(e,t){if(1&e){const e=L.Rb();L.Qb(0,"label",20,21),L.Xb("cdkObserveContent",function(){return L.kc(e),L.Zb().updateOutlineGap()}),L.rc(2,"\n\n          "),L.rc(3,"\n          "),L.qc(4,we,7,1,"ng-container",12),L.rc(5,"\n\n          "),L.qc(6,_e,1,0,"ng-content",12),L.rc(7,"\n\n          "),L.rc(8,"\n          "),L.qc(9,Ne,2,0,"span",22),L.rc(10,"\n        "),L.Pb()}if(2&e){const e=L.Zb();L.Db("mat-empty",e._control.empty&&!e._shouldAlwaysFloat())("mat-form-field-empty",e._control.empty&&!e._shouldAlwaysFloat())("mat-accent","accent"==e.color)("mat-warn","warn"==e.color),L.ec("cdkObserveContentDisabled","outline"!=e.appearance)("id",e._labelId)("ngSwitch",e._hasLabel()),L.Cb("for",e._control.id)("aria-owns",e._control.id),L.Bb(4),L.ec("ngSwitchCase",!1),L.Bb(2),L.ec("ngSwitchCase",!0),L.Bb(3),L.ec("ngIf",!e.hideRequiredMarker&&e._control.required&&!e._control.disabled)}}function Ce(e,t){1&e&&(L.Qb(0,"div",24),L.rc(1,"\n      "),L.cc(2,4),L.rc(3,"\n    "),L.Pb())}function $e(e,t){if(1&e&&(L.Qb(0,"div",25,26),L.rc(2,"\n    "),L.Mb(3,"span",27),L.rc(4,"\n  "),L.Pb()),2&e){const e=L.Zb();L.Bb(3),L.Db("mat-accent","accent"==e.color)("mat-warn","warn"==e.color)}}function Ie(e,t){if(1&e&&(L.Qb(0,"div"),L.rc(1,"\n      "),L.cc(2,5),L.rc(3,"\n    "),L.Pb()),2&e){const e=L.Zb();L.ec("@transitionMessages",e._subscriptAnimationState)}}function Se(e,t){if(1&e&&(L.Qb(0,"div",31),L.rc(1),L.Pb()),2&e){const e=L.Zb(2);L.ec("id",e._hintLabelId),L.Bb(1),L.sc(e.hintLabel)}}function Te(e,t){if(1&e&&(L.Qb(0,"div",28),L.rc(1,"\n      "),L.rc(2,"\n      "),L.qc(3,Se,2,2,"div",29),L.rc(4,"\n      "),L.cc(5,6),L.rc(6,"\n      "),L.Mb(7,"div",30),L.rc(8,"\n      "),L.cc(9,7),L.rc(10,"\n    "),L.Pb()),2&e){const e=L.Zb();L.ec("@transitionMessages",e._subscriptAnimationState),L.Bb(3),L.ec("ngIf",e.hintLabel)}}const Ee=["*",[["","matPrefix",""]],[["mat-placeholder"]],[["mat-label"]],[["","matSuffix",""]],[["mat-error"]],[["mat-hint",3,"align","end"]],[["mat-hint","align","end"]]],Ae=["*","[matPrefix]","mat-placeholder","mat-label","[matSuffix]","mat-error","mat-hint:not([align='end'])","mat-hint[align='end']"],Re=new L.r("MatError"),De={transitionMessages:Object(he.j)("transitionMessages",[Object(he.g)("enter",Object(he.h)({opacity:1,transform:"translateY(0%)"})),Object(he.i)("void => enter",[Object(he.h)({opacity:0,transform:"translateY(-5px)"}),Object(he.e)("300ms cubic-bezier(0.55, 0, 0.55, 0.2)")])])};let Oe=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=L.Gb({type:e}),e})(),Fe=0;const Me=new L.r("MatHint");let Pe=(()=>{class e{constructor(){this.align="start",this.id="mat-hint-"+Fe++}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=L.Gb({type:e,selectors:[["mat-hint"]],hostAttrs:[1,"mat-hint"],hostVars:4,hostBindings:function(e,t){2&e&&(L.Cb("id",t.id)("align",null),L.Db("mat-form-field-hint-end","end"===t.align))},inputs:{align:"align",id:"id"},features:[L.Ab([{provide:Me,useExisting:e}])]}),e})(),Le=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=L.Gb({type:e,selectors:[["mat-label"]]}),e})(),Be=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=L.Gb({type:e,selectors:[["mat-placeholder"]]}),e})();const Ve=new L.r("MatPrefix"),ze=new L.r("MatSuffix");let We=0;class Ge{constructor(e){this._elementRef=e}}const Ue=Object(z.i)(Ge,"primary"),He=new L.r("MAT_FORM_FIELD_DEFAULT_OPTIONS"),je=new L.r("MatFormField");let qe=(()=>{class e extends Ue{constructor(e,t,n,r,a,o,s,i){super(e),this._elementRef=e,this._changeDetectorRef=t,this._dir=r,this._defaults=a,this._platform=o,this._ngZone=s,this._outlineGapCalculationNeededImmediately=!1,this._outlineGapCalculationNeededOnStable=!1,this._destroyed=new re.a,this._showAlwaysAnimate=!1,this._subscriptAnimationState="",this._hintLabel="",this._hintLabelId="mat-hint-"+We++,this._labelId="mat-form-field-label-"+We++,this.floatLabel=this._getDefaultFloatLabelState(),this._animationsEnabled="NoopAnimations"!==i,this.appearance=a&&a.appearance?a.appearance:"legacy",this._hideRequiredMarker=!(!a||null==a.hideRequiredMarker)&&a.hideRequiredMarker}get appearance(){return this._appearance}set appearance(e){const t=this._appearance;this._appearance=e||this._defaults&&this._defaults.appearance||"legacy","outline"===this._appearance&&t!==e&&(this._outlineGapCalculationNeededOnStable=!0)}get hideRequiredMarker(){return this._hideRequiredMarker}set hideRequiredMarker(e){this._hideRequiredMarker=Object(te.b)(e)}_shouldAlwaysFloat(){return"always"===this.floatLabel&&!this._showAlwaysAnimate}_canLabelFloat(){return"never"!==this.floatLabel}get hintLabel(){return this._hintLabel}set hintLabel(e){this._hintLabel=e,this._processHints()}get floatLabel(){return"legacy"!==this.appearance&&"never"===this._floatLabel?"auto":this._floatLabel}set floatLabel(e){e!==this._floatLabel&&(this._floatLabel=e||this._getDefaultFloatLabelState(),this._changeDetectorRef.markForCheck())}get _control(){return this._explicitFormFieldControl||this._controlNonStatic||this._controlStatic}set _control(e){this._explicitFormFieldControl=e}getLabelId(){return this._hasFloatingLabel()?this._labelId:null}getConnectedOverlayOrigin(){return this._connectionContainerRef||this._elementRef}ngAfterContentInit(){this._validateControlChild();const e=this._control;e.controlType&&this._elementRef.nativeElement.classList.add(`mat-form-field-type-${e.controlType}`),e.stateChanges.pipe(Object(de.a)(null)).subscribe(()=>{this._validatePlaceholders(),this._syncDescribedByIds(),this._changeDetectorRef.markForCheck()}),e.ngControl&&e.ngControl.valueChanges&&e.ngControl.valueChanges.pipe(Object(oe.a)(this._destroyed)).subscribe(()=>this._changeDetectorRef.markForCheck()),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.pipe(Object(oe.a)(this._destroyed)).subscribe(()=>{this._outlineGapCalculationNeededOnStable&&this.updateOutlineGap()})}),Object(ce.a)(this._prefixChildren.changes,this._suffixChildren.changes).subscribe(()=>{this._outlineGapCalculationNeededOnStable=!0,this._changeDetectorRef.markForCheck()}),this._hintChildren.changes.pipe(Object(de.a)(null)).subscribe(()=>{this._processHints(),this._changeDetectorRef.markForCheck()}),this._errorChildren.changes.pipe(Object(de.a)(null)).subscribe(()=>{this._syncDescribedByIds(),this._changeDetectorRef.markForCheck()}),this._dir&&this._dir.change.pipe(Object(oe.a)(this._destroyed)).subscribe(()=>{"function"==typeof requestAnimationFrame?this._ngZone.runOutsideAngular(()=>{requestAnimationFrame(()=>this.updateOutlineGap())}):this.updateOutlineGap()})}ngAfterContentChecked(){this._validateControlChild(),this._outlineGapCalculationNeededImmediately&&this.updateOutlineGap()}ngAfterViewInit(){this._subscriptAnimationState="enter",this._changeDetectorRef.detectChanges()}ngOnDestroy(){this._destroyed.next(),this._destroyed.complete()}_shouldForward(e){const t=this._control?this._control.ngControl:null;return t&&t[e]}_hasPlaceholder(){return!!(this._control&&this._control.placeholder||this._placeholderChild)}_hasLabel(){return!(!this._labelChildNonStatic&&!this._labelChildStatic)}_shouldLabelFloat(){return this._canLabelFloat()&&(this._control&&this._control.shouldLabelFloat||this._shouldAlwaysFloat())}_hideControlPlaceholder(){return"legacy"===this.appearance&&!this._hasLabel()||this._hasLabel()&&!this._shouldLabelFloat()}_hasFloatingLabel(){return this._hasLabel()||"legacy"===this.appearance&&this._hasPlaceholder()}_getDisplayedMessages(){return this._errorChildren&&this._errorChildren.length>0&&this._control.errorState?"error":"hint"}_animateAndLockLabel(){this._hasFloatingLabel()&&this._canLabelFloat()&&(this._animationsEnabled&&this._label&&(this._showAlwaysAnimate=!0,Object(ae.a)(this._label.nativeElement,"transitionend").pipe(Object(pe.a)(1)).subscribe(()=>{this._showAlwaysAnimate=!1})),this.floatLabel="always",this._changeDetectorRef.markForCheck())}_validatePlaceholders(){}_processHints(){this._validateHints(),this._syncDescribedByIds()}_validateHints(){}_getDefaultFloatLabelState(){return this._defaults&&this._defaults.floatLabel||"auto"}_syncDescribedByIds(){if(this._control){let e=[];if(this._control.userAriaDescribedBy&&"string"==typeof this._control.userAriaDescribedBy&&e.push(...this._control.userAriaDescribedBy.split(" ")),"hint"===this._getDisplayedMessages()){const t=this._hintChildren?this._hintChildren.find(e=>"start"===e.align):null,n=this._hintChildren?this._hintChildren.find(e=>"end"===e.align):null;t?e.push(t.id):this._hintLabel&&e.push(this._hintLabelId),n&&e.push(n.id)}else this._errorChildren&&e.push(...this._errorChildren.map(e=>e.id));this._control.setDescribedByIds(e)}}_validateControlChild(){}updateOutlineGap(){const e=this._label?this._label.nativeElement:null;if("outline"!==this.appearance||!e||!e.children.length||!e.textContent.trim())return;if(!this._platform.isBrowser)return;if(!this._isAttachedToDOM())return void(this._outlineGapCalculationNeededImmediately=!0);let t=0,n=0;const r=this._connectionContainerRef.nativeElement,a=r.querySelectorAll(".mat-form-field-outline-start"),o=r.querySelectorAll(".mat-form-field-outline-gap");if(this._label&&this._label.nativeElement.children.length){const a=r.getBoundingClientRect();if(0===a.width&&0===a.height)return this._outlineGapCalculationNeededOnStable=!0,void(this._outlineGapCalculationNeededImmediately=!1);const o=this._getStartEnd(a),s=e.children,i=this._getStartEnd(s[0].getBoundingClientRect());let u=0;for(let e=0;e<s.length;e++)u+=s[e].offsetWidth;t=Math.abs(i-o)-5,n=u>0?.75*u+10:0}for(let s=0;s<a.length;s++)a[s].style.width=`${t}px`;for(let s=0;s<o.length;s++)o[s].style.width=`${n}px`;this._outlineGapCalculationNeededOnStable=this._outlineGapCalculationNeededImmediately=!1}_getStartEnd(e){return this._dir&&"rtl"===this._dir.value?e.right:e.left}_isAttachedToDOM(){const e=this._elementRef.nativeElement;if(e.getRootNode){const t=e.getRootNode();return t&&t!==e}return document.documentElement.contains(e)}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l),L.Lb(L.h),L.Lb(L.l),L.Lb(fe.b,8),L.Lb(He,8),L.Lb(ee.a),L.Lb(L.A),L.Lb(V.a,8))},e.\u0275cmp=L.Fb({type:e,selectors:[["mat-form-field"]],contentQueries:function(e,t,n){if(1&e&&(L.Eb(n,Oe,1),L.Eb(n,Oe,3),L.Eb(n,Le,1),L.Eb(n,Le,3),L.Eb(n,Be,1),L.Eb(n,Re,1),L.Eb(n,Me,1),L.Eb(n,Ve,1),L.Eb(n,ze,1)),2&e){let e;L.ic(e=L.Yb())&&(t._controlNonStatic=e.first),L.ic(e=L.Yb())&&(t._controlStatic=e.first),L.ic(e=L.Yb())&&(t._labelChildNonStatic=e.first),L.ic(e=L.Yb())&&(t._labelChildStatic=e.first),L.ic(e=L.Yb())&&(t._placeholderChild=e.first),L.ic(e=L.Yb())&&(t._errorChildren=e),L.ic(e=L.Yb())&&(t._hintChildren=e),L.ic(e=L.Yb())&&(t._prefixChildren=e),L.ic(e=L.Yb())&&(t._suffixChildren=e)}},viewQuery:function(e,t){if(1&e&&(L.uc(me,1),L.uc(ge,3),L.uc(be,1),L.uc(ye,1)),2&e){let e;L.ic(e=L.Yb())&&(t.underlineRef=e.first),L.ic(e=L.Yb())&&(t._connectionContainerRef=e.first),L.ic(e=L.Yb())&&(t._inputContainerRef=e.first),L.ic(e=L.Yb())&&(t._label=e.first)}},hostAttrs:[1,"mat-form-field"],hostVars:44,hostBindings:function(e,t){2&e&&L.Db("mat-form-field-appearance-standard","standard"==t.appearance)("mat-form-field-appearance-fill","fill"==t.appearance)("mat-form-field-appearance-outline","outline"==t.appearance)("mat-form-field-appearance-legacy","legacy"==t.appearance)("mat-form-field-invalid",t._control.errorState)("mat-form-field-can-float",t._canLabelFloat())("mat-form-field-should-float",t._shouldLabelFloat())("mat-form-field-has-label",t._hasFloatingLabel())("mat-form-field-hide-placeholder",t._hideControlPlaceholder())("mat-form-field-disabled",t._control.disabled)("mat-form-field-autofilled",t._control.autofilled)("mat-focused",t._control.focused)("mat-accent","accent"==t.color)("mat-warn","warn"==t.color)("ng-untouched",t._shouldForward("untouched"))("ng-touched",t._shouldForward("touched"))("ng-pristine",t._shouldForward("pristine"))("ng-dirty",t._shouldForward("dirty"))("ng-valid",t._shouldForward("valid"))("ng-invalid",t._shouldForward("invalid"))("ng-pending",t._shouldForward("pending"))("_mat-animation-noopable",!t._animationsEnabled)},inputs:{color:"color",floatLabel:"floatLabel",appearance:"appearance",hideRequiredMarker:"hideRequiredMarker",hintLabel:"hintLabel"},exportAs:["matFormField"],features:[L.Ab([{provide:je,useExisting:e}]),L.yb],ngContentSelectors:Ae,decls:36,vars:8,consts:[[1,"mat-form-field-wrapper"],[1,"mat-form-field-flex",3,"click"],["connectionContainer",""],[4,"ngIf"],["class","mat-form-field-prefix",4,"ngIf"],[1,"mat-form-field-infix"],["inputContainer",""],[1,"mat-form-field-label-wrapper"],["class","mat-form-field-label",3,"cdkObserveContentDisabled","id","mat-empty","mat-form-field-empty","mat-accent","mat-warn","ngSwitch","cdkObserveContent",4,"ngIf"],["class","mat-form-field-suffix",4,"ngIf"],["class","mat-form-field-underline",4,"ngIf"],[1,"mat-form-field-subscript-wrapper",3,"ngSwitch"],[4,"ngSwitchCase"],["class","mat-form-field-hint-wrapper",4,"ngSwitchCase"],[1,"mat-form-field-outline"],[1,"mat-form-field-outline-start"],[1,"mat-form-field-outline-gap"],[1,"mat-form-field-outline-end"],[1,"mat-form-field-outline","mat-form-field-outline-thick"],[1,"mat-form-field-prefix"],[1,"mat-form-field-label",3,"cdkObserveContentDisabled","id","ngSwitch","cdkObserveContent"],["label",""],["class","mat-placeholder-required mat-form-field-required-marker","aria-hidden","true",4,"ngIf"],["aria-hidden","true",1,"mat-placeholder-required","mat-form-field-required-marker"],[1,"mat-form-field-suffix"],[1,"mat-form-field-underline"],["underline",""],[1,"mat-form-field-ripple"],[1,"mat-form-field-hint-wrapper"],["class","mat-hint",3,"id",4,"ngIf"],[1,"mat-form-field-hint-spacer"],[1,"mat-hint",3,"id"]],template:function(e,t){1&e&&(L.dc(Ee),L.Qb(0,"div",0),L.rc(1,"\n  "),L.Qb(2,"div",1,2),L.Xb("click",function(e){return t._control.onContainerClick&&t._control.onContainerClick(e)}),L.rc(4,"\n\n    "),L.rc(5,"\n    "),L.qc(6,xe,20,0,"ng-container",3),L.rc(7,"\n\n    "),L.qc(8,ve,4,0,"div",4),L.rc(9,"\n\n    "),L.Qb(10,"div",5,6),L.rc(12,"\n      "),L.cc(13),L.rc(14,"\n\n      "),L.Qb(15,"span",7),L.rc(16,"\n        "),L.rc(17,"\n        "),L.qc(18,ke,11,16,"label",8),L.rc(19,"\n      "),L.Pb(),L.rc(20,"\n    "),L.Pb(),L.rc(21,"\n\n    "),L.qc(22,Ce,4,0,"div",9),L.rc(23,"\n  "),L.Pb(),L.rc(24,"\n\n  "),L.rc(25,"\n  "),L.qc(26,$e,5,4,"div",10),L.rc(27,"\n\n  "),L.Qb(28,"div",11),L.rc(29,"\n    "),L.qc(30,Ie,4,1,"div",12),L.rc(31,"\n\n    "),L.qc(32,Te,11,2,"div",13),L.rc(33,"\n  "),L.Pb(),L.rc(34,"\n"),L.Pb(),L.rc(35,"\n")),2&e&&(L.Bb(6),L.ec("ngIf","outline"==t.appearance),L.Bb(2),L.ec("ngIf",t._prefixChildren.length),L.Bb(10),L.ec("ngIf",t._hasFloatingLabel()),L.Bb(4),L.ec("ngIf",t._suffixChildren.length),L.Bb(4),L.ec("ngIf","outline"!=t.appearance),L.Bb(2),L.ec("ngSwitch",t._getDisplayedMessages()),L.Bb(2),L.ec("ngSwitchCase","error"),L.Bb(2),L.ec("ngSwitchCase","hint"))},directives:[P.j,P.k,P.l,le.a],styles:[".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n",'.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n','.mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n',".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n",".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n",".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n"],encapsulation:2,data:{animation:[De.transitionMessages]},changeDetection:0}),e})(),Ke=(()=>{class e{}return e.\u0275mod=L.Jb({type:e}),e.\u0275inj=L.Ib({factory:function(t){return new(t||e)},imports:[[P.b,z.c,le.c],z.c]}),e})();const Xe=new L.r("MAT_INPUT_VALUE_ACCESSOR"),Qe=["button","checkbox","file","hidden","image","radio","range","reset","submit"];let Ye=0;class Ze{constructor(e,t,n,r){this._defaultErrorStateMatcher=e,this._parentForm=t,this._parentFormGroup=n,this.ngControl=r}}const Je=Object(z.l)(Ze);let et=(()=>{class e extends Je{constructor(e,t,n,r,a,o,s,i,u,l){super(o,r,a,n),this._elementRef=e,this._platform=t,this.ngControl=n,this._autofillMonitor=i,this._formField=l,this._uid="mat-input-"+Ye++,this.focused=!1,this.stateChanges=new re.a,this.controlType="mat-input",this.autofilled=!1,this._disabled=!1,this._required=!1,this._type="text",this._readonly=!1,this._neverEmptyInputTypes=["date","datetime","datetime-local","month","time","week"].filter(e=>Object(ee.e)().has(e));const c=this._elementRef.nativeElement,d=c.nodeName.toLowerCase();this._inputValueAccessor=s||c,this._previousNativeValue=this.value,this.id=this.id,t.IOS&&u.runOutsideAngular(()=>{e.nativeElement.addEventListener("keyup",e=>{let t=e.target;t.value||t.selectionStart||t.selectionEnd||(t.setSelectionRange(1,1),t.setSelectionRange(0,0))})}),this._isServer=!this._platform.isBrowser,this._isNativeSelect="select"===d,this._isTextarea="textarea"===d,this._isNativeSelect&&(this.controlType=c.multiple?"mat-native-select-multiple":"mat-native-select")}get disabled(){return this.ngControl&&null!==this.ngControl.disabled?this.ngControl.disabled:this._disabled}set disabled(e){this._disabled=Object(te.b)(e),this.focused&&(this.focused=!1,this.stateChanges.next())}get id(){return this._id}set id(e){this._id=e||this._uid}get required(){return this._required}set required(e){this._required=Object(te.b)(e)}get type(){return this._type}set type(e){this._type=e||"text",this._validateType(),!this._isTextarea&&Object(ee.e)().has(this._type)&&(this._elementRef.nativeElement.type=this._type)}get value(){return this._inputValueAccessor.value}set value(e){e!==this.value&&(this._inputValueAccessor.value=e,this.stateChanges.next())}get readonly(){return this._readonly}set readonly(e){this._readonly=Object(te.b)(e)}ngAfterViewInit(){this._platform.isBrowser&&this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(e=>{this.autofilled=e.isAutofilled,this.stateChanges.next()})}ngOnChanges(){this.stateChanges.next()}ngOnDestroy(){this.stateChanges.complete(),this._platform.isBrowser&&this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement)}ngDoCheck(){this.ngControl&&this.updateErrorState(),this._dirtyCheckNativeValue(),this._dirtyCheckPlaceholder()}focus(e){this._elementRef.nativeElement.focus(e)}_focusChanged(e){e===this.focused||this.readonly&&e||(this.focused=e,this.stateChanges.next())}_onInput(){}_dirtyCheckPlaceholder(){var e,t;const n=(null===(t=null===(e=this._formField)||void 0===e?void 0:e._hideControlPlaceholder)||void 0===t?void 0:t.call(e))?null:this.placeholder;if(n!==this._previousPlaceholder){const e=this._elementRef.nativeElement;this._previousPlaceholder=n,n?e.setAttribute("placeholder",n):e.removeAttribute("placeholder")}}_dirtyCheckNativeValue(){const e=this._elementRef.nativeElement.value;this._previousNativeValue!==e&&(this._previousNativeValue=e,this.stateChanges.next())}_validateType(){Qe.indexOf(this._type)}_isNeverEmpty(){return this._neverEmptyInputTypes.indexOf(this._type)>-1}_isBadInput(){let e=this._elementRef.nativeElement.validity;return e&&e.badInput}get empty(){return!(this._isNeverEmpty()||this._elementRef.nativeElement.value||this._isBadInput()||this.autofilled)}get shouldLabelFloat(){if(this._isNativeSelect){const e=this._elementRef.nativeElement,t=e.options[0];return this.focused||e.multiple||!this.empty||!!(e.selectedIndex>-1&&t&&t.label)}return this.focused||!this.empty}setDescribedByIds(e){e.length?this._elementRef.nativeElement.setAttribute("aria-describedby",e.join(" ")):this._elementRef.nativeElement.removeAttribute("aria-describedby")}onContainerClick(){this.focused||this.focus()}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l),L.Lb(ee.a),L.Lb(Y.g,10),L.Lb(Y.j,8),L.Lb(Y.e,8),L.Lb(z.a),L.Lb(Xe,10),L.Lb(ie),L.Lb(L.A),L.Lb(je,8))},e.\u0275dir=L.Gb({type:e,selectors:[["input","matInput",""],["textarea","matInput",""],["select","matNativeControl",""],["input","matNativeControl",""],["textarea","matNativeControl",""]],hostAttrs:[1,"mat-input-element","mat-form-field-autofill-control"],hostVars:9,hostBindings:function(e,t){1&e&&L.Xb("focus",function(){return t._focusChanged(!0)})("blur",function(){return t._focusChanged(!1)})("input",function(){return t._onInput()}),2&e&&(L.Tb("disabled",t.disabled)("required",t.required),L.Cb("id",t.id)("data-placeholder",t.placeholder)("readonly",t.readonly&&!t._isNativeSelect||null)("aria-invalid",t.errorState&&!t.empty)("aria-required",t.required),L.Db("mat-input-server",t._isServer))},inputs:{id:"id",disabled:"disabled",required:"required",type:"type",value:"value",readonly:"readonly",placeholder:"placeholder",errorStateMatcher:"errorStateMatcher",userAriaDescribedBy:["aria-describedby","userAriaDescribedBy"]},exportAs:["matInput"],features:[L.Ab([{provide:Oe,useExisting:e}]),L.yb,L.zb]}),e})(),tt=(()=>{class e{}return e.\u0275mod=L.Jb({type:e}),e.\u0275inj=L.Ib({factory:function(t){return new(t||e)},providers:[z.a],imports:[[ue,Ke,z.c],ue,Ke]}),e})();var nt=n("0IaG"),rt=n("u47x"),at=n("+rOU"),ot=n("quSY"),st=n("LRne"),it=n("PqYM"),ut=n("/uUt"),lt=n("FtGj"),ct=n("vxfF");function dt(e,t){1&e&&L.cc(0)}const pt=["*"];function ht(e,t){}const ft=function(e){return{animationDuration:e}},mt=function(e,t){return{value:e,params:t}},gt=["tabBodyWrapper"],bt=["tabHeader"];function yt(e,t){}function xt(e,t){if(1&e&&(L.rc(0,"\n        "),L.qc(1,yt,0,0,"ng-template",9),L.rc(2,"\n      ")),2&e){const e=L.Zb().$implicit;L.Bb(1),L.ec("cdkPortalOutlet",e.templateLabel)}}function vt(e,t){if(1&e&&L.rc(0),2&e){const e=L.Zb().$implicit;L.sc(e.textLabel)}}function wt(e,t){if(1&e){const e=L.Rb();L.Qb(0,"div",6),L.Xb("click",function(){L.kc(e);const n=t.$implicit,r=t.index,a=L.Zb(),o=L.jc(1);return a._handleClick(n,o,r)})("cdkFocusChange",function(n){L.kc(e);const r=t.index;return L.Zb()._tabFocusChanged(n,r)}),L.rc(1,"\n\n\n    "),L.Qb(2,"div",7),L.rc(3,"\n      "),L.rc(4,"\n      "),L.qc(5,xt,3,1,"ng-template",8),L.rc(6,"\n\n      "),L.rc(7,"\n      "),L.qc(8,vt,1,1,"ng-template",8),L.rc(9,"\n    "),L.Pb(),L.rc(10,"\n  "),L.Pb()}if(2&e){const e=t.$implicit,n=t.index,r=L.Zb();L.Db("mat-tab-label-active",r.selectedIndex==n),L.ec("id",r._getTabLabelId(n))("disabled",e.disabled)("matRippleDisabled",e.disabled||r.disableRipple),L.Cb("tabIndex",r._getTabIndex(e,n))("aria-posinset",n+1)("aria-setsize",r._tabs.length)("aria-controls",r._getTabContentId(n))("aria-selected",r.selectedIndex==n)("aria-label",e.ariaLabel||null)("aria-labelledby",!e.ariaLabel&&e.ariaLabelledby?e.ariaLabelledby:null),L.Bb(5),L.ec("ngIf",e.templateLabel),L.Bb(3),L.ec("ngIf",!e.templateLabel)}}function _t(e,t){if(1&e){const e=L.Rb();L.Qb(0,"mat-tab-body",10),L.Xb("_onCentered",function(){return L.kc(e),L.Zb()._removeTabBodyWrapperHeight()})("_onCentering",function(t){return L.kc(e),L.Zb()._setTabBodyWrapperHeight(t)}),L.rc(1,"\n  "),L.Pb()}if(2&e){const e=t.$implicit,n=t.index,r=L.Zb();L.Db("mat-tab-body-active",r.selectedIndex==n),L.ec("id",r._getTabContentId(n))("content",e.content)("position",e.position)("origin",e.origin)("animationDuration",r.animationDuration),L.Cb("aria-labelledby",r._getTabLabelId(n))}}const Nt=["tabListContainer"],kt=["tabList"],Ct=["nextPaginator"],$t=["previousPaginator"],It=new L.r("MatInkBarPositioner",{providedIn:"root",factory:function(){return e=>({left:e?(e.offsetLeft||0)+"px":"0",width:e?(e.offsetWidth||0)+"px":"0"})}});let St=(()=>{class e{constructor(e,t,n,r){this._elementRef=e,this._ngZone=t,this._inkBarPositioner=n,this._animationMode=r}alignToElement(e){this.show(),"undefined"!=typeof requestAnimationFrame?this._ngZone.runOutsideAngular(()=>{requestAnimationFrame(()=>this._setStyles(e))}):this._setStyles(e)}show(){this._elementRef.nativeElement.style.visibility="visible"}hide(){this._elementRef.nativeElement.style.visibility="hidden"}_setStyles(e){const t=this._inkBarPositioner(e),n=this._elementRef.nativeElement;n.style.left=t.left,n.style.width=t.width}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l),L.Lb(L.A),L.Lb(It),L.Lb(V.a,8))},e.\u0275dir=L.Gb({type:e,selectors:[["mat-ink-bar"]],hostAttrs:[1,"mat-ink-bar"],hostVars:2,hostBindings:function(e,t){2&e&&L.Db("_mat-animation-noopable","NoopAnimations"===t._animationMode)}}),e})();const Tt=new L.r("MatTabContent"),Et=new L.r("MatTabLabel");class At{}const Rt=Object(z.k)(At),Dt=new L.r("MAT_TAB_GROUP");let Ot=(()=>{class e extends Rt{constructor(e,t){super(),this._viewContainerRef=e,this._closestTabGroup=t,this.textLabel="",this._contentPortal=null,this._stateChanges=new re.a,this.position=null,this.origin=null,this.isActive=!1}get templateLabel(){return this._templateLabel}set templateLabel(e){this._setTemplateLabelInput(e)}get content(){return this._contentPortal}ngOnChanges(e){(e.hasOwnProperty("textLabel")||e.hasOwnProperty("disabled"))&&this._stateChanges.next()}ngOnDestroy(){this._stateChanges.complete()}ngOnInit(){this._contentPortal=new at.g(this._explicitContent||this._implicitContent,this._viewContainerRef)}_setTemplateLabelInput(e){e&&(this._templateLabel=e)}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.Q),L.Lb(Dt))},e.\u0275cmp=L.Fb({type:e,selectors:[["mat-tab"]],contentQueries:function(e,t,n){if(1&e&&(L.Eb(n,Et,1),L.Eb(n,Tt,3,L.M)),2&e){let e;L.ic(e=L.Yb())&&(t.templateLabel=e.first),L.ic(e=L.Yb())&&(t._explicitContent=e.first)}},viewQuery:function(e,t){if(1&e&&L.uc(L.M,3),2&e){let e;L.ic(e=L.Yb())&&(t._implicitContent=e.first)}},inputs:{disabled:"disabled",textLabel:["label","textLabel"],ariaLabel:["aria-label","ariaLabel"],ariaLabelledby:["aria-labelledby","ariaLabelledby"]},exportAs:["matTab"],features:[L.yb,L.zb],ngContentSelectors:pt,decls:3,vars:0,template:function(e,t){1&e&&(L.dc(),L.rc(0,"\n"),L.qc(1,dt,1,0,"ng-template"),L.rc(2,"\n"))},encapsulation:2}),e})();const Ft={translateTab:Object(he.j)("translateTab",[Object(he.g)("center, void, left-origin-center, right-origin-center",Object(he.h)({transform:"none"})),Object(he.g)("left",Object(he.h)({transform:"translate3d(-100%, 0, 0)",minHeight:"1px"})),Object(he.g)("right",Object(he.h)({transform:"translate3d(100%, 0, 0)",minHeight:"1px"})),Object(he.i)("* => left, * => right, left => center, right => center",Object(he.e)("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")),Object(he.i)("void => left-origin-center",[Object(he.h)({transform:"translate3d(-100%, 0, 0)"}),Object(he.e)("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")]),Object(he.i)("void => right-origin-center",[Object(he.h)({transform:"translate3d(100%, 0, 0)"}),Object(he.e)("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")])])};let Mt=(()=>{class e extends at.c{constructor(e,t,n,r){super(e,t,r),this._host=n,this._centeringSub=ot.a.EMPTY,this._leavingSub=ot.a.EMPTY}ngOnInit(){super.ngOnInit(),this._centeringSub=this._host._beforeCentering.pipe(Object(de.a)(this._host._isCenterPosition(this._host._position))).subscribe(e=>{e&&!this.hasAttached()&&this.attach(this._host._content)}),this._leavingSub=this._host._afterLeavingCenter.subscribe(()=>{this.detach()})}ngOnDestroy(){super.ngOnDestroy(),this._centeringSub.unsubscribe(),this._leavingSub.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.j),L.Lb(L.Q),L.Lb(Object(L.U)(()=>Lt)),L.Lb(P.c))},e.\u0275dir=L.Gb({type:e,selectors:[["","matTabBodyHost",""]],features:[L.yb]}),e})(),Pt=(()=>{class e{constructor(e,t,n){this._elementRef=e,this._dir=t,this._dirChangeSubscription=ot.a.EMPTY,this._translateTabComplete=new re.a,this._onCentering=new L.n,this._beforeCentering=new L.n,this._afterLeavingCenter=new L.n,this._onCentered=new L.n(!0),this.animationDuration="500ms",t&&(this._dirChangeSubscription=t.change.subscribe(e=>{this._computePositionAnimationState(e),n.markForCheck()})),this._translateTabComplete.pipe(Object(ut.a)((e,t)=>e.fromState===t.fromState&&e.toState===t.toState)).subscribe(e=>{this._isCenterPosition(e.toState)&&this._isCenterPosition(this._position)&&this._onCentered.emit(),this._isCenterPosition(e.fromState)&&!this._isCenterPosition(this._position)&&this._afterLeavingCenter.emit()})}set position(e){this._positionIndex=e,this._computePositionAnimationState()}ngOnInit(){"center"==this._position&&null!=this.origin&&(this._position=this._computePositionFromOrigin(this.origin))}ngOnDestroy(){this._dirChangeSubscription.unsubscribe(),this._translateTabComplete.complete()}_onTranslateTabStarted(e){const t=this._isCenterPosition(e.toState);this._beforeCentering.emit(t),t&&this._onCentering.emit(this._elementRef.nativeElement.clientHeight)}_getLayoutDirection(){return this._dir&&"rtl"===this._dir.value?"rtl":"ltr"}_isCenterPosition(e){return"center"==e||"left-origin-center"==e||"right-origin-center"==e}_computePositionAnimationState(e=this._getLayoutDirection()){this._position=this._positionIndex<0?"ltr"==e?"left":"right":this._positionIndex>0?"ltr"==e?"right":"left":"center"}_computePositionFromOrigin(e){const t=this._getLayoutDirection();return"ltr"==t&&e<=0||"rtl"==t&&e>0?"left-origin-center":"right-origin-center"}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l),L.Lb(fe.b,8),L.Lb(L.h))},e.\u0275dir=L.Gb({type:e,inputs:{animationDuration:"animationDuration",position:"position",_content:["content","_content"],origin:"origin"},outputs:{_onCentering:"_onCentering",_beforeCentering:"_beforeCentering",_afterLeavingCenter:"_afterLeavingCenter",_onCentered:"_onCentered"}}),e})(),Lt=(()=>{class e extends Pt{constructor(e,t,n){super(e,t,n)}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l),L.Lb(fe.b,8),L.Lb(L.h))},e.\u0275cmp=L.Fb({type:e,selectors:[["mat-tab-body"]],viewQuery:function(e,t){if(1&e&&L.uc(at.c,1),2&e){let e;L.ic(e=L.Yb())&&(t._portalHost=e.first)}},hostAttrs:[1,"mat-tab-body"],features:[L.yb],decls:6,vars:6,consts:[["cdkScrollable","",1,"mat-tab-body-content"],["content",""],["matTabBodyHost",""]],template:function(e,t){1&e&&(L.Qb(0,"div",0,1),L.Xb("@translateTab.start",function(e){return t._onTranslateTabStarted(e)})("@translateTab.done",function(e){return t._translateTabComplete.next(e)}),L.rc(2,"\n  "),L.qc(3,ht,0,0,"ng-template",2),L.rc(4,"\n"),L.Pb(),L.rc(5,"\n")),2&e&&L.ec("@translateTab",L.hc(3,mt,t._position,L.gc(1,ft,t.animationDuration)))},directives:[Mt],styles:[".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\n"],encapsulation:2,data:{animation:[Ft.translateTab]}}),e})();const Bt=new L.r("MAT_TABS_CONFIG");let Vt=0;class zt{}class Wt{constructor(e){this._elementRef=e}}const Gt=Object(z.i)(Object(z.j)(Wt),"primary");let Ut=(()=>{class e extends Gt{constructor(e,t,n,r){super(e),this._changeDetectorRef=t,this._animationMode=r,this._tabs=new L.E,this._indexToSelect=0,this._tabBodyWrapperHeight=0,this._tabsSubscription=ot.a.EMPTY,this._tabLabelSubscription=ot.a.EMPTY,this._selectedIndex=null,this.headerPosition="above",this.selectedIndexChange=new L.n,this.focusChange=new L.n,this.animationDone=new L.n,this.selectedTabChange=new L.n(!0),this._groupId=Vt++,this.animationDuration=n&&n.animationDuration?n.animationDuration:"500ms",this.disablePagination=!(!n||null==n.disablePagination)&&n.disablePagination,this.dynamicHeight=!(!n||null==n.dynamicHeight)&&n.dynamicHeight}get dynamicHeight(){return this._dynamicHeight}set dynamicHeight(e){this._dynamicHeight=Object(te.b)(e)}get selectedIndex(){return this._selectedIndex}set selectedIndex(e){this._indexToSelect=Object(te.e)(e,null)}get animationDuration(){return this._animationDuration}set animationDuration(e){this._animationDuration=/^\d+$/.test(e)?e+"ms":e}get backgroundColor(){return this._backgroundColor}set backgroundColor(e){const t=this._elementRef.nativeElement;t.classList.remove(`mat-background-${this.backgroundColor}`),e&&t.classList.add(`mat-background-${e}`),this._backgroundColor=e}ngAfterContentChecked(){const e=this._indexToSelect=this._clampTabIndex(this._indexToSelect);if(this._selectedIndex!=e){const t=null==this._selectedIndex;t||this.selectedTabChange.emit(this._createChangeEvent(e)),Promise.resolve().then(()=>{this._tabs.forEach((t,n)=>t.isActive=n===e),t||this.selectedIndexChange.emit(e)})}this._tabs.forEach((t,n)=>{t.position=n-e,null==this._selectedIndex||0!=t.position||t.origin||(t.origin=e-this._selectedIndex)}),this._selectedIndex!==e&&(this._selectedIndex=e,this._changeDetectorRef.markForCheck())}ngAfterContentInit(){this._subscribeToAllTabChanges(),this._subscribeToTabLabels(),this._tabsSubscription=this._tabs.changes.subscribe(()=>{if(this._clampTabIndex(this._indexToSelect)===this._selectedIndex){const e=this._tabs.toArray();for(let t=0;t<e.length;t++)if(e[t].isActive){this._indexToSelect=this._selectedIndex=t;break}}this._changeDetectorRef.markForCheck()})}_subscribeToAllTabChanges(){this._allTabs.changes.pipe(Object(de.a)(this._allTabs)).subscribe(e=>{this._tabs.reset(e.filter(e=>e._closestTabGroup===this)),this._tabs.notifyOnChanges()})}ngOnDestroy(){this._tabs.destroy(),this._tabsSubscription.unsubscribe(),this._tabLabelSubscription.unsubscribe()}realignInkBar(){this._tabHeader&&this._tabHeader._alignInkBarToSelectedTab()}_focusChanged(e){this.focusChange.emit(this._createChangeEvent(e))}_createChangeEvent(e){const t=new zt;return t.index=e,this._tabs&&this._tabs.length&&(t.tab=this._tabs.toArray()[e]),t}_subscribeToTabLabels(){this._tabLabelSubscription&&this._tabLabelSubscription.unsubscribe(),this._tabLabelSubscription=Object(ce.a)(...this._tabs.map(e=>e._stateChanges)).subscribe(()=>this._changeDetectorRef.markForCheck())}_clampTabIndex(e){return Math.min(this._tabs.length-1,Math.max(e||0,0))}_getTabLabelId(e){return`mat-tab-label-${this._groupId}-${e}`}_getTabContentId(e){return`mat-tab-content-${this._groupId}-${e}`}_setTabBodyWrapperHeight(e){if(!this._dynamicHeight||!this._tabBodyWrapperHeight)return;const t=this._tabBodyWrapper.nativeElement;t.style.height=this._tabBodyWrapperHeight+"px",this._tabBodyWrapper.nativeElement.offsetHeight&&(t.style.height=e+"px")}_removeTabBodyWrapperHeight(){const e=this._tabBodyWrapper.nativeElement;this._tabBodyWrapperHeight=e.clientHeight,e.style.height="",this.animationDone.emit()}_handleClick(e,t,n){e.disabled||(this.selectedIndex=t.focusIndex=n)}_getTabIndex(e,t){return e.disabled?null:this.selectedIndex===t?0:-1}_tabFocusChanged(e,t){e&&(this._tabHeader.focusIndex=t)}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l),L.Lb(L.h),L.Lb(Bt,8),L.Lb(V.a,8))},e.\u0275dir=L.Gb({type:e,inputs:{headerPosition:"headerPosition",animationDuration:"animationDuration",disablePagination:"disablePagination",dynamicHeight:"dynamicHeight",selectedIndex:"selectedIndex",backgroundColor:"backgroundColor"},outputs:{selectedIndexChange:"selectedIndexChange",focusChange:"focusChange",animationDone:"animationDone",selectedTabChange:"selectedTabChange"},features:[L.yb]}),e})(),Ht=(()=>{class e extends Ut{constructor(e,t,n,r){super(e,t,n,r)}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l),L.Lb(L.h),L.Lb(Bt,8),L.Lb(V.a,8))},e.\u0275cmp=L.Fb({type:e,selectors:[["mat-tab-group"]],contentQueries:function(e,t,n){if(1&e&&L.Eb(n,Ot,1),2&e){let e;L.ic(e=L.Yb())&&(t._allTabs=e)}},viewQuery:function(e,t){if(1&e&&(L.uc(gt,1),L.uc(bt,1)),2&e){let e;L.ic(e=L.Yb())&&(t._tabBodyWrapper=e.first),L.ic(e=L.Yb())&&(t._tabHeader=e.first)}},hostAttrs:[1,"mat-tab-group"],hostVars:4,hostBindings:function(e,t){2&e&&L.Db("mat-tab-group-dynamic-height",t.dynamicHeight)("mat-tab-group-inverted-header","below"===t.headerPosition)},inputs:{color:"color",disableRipple:"disableRipple"},exportAs:["matTabGroup"],features:[L.Ab([{provide:Dt,useExisting:e}]),L.yb],decls:12,vars:7,consts:[[3,"selectedIndex","disableRipple","disablePagination","indexFocused","selectFocusedIndex"],["tabHeader",""],["class","mat-tab-label mat-focus-indicator","role","tab","matTabLabelWrapper","","mat-ripple","","cdkMonitorElementFocus","",3,"id","mat-tab-label-active","disabled","matRippleDisabled","click","cdkFocusChange",4,"ngFor","ngForOf"],[1,"mat-tab-body-wrapper"],["tabBodyWrapper",""],["role","tabpanel",3,"id","mat-tab-body-active","content","position","origin","animationDuration","_onCentered","_onCentering",4,"ngFor","ngForOf"],["role","tab","matTabLabelWrapper","","mat-ripple","","cdkMonitorElementFocus","",1,"mat-tab-label","mat-focus-indicator",3,"id","disabled","matRippleDisabled","click","cdkFocusChange"],[1,"mat-tab-label-content"],[3,"ngIf"],[3,"cdkPortalOutlet"],["role","tabpanel",3,"id","content","position","origin","animationDuration","_onCentered","_onCentering"]],template:function(e,t){1&e&&(L.Qb(0,"mat-tab-header",0,1),L.Xb("indexFocused",function(e){return t._focusChanged(e)})("selectFocusedIndex",function(e){return t.selectedIndex=e}),L.rc(2,"\n  "),L.qc(3,wt,11,14,"div",2),L.rc(4,"\n"),L.Pb(),L.rc(5,"\n\n"),L.Qb(6,"div",3,4),L.rc(8,"\n  "),L.qc(9,_t,2,8,"mat-tab-body",5),L.rc(10,"\n"),L.Pb(),L.rc(11,"\n")),2&e&&(L.ec("selectedIndex",t.selectedIndex||0)("disableRipple",t.disableRipple)("disablePagination",t.disablePagination),L.Bb(3),L.ec("ngForOf",t._tabs),L.Bb(3),L.Db("_mat-animation-noopable","NoopAnimations"===t._animationMode),L.Bb(3),L.ec("ngForOf",t._tabs))},directives:function(){return[Zt,P.i,Kt,z.f,rt.b,P.j,at.c,Lt]},styles:[".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\n"],encapsulation:2}),e})();class jt{}const qt=Object(z.k)(jt);let Kt=(()=>{class e extends qt{constructor(e){super(),this.elementRef=e}focus(){this.elementRef.nativeElement.focus()}getOffsetLeft(){return this.elementRef.nativeElement.offsetLeft}getOffsetWidth(){return this.elementRef.nativeElement.offsetWidth}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l))},e.\u0275dir=L.Gb({type:e,selectors:[["","matTabLabelWrapper",""]],hostVars:3,hostBindings:function(e,t){2&e&&(L.Cb("aria-disabled",!!t.disabled),L.Db("mat-tab-disabled",t.disabled))},inputs:{disabled:"disabled"},features:[L.yb]}),e})();const Xt=Object(ee.f)({passive:!0});let Qt=(()=>{class e{constructor(e,t,n,r,a,o,s){this._elementRef=e,this._changeDetectorRef=t,this._viewportRuler=n,this._dir=r,this._ngZone=a,this._platform=o,this._animationMode=s,this._scrollDistance=0,this._selectedIndexChanged=!1,this._destroyed=new re.a,this._showPaginationControls=!1,this._disableScrollAfter=!0,this._disableScrollBefore=!0,this._stopScrolling=new re.a,this.disablePagination=!1,this._selectedIndex=0,this.selectFocusedIndex=new L.n,this.indexFocused=new L.n,a.runOutsideAngular(()=>{Object(ae.a)(e.nativeElement,"mouseleave").pipe(Object(oe.a)(this._destroyed)).subscribe(()=>{this._stopInterval()})})}get selectedIndex(){return this._selectedIndex}set selectedIndex(e){e=Object(te.e)(e),this._selectedIndex!=e&&(this._selectedIndexChanged=!0,this._selectedIndex=e,this._keyManager&&this._keyManager.updateActiveItem(e))}ngAfterViewInit(){Object(ae.a)(this._previousPaginator.nativeElement,"touchstart",Xt).pipe(Object(oe.a)(this._destroyed)).subscribe(()=>{this._handlePaginatorPress("before")}),Object(ae.a)(this._nextPaginator.nativeElement,"touchstart",Xt).pipe(Object(oe.a)(this._destroyed)).subscribe(()=>{this._handlePaginatorPress("after")})}ngAfterContentInit(){const e=this._dir?this._dir.change:Object(st.a)(null),t=this._viewportRuler.change(150),n=()=>{this.updatePagination(),this._alignInkBarToSelectedTab()};this._keyManager=new rt.c(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap(),this._keyManager.updateActiveItem(this._selectedIndex),"undefined"!=typeof requestAnimationFrame?requestAnimationFrame(n):n(),Object(ce.a)(e,t,this._items.changes).pipe(Object(oe.a)(this._destroyed)).subscribe(()=>{Promise.resolve().then(n),this._keyManager.withHorizontalOrientation(this._getLayoutDirection())}),this._keyManager.change.pipe(Object(oe.a)(this._destroyed)).subscribe(e=>{this.indexFocused.emit(e),this._setTabFocus(e)})}ngAfterContentChecked(){this._tabLabelCount!=this._items.length&&(this.updatePagination(),this._tabLabelCount=this._items.length,this._changeDetectorRef.markForCheck()),this._selectedIndexChanged&&(this._scrollToLabel(this._selectedIndex),this._checkScrollingControls(),this._alignInkBarToSelectedTab(),this._selectedIndexChanged=!1,this._changeDetectorRef.markForCheck()),this._scrollDistanceChanged&&(this._updateTabScrollPosition(),this._scrollDistanceChanged=!1,this._changeDetectorRef.markForCheck())}ngOnDestroy(){this._destroyed.next(),this._destroyed.complete(),this._stopScrolling.complete()}_handleKeydown(e){if(!Object(lt.o)(e))switch(e.keyCode){case lt.d:case lt.j:this.focusIndex!==this.selectedIndex&&(this.selectFocusedIndex.emit(this.focusIndex),this._itemSelected(e));break;default:this._keyManager.onKeydown(e)}}_onContentChanges(){const e=this._elementRef.nativeElement.textContent;e!==this._currentTextContent&&(this._currentTextContent=e||"",this._ngZone.run(()=>{this.updatePagination(),this._alignInkBarToSelectedTab(),this._changeDetectorRef.markForCheck()}))}updatePagination(){this._checkPaginationEnabled(),this._checkScrollingControls(),this._updateTabScrollPosition()}get focusIndex(){return this._keyManager?this._keyManager.activeItemIndex:0}set focusIndex(e){this._isValidIndex(e)&&this.focusIndex!==e&&this._keyManager&&this._keyManager.setActiveItem(e)}_isValidIndex(e){if(!this._items)return!0;const t=this._items?this._items.toArray()[e]:null;return!!t&&!t.disabled}_setTabFocus(e){if(this._showPaginationControls&&this._scrollToLabel(e),this._items&&this._items.length){this._items.toArray()[e].focus();const t=this._tabListContainer.nativeElement,n=this._getLayoutDirection();t.scrollLeft="ltr"==n?0:t.scrollWidth-t.offsetWidth}}_getLayoutDirection(){return this._dir&&"rtl"===this._dir.value?"rtl":"ltr"}_updateTabScrollPosition(){if(this.disablePagination)return;const e=this.scrollDistance,t="ltr"===this._getLayoutDirection()?-e:e;this._tabList.nativeElement.style.transform=`translateX(${Math.round(t)}px)`,(this._platform.TRIDENT||this._platform.EDGE)&&(this._tabListContainer.nativeElement.scrollLeft=0)}get scrollDistance(){return this._scrollDistance}set scrollDistance(e){this._scrollTo(e)}_scrollHeader(e){return this._scrollTo(this._scrollDistance+("before"==e?-1:1)*this._tabListContainer.nativeElement.offsetWidth/3)}_handlePaginatorClick(e){this._stopInterval(),this._scrollHeader(e)}_scrollToLabel(e){if(this.disablePagination)return;const t=this._items?this._items.toArray()[e]:null;if(!t)return;const n=this._tabListContainer.nativeElement.offsetWidth,{offsetLeft:r,offsetWidth:a}=t.elementRef.nativeElement;let o,s;"ltr"==this._getLayoutDirection()?(o=r,s=o+a):(s=this._tabList.nativeElement.offsetWidth-r,o=s-a);const i=this.scrollDistance,u=this.scrollDistance+n;o<i?this.scrollDistance-=i-o+60:s>u&&(this.scrollDistance+=s-u+60)}_checkPaginationEnabled(){if(this.disablePagination)this._showPaginationControls=!1;else{const e=this._tabList.nativeElement.scrollWidth>this._elementRef.nativeElement.offsetWidth;e||(this.scrollDistance=0),e!==this._showPaginationControls&&this._changeDetectorRef.markForCheck(),this._showPaginationControls=e}}_checkScrollingControls(){this.disablePagination?this._disableScrollAfter=this._disableScrollBefore=!0:(this._disableScrollBefore=0==this.scrollDistance,this._disableScrollAfter=this.scrollDistance==this._getMaxScrollDistance(),this._changeDetectorRef.markForCheck())}_getMaxScrollDistance(){return this._tabList.nativeElement.scrollWidth-this._tabListContainer.nativeElement.offsetWidth||0}_alignInkBarToSelectedTab(){const e=this._items&&this._items.length?this._items.toArray()[this.selectedIndex]:null,t=e?e.elementRef.nativeElement:null;t?this._inkBar.alignToElement(t):this._inkBar.hide()}_stopInterval(){this._stopScrolling.next()}_handlePaginatorPress(e,t){t&&null!=t.button&&0!==t.button||(this._stopInterval(),Object(it.a)(650,100).pipe(Object(oe.a)(Object(ce.a)(this._stopScrolling,this._destroyed))).subscribe(()=>{const{maxScrollDistance:t,distance:n}=this._scrollHeader(e);(0===n||n>=t)&&this._stopInterval()}))}_scrollTo(e){if(this.disablePagination)return{maxScrollDistance:0,distance:0};const t=this._getMaxScrollDistance();return this._scrollDistance=Math.max(0,Math.min(t,e)),this._scrollDistanceChanged=!0,this._checkScrollingControls(),{maxScrollDistance:t,distance:this._scrollDistance}}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l),L.Lb(L.h),L.Lb(ct.c),L.Lb(fe.b,8),L.Lb(L.A),L.Lb(ee.a),L.Lb(V.a,8))},e.\u0275dir=L.Gb({type:e,inputs:{disablePagination:"disablePagination"}}),e})(),Yt=(()=>{class e extends Qt{constructor(e,t,n,r,a,o,s){super(e,t,n,r,a,o,s),this._disableRipple=!1}get disableRipple(){return this._disableRipple}set disableRipple(e){this._disableRipple=Object(te.b)(e)}_itemSelected(e){e.preventDefault()}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l),L.Lb(L.h),L.Lb(ct.c),L.Lb(fe.b,8),L.Lb(L.A),L.Lb(ee.a),L.Lb(V.a,8))},e.\u0275dir=L.Gb({type:e,inputs:{disableRipple:"disableRipple"},features:[L.yb]}),e})(),Zt=(()=>{class e extends Yt{constructor(e,t,n,r,a,o,s){super(e,t,n,r,a,o,s)}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(L.l),L.Lb(L.h),L.Lb(ct.c),L.Lb(fe.b,8),L.Lb(L.A),L.Lb(ee.a),L.Lb(V.a,8))},e.\u0275cmp=L.Fb({type:e,selectors:[["mat-tab-header"]],contentQueries:function(e,t,n){if(1&e&&L.Eb(n,Kt,0),2&e){let e;L.ic(e=L.Yb())&&(t._items=e)}},viewQuery:function(e,t){if(1&e&&(L.uc(St,3),L.uc(Nt,3),L.uc(kt,3),L.uc(Ct,1),L.uc($t,1)),2&e){let e;L.ic(e=L.Yb())&&(t._inkBar=e.first),L.ic(e=L.Yb())&&(t._tabListContainer=e.first),L.ic(e=L.Yb())&&(t._tabList=e.first),L.ic(e=L.Yb())&&(t._nextPaginator=e.first),L.ic(e=L.Yb())&&(t._previousPaginator=e.first)}},hostAttrs:[1,"mat-tab-header"],hostVars:4,hostBindings:function(e,t){2&e&&L.Db("mat-tab-header-pagination-controls-enabled",t._showPaginationControls)("mat-tab-header-rtl","rtl"==t._getLayoutDirection())},inputs:{selectedIndex:"selectedIndex"},outputs:{selectFocusedIndex:"selectFocusedIndex",indexFocused:"indexFocused"},features:[L.yb],ngContentSelectors:pt,decls:27,vars:8,consts:[["aria-hidden","true","mat-ripple","",1,"mat-tab-header-pagination","mat-tab-header-pagination-before","mat-elevation-z4",3,"matRippleDisabled","click","mousedown","touchend"],["previousPaginator",""],[1,"mat-tab-header-pagination-chevron"],[1,"mat-tab-label-container",3,"keydown"],["tabListContainer",""],["role","tablist",1,"mat-tab-list",3,"cdkObserveContent"],["tabList",""],[1,"mat-tab-labels"],["aria-hidden","true","mat-ripple","",1,"mat-tab-header-pagination","mat-tab-header-pagination-after","mat-elevation-z4",3,"matRippleDisabled","mousedown","click","touchend"],["nextPaginator",""]],template:function(e,t){1&e&&(L.dc(),L.Qb(0,"div",0,1),L.Xb("click",function(){return t._handlePaginatorClick("before")})("mousedown",function(e){return t._handlePaginatorPress("before",e)})("touchend",function(){return t._stopInterval()}),L.rc(2,"\n  "),L.Mb(3,"div",2),L.rc(4,"\n"),L.Pb(),L.rc(5,"\n\n"),L.Qb(6,"div",3,4),L.Xb("keydown",function(e){return t._handleKeydown(e)}),L.rc(8,"\n  "),L.Qb(9,"div",5,6),L.Xb("cdkObserveContent",function(){return t._onContentChanges()}),L.rc(11,"\n    "),L.Qb(12,"div",7),L.rc(13,"\n      "),L.cc(14),L.rc(15,"\n    "),L.Pb(),L.rc(16,"\n    "),L.Mb(17,"mat-ink-bar"),L.rc(18,"\n  "),L.Pb(),L.rc(19,"\n"),L.Pb(),L.rc(20,"\n\n"),L.Qb(21,"div",8,9),L.Xb("mousedown",function(e){return t._handlePaginatorPress("after",e)})("click",function(){return t._handlePaginatorClick("after")})("touchend",function(){return t._stopInterval()}),L.rc(23,"\n  "),L.Mb(24,"div",2),L.rc(25,"\n"),L.Pb(),L.rc(26,"\n")),2&e&&(L.Db("mat-tab-header-pagination-disabled",t._disableScrollBefore),L.ec("matRippleDisabled",t._disableScrollBefore||t.disableRipple),L.Bb(9),L.Db("_mat-animation-noopable","NoopAnimations"===t._animationMode),L.Bb(12),L.Db("mat-tab-header-pagination-disabled",t._disableScrollAfter),L.ec("matRippleDisabled",t._disableScrollAfter||t.disableRipple))},directives:[z.f,le.a,St],styles:['.mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:"";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\n'],encapsulation:2}),e})(),Jt=(()=>{class e{}return e.\u0275mod=L.Jb({type:e}),e.\u0275inj=L.Ib({factory:function(t){return new(t||e)},imports:[[P.b,z.c,at.f,z.g,le.c,rt.a],z.c]}),e})(),en=(()=>{class e{}return e.\u0275mod=L.Jb({type:e}),e.\u0275inj=L.Ib({factory:function(t){return new(t||e)},imports:[[z.e,z.c],z.e,z.c]}),e})();var tn=n("lJxs"),nn=n("8szH"),rn=n("tk/3");let an=(()=>{class e{constructor(e){this.http=e}predictScore(e){return this.http.post("http://46.101.216.188/api/v2/scores",e).pipe(Object(tn.a)(e=>e))}random(e,t){let n=e+2*t*(Math.random()+Math.random()+Math.random()-1.5);return n<0?0:n>1?1:n}validatePredictors(e){Object.keys(e).forEach(t=>{e[t]?("string"==typeof e[t]&&(e[t]=e[t].replace(",",".")),e[t]=parseFloat(e[t]),isNaN(e[t])&&(e[t]=0)):e[t]=0})}convertToPredictorObject(e,t=""){let n=[],r={};t.length&&e&&e.length&&(n=e.split(t).map(e=>String.prototype.trim.apply(e)));for(let a=0;a<nn.a.length;a++)a<n.length?(r[nn.a[a]]=parseFloat(n[a].replace(",",".")),isNaN(r[nn.a[a]])&&(r[nn.a[a]]=0)):r[nn.a[a]]=0;return r}getRandomPredictors(){return{No_1_Angle_Deviation:this.random(nn.b.AD_1.mean,nn.b.AD_1.std),No_2_Angle_Deviation:this.random(nn.b.AD_2.mean,nn.b.AD_2.std),No_3_Angle_Deviation:this.random(nn.b.AD_3.mean,nn.b.AD_3.std),No_4_Angle_Deviation:this.random(nn.b.AD_4.mean,nn.b.AD_4.std),No_5_Angle_Deviation:this.random(nn.b.AD_5.mean,nn.b.AD_5.std),No_6_Angle_Deviation:this.random(nn.b.AD_6.mean,nn.b.AD_6.std),No_7_Angle_Deviation:this.random(nn.b.AD_7.mean,nn.b.AD_7.std),No_8_Angle_Deviation:this.random(nn.b.AD_8.mean,nn.b.AD_8.std),No_9_Angle_Deviation:this.random(nn.b.AD_9.mean,nn.b.AD_9.std),No_10_Angle_Deviation:this.random(nn.b.AD_10.mean,nn.b.AD_10.std),No_11_Angle_Deviation:this.random(nn.b.AD_11.mean,nn.b.AD_11.std),No_12_Angle_Deviation:this.random(nn.b.AD_12.mean,nn.b.AD_12.std),No_13_Angle_Deviation:this.random(nn.b.AD_13.mean,nn.b.AD_13.std),No_1_NASM_Deviation:this.random(nn.b.ND_1.mean,nn.b.ND_1.std),No_2_NASM_Deviation:this.random(nn.b.ND_2.mean,nn.b.ND_2.std),No_3_NASM_Deviation:this.random(nn.b.ND_3.mean,nn.b.ND_3.std),No_4_NASM_Deviation:this.random(nn.b.ND_4.mean,nn.b.ND_4.std),No_5_NASM_Deviation:this.random(nn.b.ND_5.mean,nn.b.ND_5.std),No_6_NASM_Deviation:this.random(nn.b.ND_6.mean,nn.b.ND_6.std),No_7_NASM_Deviation:this.random(nn.b.ND_7.mean,nn.b.ND_7.std),No_8_NASM_Deviation:this.random(nn.b.ND_8.mean,nn.b.ND_8.std),No_9_NASM_Deviation:this.random(nn.b.ND_9.mean,nn.b.ND_9.std),No_10_NASM_Deviation:this.random(nn.b.ND_10.mean,nn.b.ND_10.std),No_11_NASM_Deviation:this.random(nn.b.ND_11.mean,nn.b.ND_11.std),No_12_NASM_Deviation:this.random(nn.b.ND_12.mean,nn.b.ND_12.std),No_13_NASM_Deviation:this.random(nn.b.ND_13.mean,nn.b.ND_13.std),No_14_NASM_Deviation:this.random(nn.b.ND_14.mean,nn.b.ND_14.std),No_15_NASM_Deviation:this.random(nn.b.ND_15.mean,nn.b.ND_15.std),No_16_NASM_Deviation:this.random(nn.b.ND_16.mean,nn.b.ND_16.std),No_17_NASM_Deviation:this.random(nn.b.ND_17.mean,nn.b.ND_17.std),No_18_NASM_Deviation:this.random(nn.b.ND_18.mean,nn.b.ND_18.std),No_19_NASM_Deviation:this.random(nn.b.ND_19.mean,nn.b.ND_19.std),No_20_NASM_Deviation:this.random(nn.b.ND_20.mean,nn.b.ND_20.std),No_21_NASM_Deviation:this.random(nn.b.ND_21.mean,nn.b.ND_21.std),No_22_NASM_Deviation:this.random(nn.b.ND_22.mean,nn.b.ND_22.std),No_23_NASM_Deviation:this.random(nn.b.ND_23.mean,nn.b.ND_23.std),No_24_NASM_Deviation:this.random(nn.b.ND_24.mean,nn.b.ND_24.std),No_25_NASM_Deviation:this.random(nn.b.ND_25.mean,nn.b.ND_25.std),No_1_Time_Deviation:this.random(nn.b.TD_1.mean,nn.b.TD_1.std),No_2_Time_Deviation:this.random(nn.b.TD_2.mean,nn.b.TD_2.std)}}}return e.\u0275fac=function(t){return new(t||e)(L.Ub(rn.a))},e.\u0275prov=L.Hb({token:e,factory:e.\u0275fac,providedIn:"root"}),e})();function on(e,t,n,r){return new(n||(n=Promise))(function(a,o){function s(e){try{u(r.next(e))}catch(t){o(t)}}function i(e){try{u(r.throw(e))}catch(t){o(t)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(s,i)}u((r=r.apply(e,t||[])).next())})}class sn{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class un{refCount(e){return ln("refCount")}incRef(e){return ln("incRef")}timerAvailable(){return!0}time(e){return ln("time")}read(e){return ln("read")}readSync(e){return ln("readSync")}numDataIds(){return ln("numDataIds")}disposeData(e,t){return ln("disposeData")}write(e,t,n){return ln("write")}move(e,t,n,r,a){return ln("move")}memory(){return ln("memory")}floatPrecision(){return ln("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return ln("dispose")}}function ln(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function cn(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function dn(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,a=e.length,o=0;for(;a>0;)o=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[o],t[a]=t[o],e[o]=n,t[o]=r}function pn(e,t,n){return Math.max(e,Math.min(t,n))}function hn(e){return e%2==0?e:e+1}function fn(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function mn(e,t){const n=Math.random();return t*n+(1-n)*e}function gn(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function bn(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function yn(e,t,n=""){bn(Nn(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function xn(e){bn(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function vn(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Ln(e)&&!n)for(let r=0;r<e.length;++r)vn(e[r],t,n);else t.push(e);return t}function wn(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function _n(e){return 0===e.length}function Nn(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function kn(e){return e%1==0}function Cn(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function $n(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function In(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return cn(t),t}function Sn(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Tn(e,t=(e=>0),n){return new Promise((r,a)=>{let o=0;const s=()=>{if(e())return void r();o++;const i=t(o);null!=n&&o>=n?a():setTimeout(s,i)};s()})}function En(e,t){let n=1,r=-1;for(let o=0;o<e.length;++o)if(e[o]>=0)n*=e[o];else if(-1===e[o]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(e[o]<0)throw Error(`Shapes can not be < 0. Found ${e[o]} at dim ${o}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function An(e,t){const n=t.length;return bn((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),bn(e.every(e=>kn(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function Rn(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||a?null:An(t,e).sort();let s=0;for(let i=0;i<e.length;++i){if(null!=o){if(o[s]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==o[s]||o[s]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),o[s]<=i&&s++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function Dn(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function On(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Fn(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Mn(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Pn(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Ln(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Bn(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Vn(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function zn(e){return"string"==typeof e||e instanceof String}function Wn(e){return"boolean"==typeof e}function Gn(e){return"number"==typeof e}function Un(e){return Array.isArray(e)?Un(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Gn(e)?"float32":zn(e)?"string":Wn(e)?"bool":"float32"}function Hn(e){return!!(e&&e.constructor&&e.call&&e.apply)}function jn(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function qn(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Kn(e,t,n){const r=new Array;if(1===t.length){const a=t[0];for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],o=t.slice(1),s=o.reduce((e,t)=>e*t);for(let t=0;t<a;t++)r[t]=Kn(e+t*s,o,n)}return r}function Xn(e,t){if(0===e.length)return t[0];const n=e.reduce((e,t)=>e*t);if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return Kn(0,e,t)}function Qn(e,t){const n=Yn(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Yn(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Zn(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Xn(e,new Float32Array(n));if("int32"===t)return Xn(e,new Int32Array(n));if("bool"===t)return Xn(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Jn(e){e.forEach(t=>{bn(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function er(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function tr(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function nr(e){return e&&e.then&&"function"==typeof e.then}class rr{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(nr(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}function ar(){return sr}let or,sr=null;function ir(){if(null==or){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}or=e}return or}function ur(e,t){const n=function(){const e=ir();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const lr="Abs",cr="Acos",dr="Acosh",pr="Add",hr="AddN",fr="All",mr="Any",gr="ArgMax",br="ArgMin",yr="Asin",xr="Asinh",vr="Atan",wr="Atanh",_r="Atan2",Nr="AvgPool",kr="AvgPoolGrad",Cr="AvgPool3D",$r="AvgPool3DGrad",Ir="BatchMatMul",Sr="BatchToSpaceND",Tr="Bincount",Er="BroadcastTo",Ar="Cast",Rr="Ceil",Dr="ClipByValue",Or="Complex",Fr="ComplexAbs",Mr="Concat",Pr="Conv2D",Lr="Conv2DBackpropFilter",Br="Conv2DBackpropInput",Vr="Conv3D",zr="Conv3DBackpropFilterV2",Wr="Conv3DBackpropInputV2",Gr="Cos",Ur="Cosh",Hr="Cumsum",jr="CropAndResize",qr="DenseBincount",Kr="DepthToSpace",Xr="DepthwiseConv2dNative",Qr="DepthwiseConv2dNativeBackpropFilter",Yr="DepthwiseConv2dNativeBackpropInput",Zr="Diag",Jr="Dilation2D",ea="Dilation2DBackpropInput",ta="Dilation2DBackpropFilter",na="RealDiv",ra="Elu",aa="EluGrad",oa="Erf",sa="Equal",ia="Exp",ua="ExpandDims",la="Expm1",ca="FFT",da="Fill",pa="FlipLeftRight",ha="Floor",fa="FloorDiv",ma="FusedBatchNorm",ga="GatherV2",ba="GatherNd",ya="Greater",xa="GreaterEqual",va="Identity",wa="IFFT",_a="Imag",Na="IsFinite",ka="IsInf",Ca="IsNan",$a="LeakyRelu",Ia="Less",Sa="LessEqual",Ta="LinSpace",Ea="Log",Aa="Log1p",Ra="LogicalAnd",Da="LogicalNot",Oa="LogicalOr",Fa="LogSoftmax",Ma="LRN",Pa="LRNGrad",La="Max",Ba="Maximum",Va="MaxPool",za="MaxPoolGrad",Wa="MaxPool3D",Ga="MaxPool3DGrad",Ua="MaxPoolWithArgmax",Ha="Mean",ja="Min",qa="Minimum",Ka="MirrorPad",Xa="Mod",Qa="Multinomial",Ya="Multiply",Za="Neg",Ja="NotEqual",eo="NonMaxSuppressionV3",to="NonMaxSuppressionV4",no="NonMaxSuppressionV5",ro="OnesLike",ao="OneHot",oo="Pack",so="PadV2",io="Pool",uo="Pow",lo="Prelu",co="Prod",po="Range",ho="Real",fo="Reciprocal",mo="Relu",go="Reshape",bo="ResizeNearestNeighbor",yo="ResizeNearestNeighborGrad",xo="ResizeBilinear",vo="ResizeBilinearGrad",wo="Relu6",_o="Reverse",No="Round",ko="Rsqrt",Co="ScatterNd",$o="Select",Io="Selu",So="Slice",To="Sin",Eo="Sinh",Ao="Sign",Ro="Sigmoid",Do="Softplus",Oo="Sqrt",Fo="Sum",Mo="SpaceToBatchND",Po="SplitV",Lo="Softmax",Bo="SquaredDifference",Vo="Square",zo="Sub",Wo="SparseToDense",Go="StridedSlice",Uo="Tan",Ho="Tanh",jo="Tile",qo="TopK",Ko="Transform",Xo="Transpose",Qo="Unique",Yo="Unpack",Zo="UnsortedSegmentSum",Jo="ZerosLike",es="Step",ts="FromPixels",ns="RotateWithOffset",rs="_FusedMatMul",as="FusedConv2D",os="FusedDepthwiseConv2D",ss=ur("kernelRegistry",()=>new Map),is=ur("gradRegistry",()=>new Map);function us(e,t){const n=gs(e,t);return ss.get(n)}function ls(e){return is.get(e)}function cs(e){const t=ss.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[o,s]=a,[i]=o.split("_");i===e&&n.push(s)}return n}function ds(e){const{kernelName:t,backendName:n}=e,r=gs(t,n);ss.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),ss.set(r,e)}function ps(e){const{kernelName:t}=e;is.has(t)&&ar().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),is.set(t,e)}function hs(e,t){const n=gs(e,t);if(!ss.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ss.delete(n)}function fs(e){if(!is.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);is.delete(e)}function ms(e,t){cs(e).forEach(e=>{ds(Object.assign({},e,{backendName:t}))})}function gs(e,t){return`${t}_${e}`}function bs(e,t){return"string"===t?ws(e):ys([e],t)}function ys(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=vn(e)),ar().getBool("DEBUG")&&Fn(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function xs(){return ar().platform.now()}function vs(e,t){return ar().platform.fetch(e,t)}function ws(e,t="utf-8"){return t=t||"utf-8",ar().platform.encode(e,t)}function _s(e,t="utf-8"){return t=t||"utf-8",ar().platform.decode(e,t)}class Ns{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Cs)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let o;const s=xs();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:xs()-s})}if(ar().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<r.length;i++){const t=r[i];t.data().then(n=>{ks(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then(e=>e.kernelMs),extraInfo:o.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:o}=e;n.forEach(e=>{Promise.all([e.data(),r,o]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function ks(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class Cs{logKernelProfile(e,t,n,r,a,o){const s="number"==typeof r?Sn(`${r}ms`,9):r.error,i=Sn(e,25),u=t.rank,l=t.size,c=Sn(t.shape.toString(),14);let d="";for(const p in a){const e=a[p];if(null!=e){const n=e.shape||t.shape,r=n.length;d+=`${p}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${s}\t%c${u}D ${c}\t%c${l}\t%c${d}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function $s(e,t,n,r){const a=qn(t),o=function(e,t,n,r){const a=wn(t),o=r[r.length-1],s=new Array(o).fill(0),i=t.length,u="complex64"===n?Es(e):e;if(i>1)for(let l=0;l<a/o;l++){const e=l*o;for(let t=0;t<o;t++)s[t]=Math.max(s[t],Is(u[e+t],0,n).length)}return s}(e,t,n,a),s=t.length,i=Ts(e,t,n,a,o),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${s}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(e=>"    "+e).join("\n")),u.join("\n")}function Is(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:zn(e)?`'${e}'`:"bool"===n?Ss(e):parseFloat(e.toFixed(7)).toString(),Sn(r,t)}function Ss(e){return 0===e?"false":"true"}function Ts(e,t,n,r,a,o=!0){const s="complex64"===n?2:1,i=t[0],u=t.length;if(0===u)return"complex64"===n?[Is(Es(e)[0],0,n)]:"bool"===n?[Ss(e[0])]:[e[0].toString()];if(1===u){if(i>20){let t=Array.from(e.slice(0,3*s)),r=Array.from(e.slice((i-3)*s,i*s));return"complex64"===n&&(t=Es(t),r=Es(r)),["["+t.map((e,t)=>Is(e,a[t],n)).join(", ")+", ..., "+r.map((e,t)=>Is(e,a[i-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?Es(e):Array.from(e)).map((e,t)=>Is(e,a[t],n)).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),d=r[0]*s,p=[];if(i>20){for(let t=0;t<3;t++){const r=t*d;p.push(...Ts(e.slice(r,r+d),l,n,c,a,!1))}p.push("...");for(let t=i-3;t<i;t++){const r=t*d;p.push(...Ts(e.slice(r,r+d),l,n,c,a,t===i-1))}}else for(let m=0;m<i;m++){const t=m*d;p.push(...Ts(e.slice(t,t+d),l,n,c,a,m===i-1))}const h=2===u?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=",\n";for(let m=2;m<u;m++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(o?"":f),p}function Es(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class As{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=wn(e),null!=n){const e=n.length;bn(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||On(t,this.size),this.strides=qn(e)}set(e,...t){0===t.length&&(t=[0]),bn(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t])throw new Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Rs().makeTensor(this.values,this.shape,this.dtype)}}let Rs=null,Ds=null,Os=null;class Fs{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=wn(e),this.strides=qn(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ds.buffer(this.shape,this.dtype,e)}bufferSync(){return Ds.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Xn(this.shape,e)}arraySync(){return Xn(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=Rs().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>_s(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Rs().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>_s(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Rs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Rs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ds.print(this,e)}clone(){return this.throwIfDisposed(),Ds.clone(this)}toString(e=!1){return $s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ds.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Rs().makeVariable(this,e,t,n)}}Object.defineProperty(Fs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ur("Tensor",()=>Fs);class Ms extends Fs{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Nn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Rs().disposeTensor(this),this.dataId=e.dataId,Rs().incRef(this,null)}dispose(){Rs().disposeVariable(this),this.isDisposedInternal=!0}}var Ps,Ls,Bs,Vs,zs;Object.defineProperty(Ms,Symbol.hasInstance,{value:e=>e instanceof Fs&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ps||(Ps={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Ls||(Ls={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Bs||(Bs={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Vs||(Vs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(zs||(zs={}));const Ws={float32:Vs,int32:Ls,bool:Bs,complex64:zs};function Gs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ws[e][t]}function Us(e){return Gs(e,"int32")}function Hs(e,t){if(e.dtype===t.dtype)return[e,t];const n=Gs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function js(e,t){bn(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function qs(e,t){return t.some(t=>t.id===e.id)}function Ks(e){const t=[];return Xs(e,t,new Set),t}function Xs(e,t,n){if(null==e)return;if(e instanceof Fs)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const o in a){const e=a[o];n.has(e)||(n.add(e),Xs(e,t,n))}}function Qs(e){return null!=e.kernelName}class Ys{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Zs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ys}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ns(this.backendInstance),!0}setupRegisteredKernels(){cs(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){cs(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof un||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return Zs.nextTensorId++}nextVariableId(){return Zs.nextVariableId++}clone(e){const t=ei.runKernel(va,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>ei.runKernel(Ar,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==us(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const o=r-t-a-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,o=this.state.numTensors;let s,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const u=Qs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Qs(e)){const{kernelName:t,inputs:a,attrs:o}=e,u=us(t,this.backendName);bn(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),s=()=>{const e=this.backend.numDataIds();i=u.kernelFunc({inputs:a,attrs:o,backend:this.backend});const s=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const l=s.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};s=()=>{const e=this.backend.numDataIds();i=this.tidy(()=>t(this.backend,a));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,d=Qs(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,l,()=>s()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=s()}),r&&this.addTapeNode(u,l,t,d,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(e=>null!=l[e]?l[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=ls(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let o;r.saveAllInputs?(bn(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(e=>t[e])):o=e.map(e=>t[e]);const s=n.filter((e,t)=>a[t]);return o.concat(s)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let a=e;"string"===(n=n||"float32")&&zn(e[0])&&(a=e.map(e=>ws(e)));const o=r.write(a,t,n),s=new Fs(t,n,o,this.nextTensorId());if(this.trackTensor(s,r),"string"===n){const e=this.state.tensorInfo.get(o),t=Vn(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,r){const a=new Fs(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Ms(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Bn(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ms||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Bn(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,o){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},i=ls(e);null!=i&&(r=i.gradFunc),null!=r&&(s.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=Yn(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,o))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ks(e),n=new Set(t.map(e=>e.id));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(bn(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));bn(a instanceof Fs,()=>"The result y returned by f() must be a tensor.");const o=function(e,t,n){const r={},a={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],o=n.inputs;for(const e in o){const s=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[s.id]){n.outputs.forEach(e=>r[e.id]=!0),i=!0,a[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const s={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(o[t.outputs[e].id]){for(const e in n)o[n[e].id]=!0,s[t.id]=!0;break}}const i=[];for(let u=0;u<e.length;u++){const t=e[u];if(a[t.id]&&s[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,a);if(!r&&0===o.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=Qn(wn(e),"float32");return ei.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const o=t[a],s=[];if(o.outputs.forEach(t=>{const n=e[t.id];s.push(null!=n?n:null)}),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(s);for(const t in o.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n(()=>i[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const s=o.inputs[t];if(!Nn(a.shape,s.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=a;else{const t=e[s.id];e[s.id]=r(t,a),t.dispose()}}}}(e,o,e=>this.tidy(e),ti);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return bn(Hn(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;bn(t.every(e=>e instanceof Fs),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),bn(n.value instanceof Fs,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),bn(Hn(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),o=Array.isArray(a)?a:[a];bn(o.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),bn(o.every(e=>e instanceof Fs),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const s={};return o.forEach((e,t)=>{s[t]=()=>e}),s},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=xs(),n=await this.backend.time(e);return n.wallMs=xs()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ys;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Js(){const e=ir();if(null==e._tfengine){const t=new rr(e);e._tfengine=new Zs(t)}return sr=e._tfengine.ENV,Rs=()=>e._tfengine,e._tfengine}Zs.nextTensorId=0,Zs.nextVariableId=0;const ei=Js();function ti(e,t){return ei.runKernel(pr,{a:e,b:t})}function ni(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function ri(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ai=ar();function oi(e,t){let n=e;if(Ln(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Ln(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&ar().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&si(e,r,[]),r}function si(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ln(e))return void bn(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);bn(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),bn(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let a=0;a<e.length;++a)si(e[a],r,n.concat(a))}function ii(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function ui(e,t,n,r="numeric"){if(e instanceof Fs)return ii(r,e.dtype,t,n),e;let a=Un(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),ii(r,a,t,n),null==e||!Ln(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==e?"null":e.constructor.name}'`);const o=oi(e,a);Ln(e)||Array.isArray(e)||(e=[e]);const s="string"!==a?ys(e,a):vn(e,[],!0);return ei.makeTensor(s,o,a)}function li(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>ui(e,`${t}[${a}]`,n,r))}ai.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ai.registerFlag("IS_BROWSER",()=>ri()),ai.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),ai.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ai.registerFlag("PROD",()=>!1),ai.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ai.getBool("DEBUG")),ai.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ai.registerFlag("IS_TEST",()=>!1),ai.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),ai.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);const ci="__op";function di(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=ci;const a=(...e)=>{ei.startScope(n);try{const t=r(...e);return nr(t)&&console.error("Cannot return a Promise inside of tidy."),ei.endScope(t),t}catch(t){throw ei.endScope(null),t}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const pi=di({complex_:function(e,t){const n=ui(e,"real","complex"),r=ui(t,"imag","complex");return yn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),ei.runKernel(Or,{real:n,imag:r})}});function hi(e,t,n,r){if(null==r&&(r=Un(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Ln(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Jn(t);const e=wn(t),r=wn(n);bn(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let a=0;a<n.length;++a){const e=n[a],r=a!==n.length-1||e!==wn(t.slice(a));bn(n[a]===t[a]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Ln(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ys(e,r):vn(e,[],!0),ei.makeTensor(e,t,r)}function fi(e,t,n){return hi(e,t,oi(e,n),n)}const mi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function gi(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let o=0;o<a.length;++o){const s=a[o],i=Array.isArray(e)?e[o].tensor:e[s];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${i.dtype}`);const u={name:s,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise(async e=>{const t=await i.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let a=0;for(let o=0;o<t.length;o++){const e=t[o],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=4,r.set(e,a),a+=e.length}e(r)});r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:yi(await Promise.all(r)),specs:n}}function bi(e,t){const n={};let r,a=0;for(const o of t){const t=o.name,s=o.dtype,i=o.shape,u=wn(i);let l;if("quantization"in o){const n=o.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${o.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${o.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${o.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${s}.`)}const i=mi[n.dtype],c=e.slice(a,a+u*i),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===s)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(d.length);for(let e=0;e<d.length;e++)l[e]=d[e]*n.scale+n.min}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=ki()),l=r(d)}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${t}': ${s}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(d.length);for(let e=0;e<d.length;e++)l[e]=Math.round(d[e]*n.scale+n.min)}a+=u*i}else if("string"===s){const t=wn(o.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=mi[s],o=e.slice(a,a+u*r);if("float32"===s)l=new Float32Array(o);else if("int32"===s)l=new Int32Array(o);else if("bool"===s)l=new Uint8Array(o);else{if("complex64"!==s)throw new Error(`Unsupported dtype in weight '${t}': ${s}`);{l=new Float32Array(o);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=fi(e,i,"float32"),s=fi(r,i,"float32");n[t]=pi(a,s),a.dispose(),s.dispose()}}a+=u*r}"complex64"!==s&&(n[t]=fi(l,i,s))}return n}function yi(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}const xi="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function vi(e){return xi?Buffer.byteLength(e):new Blob([e]).size}function wi(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function _i(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ni(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:vi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:vi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function ki(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),o=new Uint32Array(a);for(let s=0;s<r.length;s++){const a=r[s];o[s]=e[n[a>>10]+(1023&a)]+t[a>>10]}return new Float32Array(a)}}class Ci{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ci.instance&&(Ci.instance=new Ci),Ci.instance}static registerSaveRouter(e){Ci.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ci.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ci.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ci.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ci.getInstance().loadRouters:Ci.getInstance().saveRouters).forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}const $i=e=>Ci.registerSaveRouter(e),Ii=e=>Ci.registerLoadRouter(e),Si=e=>Ci.getSaveHandlers(e),Ti=(e,t)=>Ci.getLoadHandlers(e,t),Ei="tensorflowjs",Ai="models_store",Ri="model_info_store";function Di(){if(!ar().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Oi(e){const t=e.result;t.createObjectStore(Ai,{keyPath:"modelPath"}),t.createObjectStore(Ri,{keyPath:"modelPath"})}class Fi{constructor(e){if(this.indexedDB=Di(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(Ei,1);r.onupgradeneeded=()=>Oi(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Ai,"readonly"),r=t.objectStore(Ai).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Ni(t),o=a.transaction(Ri,"readwrite");let s=o.objectStore(Ri);const i=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction(Ai,"readwrite");const i=u.objectStore(Ai).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{s=o.objectStore(Ri);const t=s.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),o.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}Fi.URL_SCHEME="indexeddb://";const Mi=e=>{return ar().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Fi.URL_SCHEME)?(t=e.slice(Fi.URL_SCHEME.length),new Fi(t)):null;var t};Ci.registerSaveRouter(Mi),Ci.registerLoadRouter(Mi);class Pi{constructor(){this.indexedDB=Di()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(Ei,1);n.onupgradeneeded=()=>Oi(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Ri,"readonly"),o=a.objectStore(Ri).getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(r.close(),t(o.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(Fi.URL_SCHEME)?t.slice(Fi.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(Ei,1);r.onupgradeneeded=()=>Oi(r),r.onsuccess=()=>{const a=r.result,o=a.transaction(Ri,"readwrite"),s=o.objectStore(Ri),i=s.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=s.delete(e),o=()=>{u=a.transaction(Ai,"readwrite");const r=u.objectStore(Ai).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=o,r.onerror=e=>(o(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),o.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}const Li="/",Bi="tensorflowjs_models",Vi="info",zi="model_topology",Wi="weight_specs",Gi="weight_data",Ui="model_metadata";function Hi(e){return{info:[Bi,e,Vi].join(Li),topology:[Bi,e,zi].join(Li),weightSpecs:[Bi,e,Wi].join(Li),weightData:[Bi,e,Gi].join(Li),modelMetadata:[Bi,e,Ui].join(Li)}}function ji(e){const t=e.split(Li);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Li)}class qi{constructor(e){if(!ar().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Hi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Ni(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(xi)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(xi){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(o),t}}qi.URL_SCHEME="localstorage://";const Ki=e=>{return ar().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(qi.URL_SCHEME)?(t=e.slice(qi.URL_SCHEME.length),new qi(t)):null;var t};Ci.registerSaveRouter(Ki),Ci.registerLoadRouter(Ki);class Xi{constructor(){bn(ar().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),bn("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Bi+Li,n=Li+Vi;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[ji(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=Hi(e=(t=e).startsWith(qi.URL_SCHEME)?t.slice(qi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const Qi="://";class Yi{constructor(){this.managers={}}static getInstance(){return null==Yi.instance&&(Yi.instance=new Yi),Yi.instance}static registerManager(e,t){bn(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(Qi)&&(e=e.slice(0,e.indexOf(Qi))),bn(e.length>0,()=>"scheme must not be an empty string.");const n=Yi.getInstance();bn(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Zi(e){if(-1===e.indexOf(Qi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Yi.getSchemes().join(",")}`);return{scheme:e.split(Qi)[0],path:e.split(Qi)[1]}}async function Ji(e,t,n=!1){bn(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Ci.getLoadHandlers(e);bn(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),bn(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const a=r[0],o=Ci.getSaveHandlers(t);bn(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),bn(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const s=o[0],i=Zi(e).scheme,u=Zi(e).path,l=i===Zi(e).scheme,c=await a.load();n&&l&&await Yi.getManager(i).removeModel(u);const d=await s.save(c);return n&&!l&&await Yi.getManager(i).removeModel(u),d.modelArtifactsInfo}async function eu(){const e=Yi.getSchemes(),t={};for(const n of e){const e=await Yi.getManager(n).listModels();for(const r in e)t[n+Qi+r]=e[r]}return t}async function tu(e){const t=Zi(e);return Yi.getManager(t.scheme).removeModel(t.path)}async function nu(e,t){return Ji(e,t,!1)}async function ru(e,t){return Ji(e,t,!0)}class au{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(ar().get("IS_BROWSER")){ar().setPlatform("browser",new au);try{Yi.registerManager(qi.URL_SCHEME,new Xi)}catch(sI){}try{Yi.registerManager(Fi.URL_SCHEME,new Pi)}catch(sI){}}let ou;function su(e,t="float32",n){return t=t||"float32",Jn(e),new As(e,t,n)}ar().get("IS_NODE")&&ar().setPlatform("node",new class{constructor(){this.util=n(4),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ar().global.fetch?ar().global.fetch(e,t):(null==ou&&(ou=n(3)),ou(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const iu=di({cast_:function(e,t){const n=ui(e,"x","cast");if(!Mn(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return ei.runKernel(Ar,{x:n},{dtype:t})}}),uu=di({clone_:function(e){const t=ui(e,"x","clone","string_or_numeric");return ei.runKernel(va,{x:t})}});function lu(e,t=!1){console.log(e.toString(t))}function cu(e){return new Promise(e=>setTimeout(e)).then(e)}Js(),Ds={buffer:su,cast:iu,clone:uu,print:lu};class du{constructor(e){if(!ar().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(du.URL_SCHEME)&&(e=e.slice(du.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]};null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=r,await cu(()=>a.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await cu(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ni(e)}}}}du.URL_SCHEME="downloads://";class pu{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const o=JSON.parse(a.target.result),s=o.modelTopology;if(null==s)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:s});const i=o.weightsManifest;if(null==i)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let u;try{u=this.checkManifestAndWeightFiles(i,t)}catch(sI){return void r(sI)}const l=[],c=[],d=[];i.forEach(e=>{e.paths.forEach(e=>{c.push(e),d.push(null)}),l.push(...e.weights)}),i.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=c.indexOf(e);if(d[a]=r,-1===d.indexOf(null)){const e={modelTopology:s,weightSpecs:l,weightData:wi(d),format:o.format,generatedBy:o.generatedBy,convertedBy:o.convertedBy};null!=o.signature&&(e.signature=o.signature),null!=o.userDefinedMetadata&&(e.userDefinedMetadata=o.userDefinedMetadata),null!=o.modelInitializer&&(e.modelInitializer=o.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])})})},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>_i(e.name)),a={};for(const o of e)o.paths.forEach(e=>{const o=_i(e);if(-1!==n.indexOf(o))throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(n.push(o),-1===r.indexOf(o))throw new Error(`Weight file with basename '${o}' is not provided.`);a[e]=t[r.indexOf(o)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}function hu(e){return new pu(e)}function fu(e,t,n,r){!function(e){bn(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){bn(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),bn(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),bn(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map(o=>(o.then(o=>{const s=n+ ++a/e.length*(r-n);return t(s),o}),o)))}async function mu(e,t){null==t&&(t={});const n=null==t.fetchFunc?ar().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await fu(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await fu(a,t.onProgress,.5,1)}async function gu(e,t="",n,r){return bu(e=>mu(e,{requestInit:r}))(e,t,n)}function bu(e){return async(t,n="",r)=>{const a=t.map(()=>!1),o={},s=null!=r?r.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u=mi["quantization"in e?e.quantization.dtype:e.dtype]*wn(e.shape),l=()=>{a[t]=!0,null==o[t]&&(o[t]=[]),o[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((t,n)=>{t===e.name&&(l(),s[n]=!0)}):l(),i.push(e.name),n+=u})}),!s.every(e=>e)){const e=r.filter((e,t)=>!s[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),l=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)})});const c=await e(l),d={};let p=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[p+t].byteLength;const a=new ArrayBuffer(r),s=new Uint8Array(a);let i=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[p+t]);s.set(e,i),i+=e.byteLength}o[e].forEach(e=>{const t=bi(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)d[n]=t[n]}),p+=n}),d}}Ci.registerSaveRouter(e=>ar().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(du.URL_SCHEME)?function(e="model"){return new du(e)}(e.slice(du.URL_SCHEME.length)):null);class yu{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(bn("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=ar().platform.fetch,bn(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&bn(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./model.weights.bin"],weights:e.weightSpecs}]};null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ni(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(h){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,o=t.convertedBy,s=t.format,i=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,c;if(null!=r){const e=await this.loadWeights(r);[l,c]=e}const d={modelTopology:n,weightSpecs:l,weightData:c,generatedBy:a,convertedBy:o,format:s};null!=i&&(d.signature=i),null!=u&&(d.userDefinedMetadata=u);const p=t.modelInitializer;return p&&(d.modelInitializer=p),d}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,o=[];for(const u of e)o.push(...u.weights);const s=[],i=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):s.push(a+e+r);return this.weightUrlConverter&&s.push(...await Promise.all(i)),[o,wi(await mu(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function xu(e){return null!=e.match(yu.URL_SCHEME_REGEX)}yu.URL_SCHEME_REGEX=/^https?:\/\//;const vu=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>xu(e)):xu(e),n)return wu(e,t)}return null};function wu(e,t){return new yu(e,t)}function _u(e,t){return wu(e,t)}Ci.registerSaveRouter(vu),Ci.registerLoadRouter(vu);class Nu{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class ku{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Cu(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Nu(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Nu({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Nu({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function $u(e){return new ku(e)}const Iu=di({matMul_:function(e,t,n=!1,r=!1){let a=ui(e,"a","matMul"),o=ui(t,"b","matMul");return[a,o]=Hs(a,o),ei.runKernel(Ir,{a:a,b:o},{transposeA:n,transposeB:r})}}),Su=di({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a=ui(e,"indices","oneHot","int32");return ei.runKernel(ao,{indices:a},{depth:t,onValue:n,offValue:r})}}),Tu=di({transpose_:function(e,t){const n=ui(e,"x","transpose");return null==t&&(t=n.shape.map((e,t)=>t).reverse()),bn(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{bn(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`)}),n.rank<=1?n.clone():ei.runKernel(Xo,{x:n},{perm:t})}}),Eu=di({confusionMatrix_:function(e,t,n){const r=ui(e,"labels","confusionMatrix"),a=ui(t,"predictions","confusionMatrix");bn(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),bn(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),bn(1===a.rank,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),bn(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),bn(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const o=Su(iu(r,"int32"),n),s=Su(iu(a,"int32"),n),i=Tu(o),u=Iu(i,s);return iu(u,"int32")}});function Au(e,t,n){if(xn(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=oi(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return hi(e,t,r,n)}let Ru;function Du(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,o=!1,s=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)o=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=us(ts,ei.backendName))return ei.runKernel(ts,{pixels:e},{numChannels:t});const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(s?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(o||a||i)&&(null==Ru&&(Ru=document.createElement("canvas").getContext("2d")),Ru.canvas.width=u,Ru.canvas.height=l,Ru.drawImage(e,0,0,u,l),c=Ru.getImageData(0,0,u,l).data),4===t)d=new Int32Array(c);else{const e=u*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}return Au(d,[l,u,t],"int32")}async function Ou(e,t=3){let n=null;if(ar().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Du(n,t)}async function Fu(e,t){let n=ui(e,"img","toPixels");if(!(e instanceof Fs)){const e=n;n=iu(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2];if(o>4||2===o)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${o}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const s=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let l=0;l<r*a;++l){const e=[0,0,0,255];for(let r=0;r<o;r++){const t=s[l*o+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===o?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*l;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Mu=di({fromPixels_:Du});function Pu(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===wn(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,o=a[a.length-1];let s=1;for(let d=0;d<a.length-1;++d)s*=a[d];const i=e.shape,u=a.slice();u.pop();let l=1;for(let d=o;d<n;++d)l*=i[d],u.push(i[d]);const c=[...qn(e.shape).map(e=>e/l),1].slice(0,o);return[u,s,l,c]}function Lu(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(o+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(o+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(o+" update.rank != "+(a+e.length-r));for(let s=0;s<a;++s)if(n.shape[s]!==t.shape[s])throw new Error(o+` updates.shape[${s}] (${n.shape[s]}) != indices.shape[${s}] (${t.shape[s]}).`);for(let s=0;s<n.rank-a;++s)if(n.shape[s+a]!==e[s+r])throw new Error(o+` updates.shape[${s+a}] (${n.shape[s+a]}) != shape[${s+a}] (${e[s+a]})`)}function Bu(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Lu(n,t,e)}function Vu(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,o=n.length;let s=1;for(let u=a;u<o;++u)s*=n[u];const i=a<1?1:a;return{sliceRank:a,numUpdates:wn(t.shape)/i,sliceSize:s,strides:[...qn(n.slice(0,a)),1],outputSize:wn(n)}}function zu(e,t,n){const r=e.shape.length;bn(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),bn(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)bn(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function Wu(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Gu(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Uu(e,t,n,r){const a=[...e];for(let o=a.length;o<r.length;o++)a.push(1);for(let o=0;o<n;o++)0===o?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Hu(e,t,n){return n<=e?n:n-(t-1)}function ju(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function qu(e,t,n,r,a,o,s,i,u){const l=e.length;let c=new Array(l),d=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Ku(s,u,l,r,e),d=Xu(i,u,l,a,e),p=Uu(o,u,l,e)}else for(let h=0;h<l;h++)c[h]=Yu(s,r,o,e,h,u),d[h]=Zu(i,a,o,e,h,u),p[h]=Qu(o,h,u);return{begin:c,end:d,strides:p}}function Ku(e,t,n,r,a){const o=[...a],s=ju(n,t);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=0;else{const a=Hu(t,n,i);let s=r[a];e&1<<a&&(s=0),o[i]=s}return o}function Xu(e,t,n,r,a){const o=[...a],s=ju(n,t);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const a=Hu(t,n,i);let s=r[a];e&1<<a&&(s=Number.MAX_SAFE_INTEGER),o[i]=s}for(let i=0;i<o.length;i++){const e=a[i];o[i]<0&&(o[i]+=e),o[i]=pn(0,o[i],a[i])}return o}function Qu(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Yu(e,t,n,r,a,o){let s=t[a];(e&1<<a||o&1<<a||null==s)&&(s=(n[a]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const i=r[a];return s<0&&(s+=i),s=pn(0,s,i-1),s}function Zu(e,t,n,r,a,o){let s=t[a];const i=n[a]||1;(e&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=i>0?pn(0,s,u):pn(-1,s,u-1),s}function Ju(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function el(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function tl(e,t,n){let r;const a=e.shape.length;let o;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(e=>{bn(-1!==e,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,o=o.map((t,n)=>t>=0?t:(bn(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,o]}function nl(e,t,n,r,a,o,s,i,u){let l=t.slice(),c=n.slice(),d=r;null==r&&(d=new Array(l.length));const p=Wu(s);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==s&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==s&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=e.length-l.length,f=Wu(i),m=e.slice();f.forEach(e=>{l[e]=0,c[e]=1,m.splice(e,0,1)});const{begin:g,end:b,strides:y}=qu(m,p,h,l,c,d,a,o,s);l=g,c=b,d=y;const x=Wu(u);x.forEach(e=>{c[e]=l[e]+1,d[e]=1});const v=Gu(l,c,d),w=v.filter((e,t)=>-1===x.indexOf(t));return{nonStrided:d.every(e=>1===e),$begin:l,$end:c,$strides:d,size:v,newShape:m,outShape:w}}class rl{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class al{constructor(){this.classNameMap={}}static getMap(){return null==al.instance&&(al.instance=new al),al.instance}static register(e){al.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ol(e){bn(null!=e.className,()=>"Class being registered does not have the static className property defined."),bn("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),bn(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),al.register(e)}const sl=.1;function il(e,t,n){return null==n&&(n=ul()),ll(e,t,(e,t)=>hl(e,t,n))}function ul(){return 32===ei.backend.floatPrecision()?.001:sl}function ll(e,t,n){let r=!0;if((Ln(e)||Ln(t))&&(r=!1),Ln(e)&&Ln(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=oi(e),r=oi(t);if(!Nn(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=Ln(e)?e:vn(e),o=Ln(t)?t:vn(t);if(a.length!==o.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${o.length}.\nActual:   ${a}.\nExpected: ${o}.`);for(let s=0;s<o.length;++s){const e=a[s],t=o[s];if(!n(e,t))throw new Error(`Arrays differ: actual[${s}] = ${e}, expected[${s}] = ${t}.\nActual:   ${a}.\nExpected: ${o}.`)}}function cl(e,t){e().then(()=>t.fail(),()=>t())}function dl(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return zn(e)||zn(e[0])||zn(t)||zn(t[0])?ll(e,n,(e,t)=>e==t):ll(e,t,(e,t)=>hl(e,t,0))}function pl(e,t,n){if(null==n&&(n=ul()),!hl(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function hl(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function fl(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function ml(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function gl(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?gl(n):e[t]=ws(n)}return e}const bl="3.3.0";function yl(){ar().set("PROD",!0)}function xl(){ar().set("DEBUG",!0)}function vl(){ar().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function wl(e){ar().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function _l(){ei.disposeVariables()}function Nl(){return ei}function kl(){return ei.memory()}function Cl(e){return ei.profile(e)}function $l(e,t){return ei.tidy(e,t)}function Il(e){Ks(e).forEach(e=>e.dispose())}function Sl(e){return ei.keep(e)}function Tl(e){return ei.time(e)}function El(e){return ei.setBackend(e)}function Al(){return ei.ready()}function Rl(){return ei.backendName}function Dl(e){ei.removeBackend(e)}function Ol(e){return ei.findBackend(e)}function Fl(e){return ei.findBackendFactory(e)}function Ml(e,t,n=1){return ei.registerBackend(e,t,n)}function Pl(){return ei.backend}function Ll(e,t){ar().setPlatform(e,t)}Os=wl;const Bl=di({add_:function(e,t){let n=ui(e,"a","add"),r=ui(t,"b","add");return[n,r]=Hs(n,r),ei.runKernel(pr,{a:n,b:r})}}),Vl=di({floorDiv_:function(e,t){let n=ui(e,"a","floorDiv"),r=ui(t,"b","floorDiv");return[n,r]=Hs(n,r),ei.runKernel(fa,{a:n,b:r})}}),zl=di({div_:function(e,t){let n=ui(e,"a","div"),r=ui(t,"b","div");return[n,r]=Hs(n,r),"int32"===n.dtype&&"int32"===r.dtype?Vl(n,r):ei.runKernel(na,{a:n,b:r},{})}}),Wl=di({mul_:function(e,t){let n=ui(e,"a","mul"),r=ui(t,"b","mul");return[n,r]=Hs(n,r),ei.runKernel(Ya,{a:n,b:r})}}),Gl=di({sqrt_:function(e){const t=ui(e,"x","sqrt");return ei.runKernel(Oo,{x:t})}}),Ul=di({square_:function(e){const t=ui(e,"x","square");return ei.runKernel("Square",{x:t},{})}}),Hl=di({zerosLike_:function(e){const t=ui(e,"x","zerosLike");return ei.runKernel(Jo,{x:t})}});function jl(e){return bn(Hn(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=ui(t,"x","tf.grad","string_or_numeric"),a=null!=n?ui(n,"dy","tf.grad"):null;return ei.tidy(()=>{const{value:t,grads:n}=ei.gradients(()=>e(r),[r],a);return null!=a&&yn(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Zl(n),n[0]})}}function ql(e){return bn(Hn(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{bn(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=li(t,"args","tf.grads","string_or_numeric"),a=null!=n?ui(n,"dy","tf.grads"):null;return ei.tidy(()=>{const{value:t,grads:n}=ei.gradients(()=>e(...r),r,a);return null!=a&&yn(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Zl(n),n})}}function Kl(e){return bn(Hn(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{bn(t instanceof Fs,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),bn(null==n||n instanceof Fs,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:a}=ei.gradients(()=>e(t),[t],n);return Zl(r),{grad:r[0],value:a}}}function Xl(e){return bn(Hn(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{bn(Array.isArray(t)&&t.every(e=>e instanceof Fs),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),bn(null==n||n instanceof Fs,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=ei.gradients(()=>e(...t),t,n);return null!=n&&yn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Zl(r.grads),r}}function Ql(e,t){bn(Hn(e),()=>"The f passed in variableGrads(f) must be a function"),bn(null==t||Array.isArray(t)&&t.every(e=>e instanceof Ms),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in ei.registeredVariables)t.push(ei.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,a=t.length;bn((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const{value:o,grads:s}=ei.gradients(e,t,null,!0);bn(s.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),bn(0===o.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const i={};return t.forEach((e,t)=>{null!=s[t]&&(i[e.name]=s[t])}),null!=r&&r.forEach(e=>i[e.name]=null),{value:o,grads:i}}function Yl(e){return ei.customGrad(e)}function Zl(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Jl(e,t){if((Ln(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ln(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return hi(e,[],[],t)}class ec extends rl{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return Il(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Ql(e,t)}dispose(){null!=this.iterations_&&Il(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Jl(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ec,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class tc extends ec{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ei.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:$l(()=>Hl(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:$l(()=>Hl(r).variable(!1))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;$l(()=>{const e=Bl(Wl(o,this.rho),Wl(Ul(a),1-this.rho)),t=Wl(zl(Gl(Bl(s,this.epsilon)),Gl(Bl(o,this.epsilon))),a),n=Bl(Wl(s,this.rho),Wl(Ul(t),1-this.rho));o.assign(e),s.assign(n);const i=Bl(Wl(t,-this.learningRate),r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Il(this.accumulatedGrads.map(e=>e.variable)),Il(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function nc(e,t,n){return ei.runKernel(da,{},{shape:e,value:t,dtype:n})}tc.className="Adadelta",ol(tc);class rc extends ec{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ei.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:$l(()=>nc(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedGrads[n].variable;$l(()=>{const e=Bl(o,Ul(a));o.assign(e);const t=Bl(Wl(zl(a,Gl(Bl(e,ei.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Il(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}rc.className="Adagrad",ol(rc);const ac=di({pow_:function(e,t){let n=ui(e,"base","pow"),r=ui(t,"exp","pow");return[n,r]=Hs(n,r),ei.runKernel(uo,{a:n,b:r})}}),oc=di({sub_:function(e,t){let n=ui(e,"a","sub"),r=ui(t,"b","sub");return[n,r]=Hs(n,r),ei.runKernel(zo,{a:n,b:r})}});class sc extends ec{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],$l(()=>{this.accBeta1=Jl(t).variable(),this.accBeta2=Jl(n).variable()}),null==r&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);$l(()=>{const n=oc(1,this.accBeta1),r=oc(1,this.accBeta2);t.forEach((t,a)=>{const o=ei.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:$l(()=>Hl(o).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:$l(()=>Hl(o).variable(!1))});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=Bl(Wl(i,this.beta1),Wl(s,1-this.beta1)),c=Bl(Wl(u,this.beta2),Wl(Ul(s),1-this.beta2)),d=zl(l,n),p=zl(c,r);i.assign(l),u.assign(c);const h=Bl(Wl(zl(d,Bl(Gl(p),this.epsilon)),-this.learningRate),o);o.assign(h)}),this.accBeta1.assign(Wl(this.accBeta1,this.beta1)),this.accBeta2.assign(Wl(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Il(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Il(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),$l(()=>{this.accBeta1.assign(ac(this.beta1,this.iterations_+1)),this.accBeta2.assign(ac(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}sc.className="Adam",ol(sc);const ic=di({abs_:function(e){const t=ui(e,"x","abs");return ei.runKernel("complex64"===t.dtype?Fr:lr,{x:t})}});function uc(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const o=n-1-a,s=e[o]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(o)}return r}function lc(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],o=t.length-r-1,s=t[o];(null==a||1===a&&s>1)&&n.unshift(o)}return n}function cc(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let o=t[t.length-a-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const dc=di({maximum_:function(e,t){let n=ui(e,"a","maximum"),r=ui(t,"b","maximum");return[n,r]=Hs(n,r),"bool"===n.dtype&&(n=iu(n,"int32"),r=iu(r,"int32")),cc(n.shape,r.shape),ei.runKernel(Ba,{a:n,b:r})}});class pc extends ec{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],$l(()=>{this.iteration=Jl(0).variable(),this.accBeta1=Jl(t).variable()}),null==r&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);$l(()=>{const n=oc(1,this.accBeta1),r=zl(-this.learningRate,Bl(Wl(this.iteration,this.decay),1));t.forEach((t,a)=>{const o=ei.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Hl(o).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Hl(o).variable(!1)});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=Bl(Wl(i,this.beta1),Wl(s,1-this.beta1)),c=Wl(u,this.beta2),d=ic(s),p=dc(c,d);i.assign(l),u.assign(p);const h=Bl(Wl(zl(r,n),zl(l,Bl(p,this.epsilon))),o);o.assign(h)}),this.iteration.assign(Bl(this.iteration,1)),this.accBeta1.assign(Wl(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Il(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Il(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}pc.className="Adamax",ol(pc);class hc extends ec{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=ei.registeredVariables[t];$l(()=>{const e=Bl(Wl(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Sl(Jl(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}hc.className="SGD",ol(hc);class fc extends hc{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Jl(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ei.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:$l(()=>Hl(r).variable(e))}}const a=this.accumulations[n].variable,o=Array.isArray(e)?e[n].tensor:e[t];null!=o&&$l(()=>{let e;const t=Bl(Wl(this.m,a),o);e=Bl(Wl(this.c,this.useNesterov?Bl(o,Wl(t,this.m)):t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Il(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}fc.className="Momentum",ol(fc);class mc extends ec{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=ei.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ei.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:$l(()=>Hl(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:$l(()=>Hl(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:$l(()=>Hl(r).variable(a))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;$l(()=>{const e=Bl(Wl(s,this.decay),Wl(Ul(o),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Bl(Wl(t,this.decay),Wl(o,1-this.decay)),u=zl(Wl(o,this.learningRate),Gl(oc(e,Bl(Ul(a),this.epsilon)))),l=Bl(Wl(i,this.momentum),u);s.assign(e),t.assign(a),i.assign(l);const c=oc(r,l);r.assign(c)}else{const e=Bl(Wl(s,this.decay),Wl(Ul(o),1-this.decay)),t=Bl(Wl(i,this.momentum),zl(Wl(o,this.learningRate),Gl(Bl(e,this.epsilon))));s.assign(e),i.assign(t);const n=oc(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Il(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Il(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Il(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}mc.className="RMSProp",ol(mc);const gc=di({acos_:function(e){const t=ui(e,"x","acos");return ei.runKernel(cr,{x:t})}}),bc=di({acosh_:function(e){const t=ui(e,"x","acosh");return ei.runKernel(dr,{x:t})}}),yc=di({addN_:function(e){bn(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),bn(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);const t=e.map((e,t)=>ui(e,`tensors${t}`,"addN")),n=t[0];return t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!Nn(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),ei.runKernel(hr,t)}}),xc=di({all_:function(e,t=null,n=!1){const r=ui(e,"x","all","bool");return ei.runKernel(fr,{x:r},{axis:t,keepDims:n})}}),vc=di({any_:function(e,t=null,n=!1){const r=ui(e,"x","any","bool");return ei.runKernel(mr,{x:r},{axis:t,keepDims:n})}}),wc=di({argMax_:function(e,t=0){const n=ui(e,"x","argMax");return ei.runKernel(gr,{x:n},{axis:t})}}),_c=di({argMin_:function(e,t=0){const n=ui(e,"x","argMin");return ei.runKernel(br,{x:n},{axis:t})}}),Nc=di({asin_:function(e){const t=ui(e,"x","asin");return ei.runKernel(yr,{x:t})}}),kc=di({asinh_:function(e){const t=ui(e,"x","asinh");return ei.runKernel(xr,{x:t})}}),Cc=di({atan_:function(e){const t=ui(e,"x","atan");return ei.runKernel(vr,{x:t})}}),$c=di({atan2_:function(e,t){let n=ui(e,"a","atan2"),r=ui(t,"b","atan2");return[n,r]=Hs(n,r),ei.runKernel(_r,{a:n,b:r})}}),Ic=di({atanh_:function(e){const t=ui(e,"x","atanh");return ei.runKernel(wr,{x:t})}});function Sc(e,t,n,r,a="NHWC",o){return Ac(e,[...t,e[3]],n,o,r,null,null,Vc(a))}function Tc(e,t,n,r,a,o,s="channelsLast"){const[i,u]=Oc(t);let l;if("channelsLast"===s)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);l=[i,u,e[1],e[1]]}return Ac(e,l,n,r,a,o,!1,s)}function Ec(e,t,n,r,a,o,s="NDHWC"){const[i,u,l]=Fc(t);let c,d;if("NDHWC"===s)d="channelsLast",c=[i,u,l,e[4],e[4]];else{if("NCDHW"!==s)throw new Error(`Unknown dataFormat ${s}`);d="channelsFirst",c=[i,u,l,e[1],e[1]]}return Rc(e,c,n,r,a,!1,d,o)}function Ac(e,t,n,r,a,o,s=!1,i="channelsLast"){let[u,l,c,d]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c]=e}const[p,h,,f]=t,[m,g]=Oc(n),[b,y]=Oc(r),x=Mc(p,b),v=Mc(h,y),{padInfo:w,outHeight:_,outWidth:N}=function(e,t,n,r,a,o,s,i,u){let l,c,d;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Dc(e,t,n));const o=e[1];return[Pc((e[0]-t+2*r)/n+1,a),Pc((o-t+2*r)/n+1,a)]}([t,n],o,r,e,i);c=a[0],d=a[1]}else if("same"===e){c=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+o-t),i=Math.max(0,(d-1)*a+s-n),u=Math.floor(e/2),p=e-u,h=Math.floor(i/2);l={top:u,bottom:p,left:h,right:i-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-o+1)/r),d=Math.ceil((n-s+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:h,left:f,right:m,type:0===p&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},c=Pc((t-o+p+h)/r+1,i),d=Pc((n-s+f+m)/a+1,i)}}return{padInfo:l,outHeight:c,outWidth:d}}(a,l,c,m,g,x,v,o,i),k=s?f*d:f;let C;return"channelsFirst"===i?C=[u,k,_,N]:"channelsLast"===i&&(C=[u,_,N,k]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:d,outHeight:_,outWidth:N,outChannels:k,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:e,outShape:C,filterShape:t}}function Rc(e,t,n,r,a,o=!1,s="channelsLast",i){let[u,l,c,d,p]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[u,l,c,d,p]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[u,p,l,c,d]=e}const[h,f,m,,g]=t,[b,y,x]=Fc(n),[v,w,_]=Fc(r),N=Mc(h,v),k=Mc(f,w),C=Mc(m,_),{padInfo:$,outDepth:I,outHeight:S,outWidth:T}=function(e,t,n,r,a,o,s,i,u,l,c){let d,p,h,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,a,o){null==a&&(a=Dc(e,t,r));const s=e[1],i=e[2];return[Pc((e[0]-t+2*a)/r+1,o),Pc((s-t+2*a)/r+1,o),Pc((i-t+2*a)/r+1,o),1]}([t,n,r,1],i,0,a,e,c);p=o[0],h=o[1],f=o[2]}else if("same"===e){p=Math.ceil(t/a),h=Math.ceil(n/o),f=Math.ceil(r/s);const e=(p-1)*a+i-t,c=(h-1)*o+u-n,m=(f-1)*s+l-r,g=Math.floor(e/2),b=e-g,y=Math.floor(c/2),x=c-y,v=Math.floor(m/2);d={top:y,bottom:x,left:v,right:m-v,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/a),h=Math.ceil((n-u+1)/o),f=Math.ceil((r-l+1)/s)}return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}(a,l,c,d,b,y,x,N,k,C,i),E=o?g*p:g;let A;return"channelsFirst"===s?A=[u,E,I,S,T]:"channelsLast"===s&&(A=[u,I,S,T,E]),{batchSize:u,dataFormat:s,inDepth:l,inHeight:c,inWidth:d,inChannels:p,outDepth:I,outHeight:S,outWidth:T,outChannels:E,padInfo:$,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:k,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:_,inShape:e,outShape:A,filterShape:t}}function Dc(e,t,n,r=1){const a=Mc(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Oc(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Fc(e){return"number"==typeof e?[e,e,e]:e}function Mc(e,t){return t<=1?e:e+(e-1)*(t-1)}function Pc(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Lc(e){const[t,n,r]=Oc(e);return 1===t&&1===n&&1===r}function Bc(e,t){return Lc(e)||Lc(t)}function Vc(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const zc=di({reshape_:function(e,t){const n=ui(e,"x","reshape","string_or_numeric");return ei.runKernel(go,{x:n},{shape:t})}}),Wc=di({avgPool_:function(e,t,n,r,a){const o=ui(e,"x","avgPool","float32");bn(Bc(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let s=o,i=!1;3===o.rank&&(i=!0,s=zc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),bn(4===s.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`),null!=a&&bn(kn(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);let u=ei.runKernel(Nr,{x:s},{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return u=iu(u,o.dtype),i?zc(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Gc=di({avgPool3d_:function(e,t,n,r,a,o="NDHWC"){const s=ui(e,"x","avgPool3d","float32");let i=s,u=!1;4===s.rank&&(u=!0,i=zc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),bn(5===i.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),bn("NDHWC"===o,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),null!=a&&bn(kn(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);let l=ei.runKernel(Cr,{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:o});return l=iu(l,i.dtype),u?zc(l,[l.shape[1],l.shape[2],l.shape[3],l.shape[4]]):l}}),Uc=di({concat_:function(e,t=0){bn(e.length>=1,()=>"Pass at least one tensor to concat");const n=li(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length?uu(n[0]):ei.runKernel(Mr,n,{axis:t})}}),Hc=di({sigmoid_:function(e){const t=ui(e,"x","sigmoid");return ei.runKernel(Ro,{x:t})}}),jc=di({slice_:function(e,t,n){const r=ui(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");return ei.runKernel(So,{x:r},{begin:t,size:n})}}),qc=di({tanh_:function(e){const t=ui(e,"x","tanh");return ei.runKernel(Ho,{x:t})}}),Kc=di({basicLSTMCell_:function(e,t,n,r,a,o){const s=ui(e,"forgetBias","basicLSTMCell"),i=ui(t,"lstmKernel","basicLSTMCell"),u=ui(n,"lstmBias","basicLSTMCell"),l=ui(r,"data","basicLSTMCell"),c=ui(a,"c","basicLSTMCell"),d=ui(o,"h","basicLSTMCell"),p=Uc([l,d],1),h=Iu(p,i),f=Bl(h,u),m=f.shape[1]/4,g=[f.shape[0],m],b=jc(f,[0,0],g),y=jc(f,[0,m],g),x=jc(f,[0,2*m],g),v=jc(f,[0,3*m],g),w=Bl(Wl(Hc(b),qc(y)),Wl(c,Hc(Bl(s,x))));return[w,Wl(qc(w),Hc(v))]}}),Xc=di({batchToSpaceND_:function(e,t,n){const r=ui(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);return bn(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),bn(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),bn(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`),ei.runKernel(Sr,{x:r},{blockShape:t,crops:n})}}),Qc=di({batchNorm_:function(e,t,n,r,a,o){null==o&&(o=.001);const s=ui(e,"x","batchNorm"),i=ui(t,"mean","batchNorm"),u=ui(n,"variance","batchNorm");let l,c;null!=a&&(l=ui(a,"scale","batchNorm")),null!=r&&(c=ui(r,"offset","batchNorm")),bn(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),bn(null==c||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),bn(null==l||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d=function(e){let t;return t=0===e.rank||1===e.rank?zc(e,[1,1,1,e.size]):2===e.rank?zc(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?zc(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(s),p=ei.runKernel(ma,{x:d,scale:l,offset:c,mean:i,variance:u},{varianceEpsilon:o});return zc(p,s.shape)}}),Yc=di({batchNorm2d_:function(e,t,n,r,a,o){const s=ui(e,"x","batchNorm"),i=ui(t,"mean","batchNorm"),u=ui(n,"variance","batchNorm");let l,c;return null!=a&&(l=ui(a,"scale","batchNorm")),null!=r&&(c=ui(r,"offset","batchNorm")),bn(2===s.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`),bn(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),bn(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&bn(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&bn(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Qc(s,i,u,c,l,o)}}),Zc=di({batchNorm3d_:function(e,t,n,r,a,o){const s=ui(e,"x","batchNorm"),i=ui(t,"mean","batchNorm"),u=ui(n,"variance","batchNorm");let l,c;return null!=a&&(l=ui(a,"scale","batchNorm")),null!=r&&(c=ui(r,"offset","batchNorm")),bn(3===s.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`),bn(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),bn(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&bn(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&bn(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Qc(s,i,u,c,l,o)}}),Jc=di({batchNorm4d_:function(e,t,n,r,a,o){const s=ui(e,"x","batchNorm"),i=ui(t,"mean","batchNorm"),u=ui(n,"variance","batchNorm");let l,c;return null!=a&&(l=ui(a,"scale","batchNorm")),null!=r&&(c=ui(r,"offset","batchNorm")),bn(4===s.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`),bn(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),bn(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&bn(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&bn(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Qc(s,i,u,c,l,o)}}),ed=di({bincount_:function(e,t,n){const r=ui(e,"x","bincount"),a=ui(t,"weights","bincount");return bn("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),bn(n>=0,()=>`size must be non-negative, but got ${n}.`),bn(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`),ei.runKernel(Tr,{x:r,weights:a},{size:n})}}),td=di({broadcastTo_:function(e,t){let n=ui(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=zc(n,e)}const a=n.shape,o=Array.from(t);for(let s=t.length-1;s>=0;s--)if(a[s]===t[s])o[s]=1;else if(1!==n.shape[s])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);return 0===o.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length?uu(n):ei.runKernel(jo,{x:n},{reps:o})}}),nd=di({ceil_:function(e){const t=ui(e,"x","ceil");return ei.runKernel(Rr,{x:t})}}),rd=di({clipByValue_:function(e,t,n){const r=ui(e,"x","clipByValue");return bn(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),ei.runKernel(Dr,{x:r},{clipValueMin:t,clipValueMax:n})}}),ad=di({concat1d_:function(e){return Uc(e,0)}}),od=di({concat2d_:function(e,t){return Uc(e,t)}}),sd=di({concat3d_:function(e,t){return Uc(e,t)}}),id=di({concat4d_:function(e,t){return Uc(e,t)}}),ud=di({conv2d_:function(e,t,n,r,a="NHWC",o=[1,1],s){const i=ui(e,"x","conv2d"),u=ui(t,"filter","conv2d");let l=i,c=!1;3===i.rank&&(c=!0,l=zc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),bn(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),bn(4===u.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),null!=s&&bn(kn(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const d="NHWC"===a?l.shape[3]:l.shape[1];bn(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),bn(Bc(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const p=ei.runKernel(Pr,{x:l,filter:u},{strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:s});return c?zc(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),ld=di({conv1d_:function(e,t,n,r,a="NWC",o=1,s){const i=ui(e,"x","conv1d"),u=ui(t,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=zc(i,[1,i.shape[0],i.shape[1]])),bn(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),bn(3===u.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),null!=s&&bn(kn(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`),bn(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),bn(Bc(n,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`),bn("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const d=zc(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=zc(l,[l.shape[0],1,l.shape[1],l.shape[2]]),h=ud(p,d,[1,n],r,"NHWC",[1,o],s);return zc(h,c?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}}),cd=di({conv2DBackpropInput_:function(e,t,n,r,a,o="NHWC",s){bn(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=zc(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),bn(4===i.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),bn(4===u.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),bn(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===o?i[3]:i[1],d="NHWC"===o?u.shape[3]:u.shape[1];bn(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),bn(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),null!=s&&bn(kn(a),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`);const p=ei.runKernel(Br,{dy:u,filter:n},{strides:r,pad:a,dataFormat:o,dimRoundingMode:s,inputShape:i});return l?zc(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),dd=di({conv2dTranspose_:function(e,t,n,r,a,o){const s=ui(e,"x","conv2dTranspose"),i=ui(t,"filter","conv2dTranspose");return cd(n,s,i,r,a,"NHWC",o)}}),pd=di({conv3d_:function(e,t,n,r,a="NDHWC",o=[1,1,1]){const s=ui(e,"x","conv3d"),i=ui(t,"filter","conv3d");let u=s,l=!1;4===s.rank&&(l=!0,u=zc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),bn(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),bn(5===i.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),bn(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),bn(Bc(n,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),bn("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`);const c=ei.runKernel(Vr,{x:u,filter:i},{strides:n,pad:r,dataFormat:a,dilations:o});return l?zc(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),hd=di({conv3DBackpropInput_:function(e,t,n,r,a){bn(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,s=t,i=!1;4===t.rank&&(i=!0,s=zc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,e[0],e[1],e[2],e[3]]);const u=o[4],l=s.shape[4];bn(5===o.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),bn(5===s.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`),bn(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),bn(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),bn(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c=ei.runKernel(Wr,{dy:s,filter:n},{pad:a,strides:r,inputShape:o});return i?zc(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),fd=di({conv3dTranspose_:function(e,t,n,r,a){const o=ui(e,"x","conv3dTranspose"),s=ui(t,"filter","conv3dTranspose");return hd(n,o,s,r,a)}}),md=di({cos_:function(e){const t=ui(e,"x","cos");return ei.runKernel(Gr,{x:t})}}),gd=di({cosh_:function(e){const t=ui(e,"x","cosh");return ei.runKernel(Ur,{x:t})}}),bd=di({cumsum_:function(e,t=0,n=!1,r=!1){const a=ui(e,"x","cumsum");return ei.runKernel(Hr,{x:a},{axis:t,exclusive:n,reverse:r})}}),yd=di({denseBincount_:function(e,t,n,r=!1){const a=ui(e,"x","denseBincount"),o=ui(t,"weights","denseBincount");return bn("int32"===a.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),bn(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),bn(n>=0,()=>`size must be non-negative, but got ${n}.`),bn(o.size===a.size||0===o.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${o.shape}.`),ei.runKernel(qr,{x:a,weights:o},{size:n,binaryOutput:r})}}),xd=di({depthToSpace_:function(e,t,n="NHWC"){const r=ui(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],o="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];return bn(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),bn(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${t} for depthToSpace with input shape\n        ${r.shape}`),bn(s%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${r.shape}`),ei.runKernel(Kr,{x:r},{blockSize:t,dataFormat:n})}}),vd=di({depthwiseConv2d_:function(e,t,n,r,a="NHWC",o=[1,1],s){const i=ui(e,"x","depthwiseConv2d"),u=ui(t,"filter","depthwiseConv2d");let l=i,c=!1;3===i.rank&&(c=!0,l=zc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),bn(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),bn(4===u.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),bn(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=s&&bn(kn(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const d=ei.runKernel(Xr,{x:l,filter:u},{strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:s});return c?zc(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),wd=di({diag_:function(e){const t=ui(e,"x","diag");return ei.runKernel(Zr,{x:t})}}),_d=di({dilation2d_:function(e,t,n,r,a=[1,1],o="NHWC"){const s=ui(e,"x","dilation2d"),i=ui(t,"filter","dilation2d");bn(3===s.rank||4===s.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`),bn(3===i.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),bn("NHWC"===o,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=s,l=!1;3===s.rank&&(u=zc(s,[1,s.shape[0],s.shape[1],s.shape[2]]),l=!0);const c=ei.runKernel(Jr,{x:u,filter:i},{strides:n,pad:r,dilations:a});return l?zc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Nd=di({equal_:function(e,t){let n=ui(e,"a","equal"),r=ui(t,"b","equal");return[n,r]=Hs(n,r),cc(n.shape,r.shape),ei.runKernel(sa,{a:n,b:r})}}),kd=di({where_:function(e,t,n){const r=ui(t,"a","where"),a=ui(n,"b","where"),o=ui(e,"condition","where","bool"),s=cc(r.shape,a.shape),i=td(r,s),u=td(a,s);return 1===o.rank&&bn(o.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==o.rank&&yn(o.shape,u.shape,"Error in where: "),ei.runKernel($o,{condition:o,t:i,e:u})}}),Cd=di({divNoNan_:function(e,t){let n=ui(e,"a","div"),r=ui(t,"b","div");[n,r]=Hs(n,r);const a=zl(n,r),o=Hl(a),s=Nd(r,o);return kd(s,o,a)}}),$d=di({dot_:function(e,t){const n=ui(e,"t1","dot"),r=ui(t,"t2","dot");bn(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const a=1===n.rank?n.size:n.shape[1],o=1===r.rank?r.size:r.shape[0];if(bn(a===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${o}.`),1===n.rank&&1===r.rank){const e=zc(n,[1,-1]),t=zc(r,[-1,1]),a=Iu(e,t);return zc(a,[])}if(1===n.rank&&2===r.rank){const e=zc(n,[1,-1]),t=zc(r,[r.shape[0],r.shape[1]]),a=Iu(e,t);return zc(a,[a.size])}if(2===n.rank&&1===r.rank){const e=zc(r,[-1,1]),t=Iu(n,e);return zc(t,[t.size])}{const e=zc(r,[r.shape[0],r.shape[1]]);return Iu(n,e)}}}),Id=di({elu_:function(e){const t=ui(e,"x","elu");return ei.runKernel(ra,{x:t})}}),Sd=di({erf_:function(e){let t=ui(e,"x","erf");return bn("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=iu(t,"float32")),ei.runKernel(oa,{x:t})}}),Td=di({exp_:function(e){const t=ui(e,"x","exp");return ei.runKernel(ia,{x:t})}}),Ed=di({expandDims_:function(e,t=0){const n=ui(e,"x","expandDims","string_or_numeric");return bn(t<=n.rank,()=>"Axis must be <= rank of the tensor"),ei.runKernel(ua,{input:n},{dim:t})}}),Ad=di({expm1_:function(e){const t=ui(e,"x","expm1");return ei.runKernel(la,{x:t})}}),Rd=di({tile_:function(e,t){const n=ui(e,"x","tile","string_or_numeric");return bn(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),ei.runKernel(jo,{x:n},{reps:t})}}),Dd=di({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=su([e,t],r),o=e<=t?e:t;for(let i=0;i<o;++i)a.set(1,i,i);const s=zc(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return Rd(Ed(s,0),[n[0],1,1]);if(2===n.length)return Rd(Ed(Ed(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Rd(Ed(Ed(Ed(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Od=di({floor_:function(e){const t=ui(e,"x","floor");return ei.runKernel(ha,{x:t})}}),Fd=di({gather_:function(e,t,n=0,r=0){const a=ui(e,"x","gather"),o=ui(t,"indices","gather","int32");return ei.runKernel(ga,{x:a,indices:o},{axis:n,batchDims:r})}}),Md=di({greater_:function(e,t){let n=ui(e,"a","greater"),r=ui(t,"b","greater");return[n,r]=Hs(n,r),cc(n.shape,r.shape),ei.runKernel(ya,{a:n,b:r})}}),Pd=di({greaterEqual_:function(e,t){let n=ui(e,"a","greaterEqual"),r=ui(t,"b","greaterEqual");return[n,r]=Hs(n,r),cc(n.shape,r.shape),ei.runKernel(xa,{a:n,b:r})}}),Ld=di({imag_:function(e){const t=ui(e,"input","imag");return ei.runKernel(_a,{input:t})}}),Bd=di({isFinite_:function(e){const t=ui(e,"x","isFinite");return ei.runKernel(Na,{x:t})}}),Vd=di({isInf_:function(e){const t=ui(e,"x","isInf");return ei.runKernel(ka,{x:t})}}),zd=di({isNaN_:function(e){const t=ui(e,"x","isNaN");return ei.runKernel(Ca,{x:t})}}),Wd=di({leakyRelu_:function(e,t=.2){const n=ui(e,"x","leakyRelu");return ei.runKernel($a,{x:n},{alpha:t})}}),Gd=di({less_:function(e,t){let n=ui(e,"a","less"),r=ui(t,"b","less");return[n,r]=Hs(n,r),cc(n.shape,r.shape),ei.runKernel(Ia,{a:n,b:r})}}),Ud=di({lessEqual_:function(e,t){let n=ui(e,"a","lessEqual"),r=ui(t,"b","lessEqual");return[n,r]=Hs(n,r),cc(n.shape,r.shape),ei.runKernel(Sa,{a:n,b:r})}});function Hd(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return ei.runKernel(Ta,{},{start:e,stop:t,num:n})}const jd=di({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const o=ui(e,"x","localResponseNormalization");bn(4===o.rank||3===o.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${o.rank}.`),bn(kn(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let s=o,i=!1;3===o.rank&&(i=!0,s=zc(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u=ei.runKernel(Ma,{x:s},{depthRadius:t,bias:n,alpha:r,beta:a});return i?zc(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),qd=di({log_:function(e){const t=ui(e,"x","log");return ei.runKernel(Ea,{x:t})}}),Kd=di({log1p_:function(e){const t=ui(e,"x","log1p");return ei.runKernel(Aa,{x:t})}}),Xd=di({neg_:function(e){const t=ui(e,"x","neg");return ei.runKernel(Za,{x:t})}}),Qd=di({softplus_:function(e){const t=ui(e,"x","softplus");return ei.runKernel(Do,{x:t})}}),Yd=di({logSigmoid_:function(e){const t=ui(e,"x","logSigmoid");return Yl(e=>({value:Xd(Qd(Xd(e))),gradFunc:t=>Wl(t,Hc(Xd(e)))}))(t)}}),Zd=di({max_:function(e,t=null,n=!1){const r=ui(e,"x","max");return ei.runKernel(La,{x:r},{reductionIndices:t,keepDims:n})}}),Jd=di({sum_:function(e,t=null,n=!1){let r=ui(e,"x","sum");return"bool"===r.dtype&&(r=iu(r,"int32")),ei.runKernel(Fo,{x:r},{axis:t,keepDims:n})}}),ep=di({logSoftmax_:function(e,t=-1){const n=ui(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Yl((e,n)=>{const r=Zd(e,t,!0),a=oc(e,r),o=oc(iu(a,"float32"),qd(Jd(Td(a),t,!0)));return n([o]),{value:o,gradFunc:(e,n)=>{const[r]=n,a=Td(r);return oc(e,Wl(Jd(e,t,!0),a))}}})(n)}});function tp(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function np(e,t,n){const r=e.length+t.length,a=[];let o=0,s=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[o++]):a.push(t[s++]);return a}function rp(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function ap(e,t){return np(e,t.map(e=>1),t)}function op(e,t,n){bn(tp(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function sp(e,t){if(tp(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function ip(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function up(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const lp=di({logSumExp_:function(e,t=null,n=!1){const r=ui(e,"x","logSumExp"),a=An(t,r.shape),o=Zd(r,a,!0),s=oc(r,o),i=Td(s),u=Jd(i,a),l=qd(u),c=Bl(zc(o,l.shape),l);if(n){const e=ap(c.shape,a);return zc(c,e)}return c}}),cp=di({logicalAnd_:function(e,t){const n=ui(e,"a","logicalAnd","bool"),r=ui(t,"b","logicalAnd","bool");return cc(n.shape,r.shape),ei.runKernel(Ra,{a:n,b:r})}}),dp=di({logicalNot_:function(e){const t=ui(e,"x","logicalNot","bool");return ei.runKernel(Da,{x:t})}}),pp=di({logicalOr_:function(e,t){const n=ui(e,"a","logicalOr","bool"),r=ui(t,"b","logicalOr","bool");return cc(n.shape,r.shape),ei.runKernel(Oa,{a:n,b:r})}}),hp=di({logicalXor_:function(e,t){const n=ui(e,"a","logicalXor","bool"),r=ui(t,"b","logicalXor","bool");return cc(n.shape,r.shape),cp(pp(e,t),dp(cp(e,t)))}}),fp=di({maxPool_:function(e,t,n,r,a){const o=ui(e,"x","maxPool");let s=o,i=!1;3===o.rank&&(i=!0,s=zc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),bn(4===s.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`),bn(Bc(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=a&&bn(kn(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u=ei.runKernel(Va,{x:s},{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return i?zc(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),mp=di({maxPool3d_:function(e,t=[1,1,1],n,r,a,o="NDHWC"){const s=ui(e,"x","maxPool3d");let i=s,u=!1;4===s.rank&&(u=!0,i=zc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),bn(5===i.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),bn("NDHWC"===o,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),null!=a&&bn(kn(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const l=ei.runKernel(Wa,{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:o});return u?zc(l,[l.shape[1],l.shape[2],l.shape[3],l.shape[4]]):l}}),gp=di({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const o=ui(e,"x","maxPoolWithArgmax"),s=ei.runKernel(Ua,{x:o},{filterSize:t,strides:n,pad:r,includeBatchInIndex:a});return{result:s[0],indexes:s[1]}}}),bp=di({mean_:function(e,t=null,n=!1){const r=ui(e,"x","mean");return ei.runKernel(Ha,{x:r},{axis:t,keepDims:n})}}),yp=di({min_:function(e,t=null,n=!1){const r=ui(e,"x","min");return ei.runKernel(ja,{x:r},{axis:t,keepDims:n})}}),xp=di({minimum_:function(e,t){let n=ui(e,"a","minimum"),r=ui(t,"b","minimum");return[n,r]=Hs(n,r),"bool"===n.dtype&&(n=iu(n,"int32"),r=iu(r,"int32")),cc(n.shape,r.shape),ei.runKernel(qa,{a:n,b:r})}}),vp=di({mirrorPad_:function(e,t,n){bn("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=ui(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");bn(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const a="reflect"===n?1:0;for(let o=0;o<r.rank;o++)bn(2===t[o].length,()=>"Invalid number of paddings. Must be length of 2 each."),bn(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`);return ei.runKernel(Ka,{x:r},{paddings:t,mode:n})}}),wp=di({mod_:function(e,t){let n=ui(e,"a","mod"),r=ui(t,"b","mod");return[n,r]=Hs(n,r),ei.runKernel(Xa,{a:n,b:r})}}),_p=di({moments_:function(e,t=null,n=!1){const r=An(t,(e=ui(e,"x","moments")).shape),a=bp(e,r,n);let o=a.shape;n||(o=ap(a.shape,r));const s=Ul(oc(iu(e,"float32"),zc(a,o)));return{mean:a,variance:bp(s,r,n)}}}),Np=di({multiRNNCell_:function(e,t,n,r){const a=ui(t,"data","multiRNNCell"),o=li(n,"c","multiRNNCell"),s=li(r,"h","multiRNNCell");let i=a;const u=[];for(let d=0;d<e.length;d++){const t=e[d](i,o[d],s[d]);u.push(t[0]),u.push(t[1]),i=t[1]}const l=[],c=[];for(let d=0;d<u.length;d+=2)l.push(u[d]),c.push(u[d+1]);return[l,c]}}),kp=di({multinomial_:function(e,t,n,r=!1){const a=ui(e,"logits","multinomial"),o=a.size,s=a.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);n=n||Math.random();const i=1===s?zc(a,[1,-1]):a,u=ei.runKernel(Qa,{logits:i},{numSamples:t,seed:n,normalized:r});return 1===s?zc(u,[u.size]):u}}),Cp=di({notEqual_:function(e,t){let n=ui(e,"a","notEqual"),r=ui(t,"b","notEqual");return[n,r]=Hs(n,r),cc(n.shape,r.shape),ei.runKernel(Ja,{a:n,b:r})}});function $p(e,t="float32"){if("complex64"===t){const t=$p(e,"float32"),n=$p(e,"float32");return pi(t,n)}const n=Yn(wn(e),t);return ei.makeTensor(n,e,t)}function Ip(e,t="float32"){if("complex64"===t){const t=Ip(e,"float32"),n=$p(e,"float32");return pi(t,n)}const n=Qn(wn(e),t);return ei.makeTensor(n,e,t)}const Sp=di({onesLike_:function(e){const t=ui(e,"x","onesLike");return ei.runKernel(ro,{x:t})}}),Tp=di({outerProduct_:function(e,t){const n=ui(e,"v1","outerProduct"),r=ui(t,"v2","outerProduct");bn(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=zc(n,[-1,1]),o=zc(r,[1,-1]);return Iu(a,o)}}),Ep=di({pad_:function(e,t,n=0){const r=ui(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return ei.runKernel(so,{x:r},{paddings:t,constantValue:n})}}),Ap=di({pad1d_:function(e,t,n=0){return bn(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Ep(e,[t],n)}}),Rp=di({pad2d_:function(e,t,n=0){return bn(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ep(e,t,n)}}),Dp=di({pad3d_:function(e,t,n=0){return bn(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ep(e,t,n)}}),Op=di({pad4d_:function(e,t,n=0){return bn(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ep(e,t,n)}}),Fp=di({spaceToBatchND_:function(e,t,n){const r=ui(e,"x","spaceToBatchND");return bn(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),bn(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),bn(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),ei.runKernel(Mo,{x:r},{blockShape:t,paddings:n})}}),Mp=di({pool_:function(e,t,n,r,a,o){null==a&&(a=[1,1]),null==o&&(o=1),0===r&&(r="valid");const s=ui(e,"x","maxPool");let i=s,u=!1;3===s.rank&&(u=!0,i=zc(s,[1,s.shape[0],s.shape[1],s.shape[2]])),bn(Bc(o,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${a}'`);const l=Tc(i.shape,t,o,a,r),c=[l.dilationHeight,l.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[h,f]=function(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),o=e.concat(r,a),s=t.map((e,t)=>(e-o[t]%e)%e),i=a.map((e,t)=>e+s[t]);return[t.map((e,t)=>[r[t],i[t]]),t.map((e,t)=>[0,s[t]])]}([l.inHeight,l.inWidth],c,d),m=p?r:"valid",g=p?i:Fp(i,c,h),b=("avg"===n?()=>Wc(g,t,o,m):()=>fp(g,t,o,m))(),y=p?b:Xc(b,c,f);return u?zc(y,[y.shape[1],y.shape[2],y.shape[3]]):y}}),Pp=di({prelu_:function(e,t){const n=ui(e,"x","prelu"),r=ui(t,"alpha","prelu");return ei.runKernel(lo,{x:n,alpha:r})}}),Lp=di({prod_:function(e,t=null,n=!1){let r=ui(e,"x","prod");return"bool"===r.dtype&&(r=iu(r,"int32")),ei.runKernel(co,{x:r},{axis:t,keepDims:n})}}),Bp=di({rand_:function(e,t,n){const r=wn(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let o=0;o<r;o++)a[o]=t();return ei.makeTensor(a,e,n)}});var Vp=n("YSVl");class zp{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=a||Math.random();this.random=Vp.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,o;do{r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*r*s,t=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Wp{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=Vp.alea(a.toString()),this.randn=new zp(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,o;for(;;){do{r=this.randn.nextValue(),o=1+this.c*r}while(o<=0);if(o*=o*o,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-o+Math.log(o)),a=this.randu(),a<t||Math.log(a)<n)break}return o*=1/this.beta*this.d,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Gp{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Vp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Up=di({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const o=new Wp(t,n,r,a),s=su(e,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}}),Hp=di({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const o=new zp(t,n,r,!1,a),s=su(e,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}}),jp=di({randomUniform_:function(e,t=0,n=1,r="float32",a){const o=su(e,r),s=new Gp(t,n,null,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});function qp(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");return ei.runKernel(po,{},{start:e,stop:t,step:n,dtype:r})}const Kp=di({real_:function(e){const t=ui(e,"input","real");return ei.runKernel(ho,{input:t})}}),Xp=di({reciprocal_:function(e){const t=ui(e,"x","reciprocal");return ei.runKernel(fo,{x:t})}}),Qp=di({relu_:function(e){const t=ui(e,"x","relu");return ei.runKernel(mo,{x:t})}}),Yp=di({relu6_:function(e){const t=ui(e,"x","relu6");return ei.runKernel(wo,{x:t})}}),Zp=di({reverse_:function(e,t){const n=ui(e,"x","reverse");return ei.runKernel(_o,{x:n},{dims:t})}}),Jp=di({reverse1d_:function(e){const t=ui(e,"x","reverse");return bn(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Zp(t,0)}}),eh=di({reverse2d_:function(e,t){const n=ui(e,"x","reverse");return bn(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Zp(n,t)}}),th=di({reverse3d_:function(e,t){const n=ui(e,"x","reverse");return bn(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Zp(n,t)}}),nh=di({reverse4d_:function(e,t){const n=ui(e,"x","reverse");return bn(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Zp(n,t)}}),rh=di({round_:function(e){const t=ui(e,"x","round");return ei.runKernel(No,{x:t})}}),ah=di({rsqrt_:function(e){const t=ui(e,"x","rsqrt");return ei.runKernel(ko,{x:t})}}),oh=di({selu_:function(e){const t=ui(e,"x","selu");return ei.runKernel(Io,{x:t})}}),sh=di({separableConv2d_:function(e,t,n,r,a,o=[1,1],s="NHWC"){const i=ui(e,"x","separableConv2d"),u=ui(t,"depthwiseFilter","separableConv2d"),l=ui(n,"pointwiseFilter","separableConv2d");let c=i,d=!1;if(3===i.rank&&(d=!0,c=zc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");bn(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),bn(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),bn(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),bn(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),bn(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const p=u.shape[2],h=u.shape[3];bn(l.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${l.shape[2]}.`);const f=vd(c,u,r,a,s,o),m=ud(f,l,1,"valid",s);return d?zc(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),ih=async function(e,t){const n=ui(e,"x","setdiff1d"),r=ui(t,"y","setdiff1d");bn(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),bn(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),bn(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const a=await n.data(),o=await r.data(),s=new Set(o);let i=0;for(let c=0;c<a.length;c++)s.has(a[c])||i++;const u=new As([i],n.dtype),l=new As([i],"int32");for(let c=0,d=0;c<a.length;c++)s.has(a[c])||(u.values[d]=a[c],l.values[d]=c,d++);return[u.toTensor(),l.toTensor()]},uh=di({sign_:function(e){const t=ui(e,"x","sign");return ei.runKernel(Ao,{x:t})}}),lh=di({sin_:function(e){const t=ui(e,"x","sin");return ei.runKernel(To,{x:t})}}),ch=di({sinh_:function(e){const t=ui(e,"x","sinh");return ei.runKernel(Eo,{x:t})}}),dh=di({slice1d_:function(e,t,n){const r=ui(e,"x","slice1d");return bn(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),jc(r,[t],[n])}}),ph=di({slice2d_:function(e,t,n){const r=ui(e,"x","slice2d");return bn(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),jc(r,t,n)}}),hh=di({slice3d_:function(e,t,n){const r=ui(e,"x","slice3d");return bn(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),jc(r,t,n)}}),fh=di({slice4d_:function(e,t,n){const r=ui(e,"x","slice4d");return bn(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),jc(r,t,n)}}),mh=di({softmax_:function(e,t=-1){const n=ui(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return ei.runKernel(Lo,{logits:n},{dim:t})}}),gh=di({fft_:function(e){return bn("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),ei.runKernel(ca,{input:e})}}),bh=di({ifft_:function(e){return bn("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),ei.runKernel(wa,{input:e})}}),yh=di({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=zc(e,[n,t]);r=bh(a)}else{const a=[n,2*(t-1)],o=zc(Kp(e),[n,t]),s=zc(Ld(e),[n,t]),i=Zp(jc(o,[0,1],[n,t-2]),1),u=Wl(Zp(jc(s,[0,1],[n,t-2]),1),Jl(-1)),l=Uc([o,i],1),c=Uc([s,u],1),d=zc(pi(l,c),[a[0],a[1]]);r=bh(d)}if(r=Kp(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=zc(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),xh=di({split_:function(e,t,n=0){const r=ui(e,"x","split");return ei.runKernel(Po,{x:r},{numOrSizeSplits:t,axis:n})}}),vh=di({rfft_:function(e,t){bn("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map(e=>0),o=e.shape.map(e=>e);o[e.shape.length-1]=t,a=jc(e,r,o),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,a=Uc([e,$p(r)],e.shape.length-1),n=t}else a=e;const o=Hl(a),s=zc(pi(a,o),[r,n]),i=gh(s),u=Math.floor(n/2)+1,l=Kp(i),c=Ld(i),d=xh(l,[u,n-u],l.shape.length-1),p=xh(c,[u,n-u],c.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=u,zc(pi(d[0],p[0]),h)}}),wh=di({squaredDifference_:function(e,t){let n=ui(e,"a","squaredDifference"),r=ui(t,"b","squaredDifference");return[n,r]=Hs(n,r),cc(n.shape,r.shape),ei.runKernel(Bo,{a:n,b:r},{})}}),_h=di({squeeze_:function(e,t){const n=ui(e,"x","squeeze");return zc(n,Rn(n.shape,t).newShape)}}),Nh=di({stack_:function(e,t=0){const n=li(e,"tensors","stack","string_or_numeric");return bn(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&bn(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),ei.runKernel(oo,n,{axis:t})}}),kh=di({step_:function(e,t=0){const n=ui(e,"x","step");return ei.runKernel(es,{x:n},{alpha:t})}}),Ch=di({stridedSlice_:function(e,t,n,r,a=0,o=0,s=0,i=0,u=0){const l=ui(e,"x","stridedSlice");return ei.runKernel(Go,{x:l},{begin:t,end:n,strides:r,beginMask:a,endMask:o,ellipsisMask:s,newAxisMask:i,shrinkAxisMask:u})}}),$h=di({tan_:function(e){const t=ui(e,"x","tan");return ei.runKernel(Uo,{x:t})}});function Ih(e,t){xn(e);const n=oi(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return hi(e,null,n,t)}function Sh(e,t,n){if(xn(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=oi(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return hi(e,t,r,n)}function Th(e,t,n){if(xn(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=oi(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return hi(e,t,r,n)}function Eh(e,t,n){if(xn(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=oi(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return hi(e,t,r,n)}function Ah(e,t,n){if(xn(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=oi(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return hi(e,t=t||r,r,n)}const Rh=di({topk_:function(e,t=1,n=!0){const r=ui(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const o={x:r},s={k:t,sorted:n},[i,u]=ei.runKernel(qo,o,s);return{values:i,indices:u}}}),Dh=di({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const o=new zp(t,n,r,!0,a),s=su(e,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}}),Oh=di({unique_:function(e,t=0){const n=ui(e,"x","unique","string_or_numeric");bn(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},a={axis:t},[o,s]=ei.runKernel(Qo,r,a);return{values:o,indices:s}}}),Fh=di({unsortedSegmentSum_:function(e,t,n){const r=ui(e,"x","unsortedSegmentSum"),a=ui(t,"segmentIds","unsortedSegmentSum","int32");return bn(kn(n),()=>"numSegments must be of dtype int"),ei.runKernel(Zo,{x:r,segmentIds:a},{numSegments:n})}}),Mh=di({unstack_:function(e,t=0){const n=ui(e,"x","unstack","string_or_numeric");return bn(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),ei.runKernel(Yo,{value:n},{axis:t})}});function Ph(e,t=!0,n,r){return ei.makeVariable(e,t,n,r)}function Lh(e,t){const n=[];for(let o=0;o<t.length;o++)t[o]&&n.push(o);const r=su(e,"int32"),a=su([n.length,e.length],"int32");for(let o=0;o<n.length;o++){const t=r.indexToLoc(n[o]);a.values.set(t,o*e.length)}return a.toTensor()}const Bh=async function(e){const t=ui(e,"condition","whereAsync","bool"),n=await t.data(),r=Lh(t.shape,n);return e!==t&&t.dispose(),r},Vh=async function(e,t,n){const r=ui(e,"tensor","boolMask"),a=ui(t,"mask","boolMask","bool"),o=null==n?0:n,s=a.rank,i=r.shape;bn(s>0,()=>"mask cannot be scalar"),yn(i.slice(o,o+s),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=o;m<o+s;m++)u*=i[m];const l=i.slice(0,o).concat([u],i.slice(o+s)),c=zc(r,l),d=zc(a,[-1]),p=await Bh(d),h=_h(p,[1]),f=Fd(c,h,o);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),c.dispose(),d.dispose(),p.dispose(),f};function zh(e,t,n=null){if(0===e.rank)return ic(e);if(1!==e.rank&&null===n)return zh(zc(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Jd(ic(e),n);if(t===1/0)return Zd(ic(e),n);if(t===-1/0)return yp(ic(e),n);if("euclidean"===t||2===t)return Gl(Jd(ac(ic(e),Jl(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Zd(Jd(ic(e),n[0]),n[1]-1);if(t===1/0)return Zd(Jd(ic(e),n[1]),n[0]);if(t===-1/0)return yp(Jd(ic(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Gl(Jd(Ul(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Wh=di({norm_:function(e,t="euclidean",n=null,r=!1){const a=zh(e=ui(e,"x","norm"),t,n);let o=a.shape;if(r){const t=An(n,e.shape);o=ap(a.shape,t)}return zc(a,o)}}),Gh=di({movingAverage_:function(e,t,n,r,a=!0){const o=ui(e,"v","movingAverage"),s=ui(t,"x","movingAverage"),i=ui(n,"decay","movingAverage");js(o,s),bn(Nn(o.shape,s.shape),()=>"Shape mismatch in v and x");const u=Jl(1),l=oc(u,i);let c=Wl(oc(s,o),l);if(a){bn(null!=r,()=>"When using zeroDebias: true, step is required.");const e=ui(r,"step","movingAverage");c=zl(c,oc(u,ac(i,e)))}return Bl(o,c)}}),Uh=di({scatterND_:function(e,t,n){const r=ui(e,"indices","scatterND","int32"),a=ui(t,"updates","scatterND");return Bu(a,r,n),ei.runKernel(Co,{indices:r,updates:a},{shape:n})}}),Hh=di({sparseToDense_:function(e,t,n,r=0){const a=ui(e,"sparseIndices","sparseToDense","int32"),o=ui(t,"sparseValues","sparseToDense"),s=ui(r,"defaultValue","sparseToDense",o.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,o=e.rank>1?e.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);if(0!==t.rank&&(1!==t.rank||t.size!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,o,n,s),ei.runKernel(Wo,{sparseIndices:a,sparseValues:o,defaultValue:s},{outputShape:n})}}),jh=di({gatherND_:function(e,t){const n=ui(t,"indices","gatherND","int32"),r=ui(e,"x","gatherND");return ei.runKernel(ba,{params:r,indices:n})}}),qh=di({dropout_:function(e,t,n,r){const a=ui(e,"x","dropout");if(bn("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),bn(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Fs?a.clone():a;const o=function(e,t){if(null==t)return e.shape.slice();if(Nn(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)n.push(null==t[r]&&null!=e.shape[r]?e.shape[r]:t[r]);return n}return t}(a,n),s=1-t,i=zl(Od(Bl(jp(o,0,1,"float32",r),s)),s);return Wl(a,i)}});function Kh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Xh(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let o=0;o<e;++o){const s=2*Math.PI*o/(e+r-1);a[o]=t-n*Math.cos(s)}return Ih(a,"float32")}const Qh=async function(e,t,n=1){const r=ui(e,"predictions","inTopK"),a=ui(t,"targets","inTopK");bn(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),bn(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),yn(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];bn(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const s=await r.data(),i=await a.data(),[u,l]=[s.length/o,o],c=Dn("bool",u);for(let d=0;d<u;d++){const e=d*l,t=s.subarray(e,e+l),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort((e,t)=>t.value-e.value),c[d]=0;for(let a=0;a<n;a++)if(r[a].index===i[d]){c[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),fi(c,a.shape,"bool")},Yh=di({conv2DBackpropFilter_:function(e,t,n,r,a,o="NHWC",s){let i=e;3===e.rank&&(i=zc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=zc(t,[1,t.shape[0],t.shape[1],t.shape[2]])),bn(4===i.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),bn(4===u.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),bn(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l="NHWC"===o?i.shape[3]:i.shape[1],c="NHWC"===o?u.shape[3]:u.shape[1];return bn(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),bn(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=s&&bn(kn(a),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`),ei.runKernel(Lr,{x:i,dy:u},{strides:r,pad:a,dataFormat:o,dimRoundingMode:s,filterShape:n})}});function Zh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Wl(e,kh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Jh(e,t){let n=t;const r=lc(e.shape,t.shape);return r.length>0&&(n=Jd(n,r)),zc(n,e.shape)}function ef(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Qp(e);if("elu"===t)return Id(e);if("relu6"===t)return Yp(e);if("prelu"===t)return Pp(e,n);if("leakyrelu"===t)return Wd(e,r);throw new Error(`Unknown fused activation ${t}.`)}const tf=(e,t)=>!(e>0)||"linear"===t,nf=di({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:o=[1,1],dimRoundingMode:s,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===tf(ei.state.gradientDepth,u=u||"linear")){let d=ud(e,t,n,r,a,o,s);return null!=i&&(d=Bl(d,i)),ef(d,u,l,c)}const d=ui(e,"x","conv2d"),p=ui(t,"filter","conv2d");let h=d,f=!1;3===d.rank&&(f=!0,h=zc(d,[1,d.shape[0],d.shape[1],d.shape[2]])),bn(4===h.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),bn(4===p.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),null!=s&&bn(kn(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`),bn(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),bn(Bc(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),bn("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const m=Ac(h.shape,p.shape,n,o,r,s);let g,b;null!=i&&(g=ui(i,"bias","fused conv2d"),[g]=Hs(g,d),cc(m.outShape,g.shape)),null!=l&&(b=ui(l,"prelu weights","fused conv2d"));const y=(e,t)=>{const[a,s,i,l]=t,c=Zh(e,i,u);bn(Lc(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const d=[cd(s.shape,c,a,n,r),Yh(s,c,a.shape,n,r)];if(null!=l){const e=Jh(l,c);d.push(e)}return d},x={x:h,filter:p,bias:g,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:s,activation:u,leakyreluAlpha:c};return null==i?Yl((e,t,n)=>{let r=ei.runKernel(as,x,v);return n([t,e,r]),f&&(r=zc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(h,p):Yl((e,t,n,r)=>{let a=ei.runKernel(as,x,v);return r([t,e,a,n]),f&&(a=zc(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}})(h,p,g)}}),rf=di({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,o=[1,1],s){let i=e;3===e.rank&&(i=zc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;return 3===u.rank&&(u=zc(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ei.runKernel(Qr,{x:i,dy:u},{strides:r,pad:a,dimRoundingMode:s,dilations:o,filterShape:n})}}),af=di({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,o=[1,1],s){let i=t,u=!1;3===t.rank&&(u=!0,i=zc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l=ei.runKernel(Yr,{dy:i,filter:n},{strides:r,pad:a,dimRoundingMode:s,dilations:o,inputShape:e});return u?zc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),of=di({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:o=[1,1],dimRoundingMode:s,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===tf(ei.state.gradientDepth,u)){let d=vd(e,t,n,r,a,o,s);return null!=i&&(d=Bl(d,i)),ef(d,u,l,c)}const d=ui(e,"x","depthwiseConv2d"),p=ui(t,"filter","depthwiseConv2d");let h=d,f=!1;3===d.rank&&(f=!0,h=zc(d,[1,d.shape[0],d.shape[1],d.shape[2]])),bn(4===h.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),bn(4===p.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),bn(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null==o&&(o=[1,1]),bn(Bc(n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),null!=s&&bn(kn(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${s} but got pad ${r}.`);const m=Ac(h.shape,p.shape,n,o,r,s,!0);let g,b;null!=i&&(g=ui(i,"bias","fused conv2d"),[g]=Hs(g,d),cc(m.outShape,g.shape)),null!=l&&(b=ui(l,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{bn(Lc(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[a,i,l,c]=t,d=Zh(e,l,u),p=af(i.shape,d,a,n,r,o,s),h=rf(i,d,a.shape,n,r,o,s);return null!=c?[p,h,Jh(g,d)]:[p,h]},x={x:h,filter:p,bias:g,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:s,activation:u,leakyreluAlpha:c};return null==i?Yl((e,t,n)=>{let r=ei.runKernel(os,x,v);return n([t,e,r]),f&&(r=zc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(h,p):Yl((e,t,n,r)=>{let a=ei.runKernel(os,x,v);return r([t,e,a,n]),f&&(a=zc(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}})(h,p,g)}}),sf=di({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:o="linear",preluActivationWeights:s,leakyreluAlpha:i}){if(!1===tf(ei.state.gradientDepth,o)){let u=Iu(e,t,n,r);return null!=a&&(u=Bl(u,a)),ef(u,o,s,i)}let u=ui(e,"a","fused matMul"),l=ui(t,"b","fused matMul");[u,l]=Hs(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=wn(f),b=wn(m);bn(u.rank>=2&&l.rank>=2&&u.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`),bn(Nn(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`),bn(c===d,()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const y=u.shape.slice(0,-2).concat([p,h]),x=zc(u,n?[g,c,p]:[g,p,c]),v=zc(l,r?[b,h,d]:[b,d,h]);let w,_;null!=a&&(w=ui(a,"bias","fused matMul"),[w]=Hs(w,u),cc(y,w.shape)),null!=s&&(_=ui(s,"prelu weights","fused matMul"));const N=(e,t)=>{const[s,i,u,l]=t,c=Zh(zc(e,u.shape),u,o);let d,p;return n||r?!n&&r?(d=Iu(c,i,!1,!1),p=Iu(c,s,!0,!1)):n&&!r?(d=Iu(i,c,!1,!0),p=Iu(s,c,!1,!1)):(d=Iu(i,c,!0,!0),p=Iu(c,s,!0,!0)):(d=Iu(c,i,!1,!0),p=Iu(s,c,!0,!1)),null!=a?[d,p,Jh(l,c)]:[d,p]},k={a:x,b:v,bias:w,preluActivationWeights:_},C={transposeA:n,transposeB:r,activation:o,leakyreluAlpha:i};return null==a?Yl((e,t,n)=>{const r=ei.runKernel(rs,k,C);return n([e,t,r]),{value:zc(r,y),gradFunc:N}})(x,v):Yl((e,t,n,r)=>{const a=ei.runKernel(rs,k,C);return r([e,t,a,n]),{value:zc(a,y),gradFunc:N}})(x,v,w)}}),uf=di({hammingWindow_:function(e){return Xh(e,.54,.46)}}),lf=di({hannWindow_:function(e){return Xh(e,.5,.5)}}),cf=di({frame_:function(e,t,n,r=!1,a=0){let o=0;const s=[];for(;o+t<=e.size;)s.push(jc(e,o,t)),o+=n;if(r)for(;o<e.size;){const r=o+t-e.size,i=Uc([jc(e,o,t-r),nc([r],a)]);s.push(i),o+=n}return 0===s.length?Sh([],[0,t]):zc(Uc(s),[s.length,t])}}),df=di({stft_:function(e,t,n,r,a=lf){null==r&&(r=Kh(t));const o=cf(e,t,n),s=Wl(o,a(t)),i=[];for(let u=0;u<o.shape[0];u++)i.push(vh(jc(s,[u,0],[1,t]),r));return Uc(i)}}),pf=di({cropAndResize_:function(e,t,n,r,a="bilinear",o=0){const s=ui(e,"image","cropAndResize"),i=ui(t,"boxes","cropAndResize","float32"),u=ui(n,"boxInd","cropAndResize","int32"),l=i.shape[0];return bn(4===s.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),bn(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),bn(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),bn(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),bn(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),bn("bilinear"===a||"nearest"===a,()=>`method must be bilinear or nearest, but was ${a}`),ei.runKernel(jr,{image:s,boxes:i,boxInd:u},{method:a,extrapolationValue:o,cropSize:r})}}),hf=di({flipLeftRight_:function(e){const t=ui(e,"image","flipLeftRight","float32");return bn(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),ei.runKernel(pa,{image:t},{})}}),ff=di({rotateWithOffset_:function(e,t,n=0,r=.5){const a=ui(e,"image","rotateWithOffset","float32");return bn(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`),ei.runKernel(ns,{image:a},{radians:t,fillValue:n,center:r})}});function mf(e,t,n,r,a,o){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=e.shape[0];return n=Math.min(n,s),bn(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),bn(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),bn(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),bn(1===t.rank,()=>"scores must be a 1D tensor"),bn(t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`),bn(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:o}}const gf=di({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const o=ui(e,"boxes","nonMaxSuppression"),s=ui(t,"scores","nonMaxSuppression"),i=mf(o,s,n,r,a);return ei.runKernel(eo,{boxes:o,scores:s},{maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold})}});function bf(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,o=0,s=!1;for(;r<a;){o=r+(a-r>>>1);const i=n(t,e[o]);i>0?r=o+1:(a=o,s=!i)}return s?r:-r-1}(e,t,n||yf)}(e,t,n);e.splice(r<0?-(r+1):r,0,t)}function yf(e,t){return e>t?1:e<t?-1:0}function xf(e,t,n,r,a){return _f(e,t,n,r,a,0)}function vf(e,t,n,r,a,o){return _f(e,t,n,r,a,0,!1,o,!0)}function wf(e,t,n,r,a,o){return _f(e,t,n,r,a,o,!0)}function _f(e,t,n,r,a,o,s=!1,i=!1,u=!1){const l=[];for(let g=0;g<t.length;g++)t[g]>a&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(Cf);const c=o>0?-.5/o:0,d=[],p=[];for(;d.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:o,suppressBeginIndex:s}=t;if(n<a)break;let i=!1;for(let u=d.length-1;u>=s;--u){const n=Nf(e,o,d[u]);if(n>=r){i=!0;break}if(t.score=t.score*kf(r,c,n),t.score<=a)break}t.suppressBeginIndex=d.length,i||(t.score===n?(d.push(o),p.push(t.score)):t.score>a&&bf(l,t,Cf))}const h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:d};return s&&(m.selectedScores=p),u&&(m.validOutputs=h),m}function Nf(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-o)*(u-s),f=(d-l)*(p-c);if(h<=0||f<=0)return 0;const m=Math.max(o,l),g=Math.max(s,c),b=Math.min(i,d),y=Math.min(u,p),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(h+f-x)}function kf(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Cf(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const $f=di({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=0){const s=ui(e,"boxes","nonMaxSuppression"),i=ui(t,"scores","nonMaxSuppression"),u=mf(s,i,n,r,a,o),l=ei.runKernel(no,{boxes:s,scores:i},{maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:o=u.softNmsSigma});return{selectedIndices:l[0],selectedScores:l[1]}}}),If=di({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=!1){const s=ui(e,"boxes","nonMaxSuppression"),i=ui(t,"scores","nonMaxSuppression"),u=mf(s,i,n,r,a,null),l=ei.runKernel(to,{boxes:s,scores:i},{maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:o});return{selectedIndices:l[0],validOutputs:l[1]}}}),Sf=di({resizeBilinear_:function(e,t,n=!1,r=!1){const a=ui(e,"images","resizeBilinear");bn(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),bn(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),bn(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=a,s=!1;3===a.rank&&(s=!0,o=zc(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i=ei.runKernel(xo,{images:o},{alignCorners:n,halfPixelCenters:r,size:t});return s?zc(i,[i.shape[1],i.shape[2],i.shape[3]]):i}}),Tf=di({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=ui(e,"images","resizeNearestNeighbor");bn(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),bn(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),bn("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),bn(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=a,s=!1;3===a.rank&&(s=!0,o=zc(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i=ei.runKernel(bo,{images:o},{alignCorners:n,halfPixelCenters:r,size:t});return s?zc(i,[i.shape[1],i.shape[2],i.shape[3]]):i}}),Ef=di({transform_:function(e,t,n="nearest",r="constant",a=0,o){const s=ui(e,"image","transform","float32"),i=ui(t,"transforms","transform","float32");return bn(4===s.rank,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),bn(2===i.rank&&(i.shape[0]===s.shape[0]||1===i.shape[0])&&8===i.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),bn(null==o||2===o.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`),ei.runKernel(Ko,{image:s,transforms:i},{interpolation:n,fillMode:r,fillValue:a,outputShape:o})}}),Af=di({bandPart_:function(e,t,n){bn(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),bn(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=ui(e,"a","bandPart");bn(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[o,s]=r.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(n<=s))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`);t<0&&(t=o),n<0&&(n=s);const i=zc(qp(0,o,1,"int32"),[-1,1]),u=qp(0,s,1,"int32"),l=oc(i,u),c=cp(Ud(l,Jl(+t,"int32")),Pd(l,Jl(-n,"int32"))),d=$p([o,s],r.dtype);return zc(Nh(Mh(zc(r,[-1,o,s])).map(e=>kd(c,e,d))),a)}}),Rf=di({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,bn(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)bn(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=xh(e,e.shape[0],0).map(e=>_h(e,[0]));bn(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let a=0;a<e.length;++a)n.push(ei.tidy(()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=Wl(Jd(Wl(n[t],e)),n[t]);e=oc(e,r)}return zl(e,Wh(e,"euclidean"))}));return t?Nh(n,0):n}});function Df(e,t=!1){return ei.tidy(()=>{bn(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=Dd(n),o=uu(e);const s=Sh([[1]],[1,1]);let i=uu(s);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=o,u=i,l=a;[i,o,a]=ei.tidy(()=>{const t=jc(o,[e,e],[n-e,1]),u=Wh(t),l=jc(o,[e,e],[1,1]),c=kd(Md(l,0),Sh([[-1]]),Sh([[1]])),d=oc(l,Wl(c,u)),p=zl(t,d);i=1===p.shape[0]?uu(s):Uc([s,jc(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=Xd(zl(Iu(c,d),u)),f=jc(o,[e,0],[n-e,r]),m=Wl(h,i),g=Tu(i);if(0===e)o=oc(f,Iu(m,Iu(g,f)));else{const t=oc(f,Iu(m,Iu(g,f)));o=Uc([jc(o,[0,0],[e,r]),t],0)}const b=Tu(m),y=jc(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=oc(y,Iu(Iu(y,i),b));else{const t=oc(y,Iu(Iu(y,i),b));a=Uc([jc(a,[0,0],[n,e]),t],1)}return[i,o,a]}),Il([t,u,l])}return!t&&n>r&&(a=jc(a,[0,0],[n,r]),o=jc(o,[0,0],[r,r])),[a,o]})}const Of=di({qr_:function(e,t=!1){if(bn(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return Df(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Mh(zc(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],o=[];return r.forEach(e=>{const[n,r]=Df(e,t);a.push(n),o.push(r)}),[zc(Nh(a,0),e.shape),zc(Nh(o,0),e.shape)]}}});var Ff;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ff||(Ff={}));const Mf=di({computeWeightedLoss_:function(e,t,n=Ff.SUM_BY_NONZERO_WEIGHTS){const r=ui(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=ui(t,"weights","computeWeightedLoss"));const o=null==a?r:Wl(r,a);if(n===Ff.NONE)return o;if(n===Ff.SUM)return Jd(o);if(n===Ff.MEAN){if(null==a)return bp(o);{const e=r.size/a.size,t=zl(Jd(o),Jd(a));return e>1?zl(t,Jl(e)):t}}if(n===Ff.SUM_BY_NONZERO_WEIGHTS){if(null==a)return zl(Jd(o),Jl(r.size));{const e=Wl(a,Ip(r.shape)),t=iu(Jd(Cp(e,Jl(0))),"float32");return zl(Jd(o),t)}}throw Error(`Unknown reduction: ${n}`)}}),Pf=di({absoluteDifference_:function(e,t,n,r=Ff.SUM_BY_NONZERO_WEIGHTS){const a=ui(e,"labels","absoluteDifference"),o=ui(t,"predictions","absoluteDifference");let s=null;null!=n&&(s=ui(n,"weights","absoluteDifference")),yn(a.shape,o.shape,"Error in absoluteDifference: ");const i=ic(oc(a,o));return Mf(i,s,r)}}),Lf=di({cosineDistance_:function(e,t,n,r,a=Ff.SUM_BY_NONZERO_WEIGHTS){const o=ui(e,"labels","cosineDistance"),s=ui(t,"predictions","cosineDistance");let i=null;null!=r&&(i=ui(r,"weights","cosineDistance")),yn(o.shape,s.shape,"Error in cosineDistance: ");const u=Jl(1),l=oc(u,Jd(Wl(o,s),n,!0));return Mf(l,i,a)}}),Bf=di({hingeLoss_:function(e,t,n,r=Ff.SUM_BY_NONZERO_WEIGHTS){let a=ui(e,"labels","hingeLoss");const o=ui(t,"predictions","hingeLoss");let s=null;null!=n&&(s=ui(n,"weights","hingeLoss")),yn(a.shape,o.shape,"Error in hingeLoss: ");const i=Jl(1);a=oc(Wl(Jl(2),a),i);const u=Qp(oc(i,Wl(a,o)));return Mf(u,s,r)}}),Vf=di({huberLoss_:function(e,t,n,r=1,a=Ff.SUM_BY_NONZERO_WEIGHTS){const o=ui(e,"labels","huberLoss"),s=ui(t,"predictions","huberLoss");let i=null;null!=n&&(i=ui(n,"weights","huberLoss")),yn(o.shape,s.shape,"Error in huberLoss: ");const u=Jl(r),l=ic(oc(s,o)),c=xp(l,u),d=oc(l,c),p=Bl(Wl(Jl(.5),Ul(c)),Wl(u,d));return Mf(p,i,a)}}),zf=di({logLoss_:function(e,t,n,r=1e-7,a=Ff.SUM_BY_NONZERO_WEIGHTS){const o=ui(e,"labels","logLoss"),s=ui(t,"predictions","logLoss");let i=null;null!=n&&(i=ui(n,"weights","logLoss")),yn(o.shape,s.shape,"Error in logLoss: ");const u=Jl(1),l=Jl(r),c=Xd(Wl(o,qd(Bl(s,l)))),d=Wl(oc(u,o),qd(Bl(oc(u,s),l))),p=oc(c,d);return Mf(p,i,a)}}),Wf=di({meanSquaredError_:function(e,t,n,r=Ff.SUM_BY_NONZERO_WEIGHTS){const a=ui(e,"labels","meanSquaredError"),o=ui(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=ui(n,"weights","meanSquaredError")),yn(a.shape,o.shape,"Error in meanSquaredError: ");const i=wh(a,o);return Mf(i,s,r)}}),Gf=di({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Ff.SUM_BY_NONZERO_WEIGHTS){let o=ui(e,"multiClassLabels","sigmoidCrossEntropy");const s=ui(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=ui(n,"weights","sigmoidCrossEntropy")),yn(o.shape,s.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Jl(r),t=Jl(1),n=Jl(.5);o=Bl(Wl(o,oc(t,e)),Wl(n,e))}const u=function(e,t){const n=ui(e,"labels","sigmoidCrossEntropyWithLogits"),r=ui(t,"logits","sigmoidCrossEntropyWithLogits");yn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Qp(r),o=Wl(r,n),s=Kd(Td(Xd(ic(r))));return Bl(oc(a,o),s)}(o,s);return Mf(u,i,a)}}),Uf=di({softmaxCrossEntropy_:function(e,t,n,r=0,a=Ff.SUM_BY_NONZERO_WEIGHTS){let o=ui(e,"onehotLabels","softmaxCrossEntropy");const s=ui(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=ui(n,"weights","softmaxCrossEntropy")),yn(o.shape,s.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Jl(r),t=Jl(1),n=Jl(o.shape[1]);o=Bl(Wl(o,oc(t,e)),zl(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Yl((e,t,r)=>{const a=lp(t,[n],!0),o=oc(iu(t,"float32"),a);r([e,o]);const s=Xd(Wl(o,e));return{value:Jd(s,[n]),gradFunc:(e,t)=>{const[r,a]=t,o=ap(e.shape,[n]);return[Wl(zc(e,o),oc(iu(r,"float32"),Td(a))),Wl(zc(e,o),oc(Td(a),iu(r,"float32")))]}}})(e,t)}(o,s);return Mf(u,i,a)}}),Hf={fft:gh,ifft:bh,rfft:vh,irfft:yh},jf={hammingWindow:uf,hannWindow:lf,frame:cf,stft:df},qf={flipLeftRight:hf,resizeNearestNeighbor:Tf,resizeBilinear:Sf,rotateWithOffset:ff,cropAndResize:pf,nonMaxSuppression:gf,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const o=ui(e,"boxes","nonMaxSuppressionAsync"),s=ui(t,"scores","nonMaxSuppressionAsync"),i=mf(o,s,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([o.data(),s.data()]),l=u[0],c=u[1],{selectedIndices:d}=xf(l,c,n,r,a);return o!==e&&o.dispose(),s!==t&&s.dispose(),Ih(d,"int32")},nonMaxSuppressionWithScore:$f,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=0){const s=ui(e,"boxes","nonMaxSuppressionAsync"),i=ui(t,"scores","nonMaxSuppressionAsync"),u=mf(s,i,n,r,a,o);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,o=u.softNmsSigma;const l=await Promise.all([s.data(),i.data()]),c=l[0],d=l[1],{selectedIndices:p,selectedScores:h}=wf(c,d,n,r,a,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:Ih(p,"int32"),selectedScores:Ih(h)}},nonMaxSuppressionPadded:If,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=!1){const s=ui(e,"boxes","nonMaxSuppressionAsync"),i=ui(t,"scores","nonMaxSuppressionAsync"),u=mf(s,i,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([s.data(),i.data()]),{selectedIndices:f,validOutputs:m}=vf(p,h,l,c,d,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:Ih(f,"int32"),validOutputs:Jl(m,"int32")}},transform:Ef},Kf={bandPart:Af,gramSchmidt:Rf,qr:Of},Xf={absoluteDifference:Pf,computeWeightedLoss:Mf,cosineDistance:Lf,hingeLoss:Bf,huberLoss:Vf,logLoss:zf,meanSquaredError:Wf,sigmoidCrossEntropy:Gf,softmaxCrossEntropy:Uf};class Qf{static sgd(e){return new hc(e)}static momentum(e,t,n=!1){return new fc(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new mc(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new sc(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new tc(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new pc(e,t,n,r,a)}static adagrad(e,t=.1){return new rc(e,t)}}const Yf={sgd:Qf.sgd,momentum:Qf.momentum,adadelta:Qf.adadelta,adagrad:Qf.adagrad,rmsprop:Qf.rmsprop,adamax:Qf.adamax,adam:Qf.adam},Zf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Jf(){return new Promise(e=>Zf(()=>e()))}function em(e,t){const n=e[0].length;e.forEach((e,t)=>{bn(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),bn(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let o=0;o<n;o++)bn(o===t||e[o]===r[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function tm(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const nm=30;function rm(e){return e<=nm?e:jn(e,Math.floor(Math.sqrt(e)))}function am(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function om(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function sm(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function im(e,t,n,r=!0){const a=[];a.push(r?e[0]/n:e[0]*n);for(let o=1;o<e.length;++o)a.push(o<=t.length?r?t[o-1]*e[o]:e[o]/t[o-1]:e[o]);return a}function um(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function lm(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const cm=1.7580993408473768,dm=1.0507009873554805,pm=.3275911,hm=.254829592,fm=-.284496736,mm=1.421413741,gm=-1.453152027,bm=1.061405429;function ym(...e){ar().getBool("IS_TEST")||console.warn(...e)}function xm(...e){ar().getBool("IS_TEST")||console.log(...e)}function vm(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function wm(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function _m(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Nm(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function km(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Cm(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function $m(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const o=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(o),r[a]=Math.sin(o)}return{real:n,imag:r}}function Im(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Sm(e,t,n=0){let r=[];if("number"==typeof t)bn(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{bn(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const r=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[n]-r}bn(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function Tm(e,t){let n,r=!1;for(e<=nm?(n=e,r=!0):n=jn(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=jn(e,n+1);return n}function Em(e,t,n){const r=[],a=e.length;for(let o=0;o<a;o++)r.push(o!==t?e[o]:n);return r}function Am(e,t,n,r){const a=t.shape.length,o=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const s=e.shape[n],i=[];let u=1,l=1,c=1;for(let d=0;d<r;++d)i.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),l*=e.shape[d];for(let d=r;d<a;d++)i.push(t.shape[d]);for(let d=n+1;d<o;d++)i.push(e.shape[d]),c*=e.shape[d];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:s,outputShape:i}}function Rm(e){try{return e.map(e=>_s(e))}catch(sI){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${sI}`)}}function Dm(e){return e.map(e=>ws(e))}const Om={},Fm={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Mm(e){if(!(e in Om)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete Om[e]},!1),1===e?t.getContext("webgl",Fm)||t.getContext("experimental-webgl",Fm):t.getContext("webgl2",Fm)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;Om[e]=t}const t=Om[e];return t.isContextLost()?(delete Om[e],Mm(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Om[e])}var Pm,Lm,Bm;function Vm(e,t){return[t,e]}function zm(e){const t=r.sizeFromShape(e),n=Math.ceil(t/4);return r.sizeToSquarishShape(n)}function Wm(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Gm(e,t){const n=e;let r,a,o,s,i,u,l,c,d,p;return 2===ar().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,o=n.RGBA16F,s=n.RGBA32F,i=n.RED,l=4,c=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,a=e.RGBA,o=e.RGBA,s=n.RGBA,i=e.RGBA,l=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:p}}function Um(e,t){const n=t();return ar().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function Hm(e){return!!(ar().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function jm(e,t){return Jm(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Pm||(Pm={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Lm||(Lm={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Bm||(Bm={}));const qm=/ERROR: [0-9]+:([0-9]+):/g;function Km(e,t){if(Um(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Xm(e,t,n,r,a,o,s){const i=e.getAttribLocation(t,n);return-1!==i&&(Um(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),Um(e,()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,o,s)),Um(e,()=>e.enableVertexAttribArray(i)),!0)}function Qm(e,t,n){Um(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Um(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Ym(e,t){Um(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Um(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Zm(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function Jm(e,t,n){const r=Um(e,()=>t());if(null==r)throw new Error(n);return r}function eg(e,t=2){return r.sizeFromShape(e.slice(0,e.length-t))}function tg(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function ng(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[eg(e),...tg(e)]),t}function rg(e){return e%2==0}function ag(e,t){if(e=e.slice(-2),t=t.slice(-2),r.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(rg(n)&&rg(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&rg(e[0])&&rg(t[0])}let og,sg;function ig(e,t){return null!=e.getExtension(t)}function ug(e){try{if(null!=Mm(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function lg(e){const t=Gm(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function cg(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const dg=ar();function pg(){let e,t,n,r,a,o,s,i,u,l;return 2===ar().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",o="outputColor",s="out vec4 outputColor;",i="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",o="gl_FragColor",s="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:o,defineOutput:s,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function hg(e,t,n="index"){const a=r.computeStrides(t);return a.map((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`).join("")}function fg(e){const t=r.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}dg.registerFlag("HAS_WEBGL",()=>dg.getNumber("WEBGL_VERSION")>0),dg.registerFlag("WEBGL_VERSION",()=>ug(2)?2:ug(1)?1:0),dg.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),dg.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===dg.get("WEBGL_VERSION")),dg.registerFlag("WEBGL_CPU_FORWARD",()=>!0),dg.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),dg.registerFlag("WEBGL_PACK",()=>dg.getBool("HAS_WEBGL")),dg.registerFlag("WEBGL_PACK_NORMALIZATION",()=>dg.getBool("WEBGL_PACK")),dg.registerFlag("WEBGL_PACK_CLIP",()=>dg.getBool("WEBGL_PACK")),dg.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),dg.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>dg.getBool("WEBGL_PACK")),dg.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>dg.getBool("WEBGL_PACK")),dg.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>dg.getBool("WEBGL_PACK")),dg.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>dg.getBool("WEBGL_PACK")),dg.registerFlag("WEBGL_PACK_REDUCE",()=>dg.getBool("WEBGL_PACK")),dg.registerFlag("WEBGL_LAZILY_UNPACK",()=>dg.getBool("WEBGL_PACK")),dg.registerFlag("WEBGL_CONV_IM2COL",()=>dg.getBool("WEBGL_PACK")),dg.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==og){const t=Mm(e);og=t.getParameter(t.MAX_TEXTURE_SIZE)}return og}(dg.getNumber("WEBGL_VERSION"))),dg.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==sg){const t=Mm(e);sg=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,sg)}(dg.getNumber("WEBGL_VERSION"))),dg.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=dg.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Mm(e);return t=ig(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ig(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),dg.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>dg.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!o.isMobile()),dg.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=Mm(e);if(1===e){if(!ig(t,"OES_texture_float"))return!1}else if(!ig(t,"EXT_color_buffer_float"))return!1;return lg(t)}(dg.getNumber("WEBGL_VERSION"))),dg.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!dg.getBool("WEBGL_FORCE_F16_TEXTURES")&&dg.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),dg.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(e){if(0===e)return!1;const t=Mm(e);if(1!==e){if(ig(t,"EXT_color_buffer_float"))return lg(t);const e="EXT_color_buffer_half_float";if(ig(t,e)){const n=t.getExtension(e);return function(e,t){const n=Gm(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),o}(t,n)}return!1}return!!ig(t,"OES_texture_float")&&!!ig(t,"WEBGL_color_buffer_float")&&lg(t)}(dg.getNumber("WEBGL_VERSION"))),dg.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=dg.getNumber("WEBGL_VERSION"))&&null!=Mm(e).fenceSync;var e}),dg.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>dg.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),dg.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),dg.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>o.isMobile()&&dg.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});const mg="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class gg{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Pm.DENSE;const t=zm(e),n=pg();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${hg(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class bg{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Pm.DENSE;const t=zm(e),n=pg();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${hg(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class yg{constructor(e){this.variableNames=["A"],this.outTexUsage=Lm.DOWNLOAD;const t=pg();this.outputShape=e,this.userCode=`\n      ${mg}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class xg{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Lm.DOWNLOAD;const t=pg();this.outputShape=e,this.userCode=`\n      ${mg}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class vg{constructor(e,t,n=!1){this.variableNames=["A"];const r=pg(),[a,o]=t;this.outputShape=e;let s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${fg(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${o};\n        int c = imod(flatIndex, ${o});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${o}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class wg{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=pg(),[a,o]=t;this.outputShape=e;let s="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let t=0;t<=1;t++){const n=2*u+t;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${e[2]}) {\n            localCoords[2] += ${t};\n            if(localCoords[1] + ${u} < ${e[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${o};\n              c = imod(flatIndex, ${o});\n              uv = (vec2(c, r) + halfCR) / vec2(${o}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${fg(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${s}\n\n        ${r.output} = ${i};\n      }\n    `}}function _g(e,t,n,r,a,o){!function(e,t){const n=ar().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const s=function(e){return Jm(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return Um(e,()=>e.bindTexture(i,s)),Um(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Um(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Um(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),Um(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Um(e,()=>e.texImage2D(i,0,r,t,n,0,a,o,null)),Um(e,()=>e.bindTexture(e.TEXTURE_2D,null)),s}function Ng(e){return e.internalFormatFloat}function kg(e){return e.internalFormatHalfFloat}function Cg(e){return e.downloadTextureFormat}function $g(e){return e.internalFormatPackedFloat}function Ig(e){return e.internalFormatPackedHalfFloat}class Sg{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=ar().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){Om[e]=t}(t,e)):this.gl=Mm(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===ar().getNumber("WEBGL_VERSION")){const e="OES_texture_half_float";if(this.textureFloatExtension=jm(this.gl,"OES_texture_float"),ig(this.gl,e))this.textureHalfFloatExtension=jm(this.gl,e);else if(ar().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ig(this.gl,r))this.colorBufferHalfFloatExtension=jm(this.gl,r);else if(ar().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ig(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ig(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=Jm(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Um(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Um(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=Jm(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Um(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Um(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return Jm(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Gm(this.gl,this.textureHalfFloatExtension)}get debug(){return ar().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Um(e,()=>e.finish()),Um(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Um(e,()=>e.deleteFramebuffer(this.framebuffer)),Um(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Um(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Um(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,o]=Vm(t,n);return _g(e,a,o,Ng(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,o]=Vm(t,n);return _g(e,a,o,kg(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,o]=Vm(t,n);return _g(e,a,o,Cg(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Um(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Um(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Um(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Um(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,o){let s,i,u;Um(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(s=new Float32Array(n*r*4),i=e.FLOAT,u=o.internalFormatPackedFloat),s.set(a),Um(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,s)),Um(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,o]=Wm(t,n);return _g(e,a,o,Ig(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,o]=Wm(t,n);return _g(e,a,o,$g(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ym(this.gl,this.framebuffer),this.outputTexture=null),Um(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[a,o]=Vm(t,n),s=new Uint8Array(t*n*4);return Um(e,()=>e.readPixels(0,0,a,o,r.downloadTextureFormat,e.UNSIGNED_BYTE,s)),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,o){return function(e,t,n,r,a,o,s,i){const u=e,l=new Float32Array(function(e,t){const[n,r]=Wm(e,t);return n*r*4}(o,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,o)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();Um(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const o=16*t*n;return Um(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ)),Um(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Um(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ar().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return Um(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=Jm(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Um(e,()=>e.shaderSource(n,t)),Um(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=qm.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],o=e.split("\n"),s=o.length.toString().length+2,i=o.map((e,t)=>r.rightPad((t+1).toString(),s)+e);let u=0;for(let r=0;r<i.length;r++)u=Math.max(i[r].length,u);const l=i.slice(0,a-1),c=i.slice(a-1,a),d=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),a=function(e){const t=pg();return function(e,t){const n=Jm(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Um(e,()=>e.shaderSource(n,t)),Um(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),o=function(e){return Jm(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return Um(t,()=>t.attachShader(o,a)),Um(t,()=>t.attachShader(o,n)),function(e,t){if(Um(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,o),this.debug&&Km(t,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=function(e,t,n){return Um(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Xm(e,t,"clipSpacePos",n,3,20,0)&&Xm(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),o}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&Um(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Km(this.gl,this.program),Um(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Jm(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Um(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){Um(e,()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),Um(e,()=>e.activeTexture(e.TEXTURE0+n)),Um(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),Um(e,()=>e.uniform1i(n,r))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=Wm(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Km(this.gl,this.program),Zm(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),Um(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Um(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=jm(this.gl,2===ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Qm(this.gl,e,this.framebuffer),this.debug&&Zm(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Qm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Zm(this.gl)):Ym(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;Qm(r,e,this.framebuffer),this.debug&&Zm(r),this.outputTexture=e,Um(r,()=>r.viewport(0,0,t,n)),Um(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),Um(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Tg}=g;function Eg(e,t,n,a){const o=[];e.forEach(e=>{const t=r.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?o.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(o.push(`uniform sampler2D ${e.name};`),o.push(`uniform int offset${e.name};`))});const s=o.join("\n"),i=e.map(e=>function(e,t,n=!1){let a="";return a+=n?Rg(e):Ag(e),e.shapeInfo.logicalShape.length<=t.logicalShape.length&&(a+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),o="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,u=Tg(e.shapeInfo.logicalShape,t.logicalShape),l=Bg(i),c=i-s;let d;const p=["x","y","z","w","u","v"];d=0===s?"":i<2&&u.length>=1?"coords = 0;":u.map(e=>`coords.${p[e+c]} = 0;`).join("\n");let h="";h=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+c]}`).join(", ");let f="return outputValue;";const m=1===r.sizeFromShape(e.shapeInfo.logicalShape),g=1===r.sizeFromShape(t.logicalShape);if(1!==s||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=s-2,t=s-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${o}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${a}(${h});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),o="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length;if(!e.shapeInfo.isUniform&&s===i&&null==e.shapeInfo.flatOffset&&r.arraysEqual(e.shapeInfo.texShape,t.texShape))return`\n      float ${o}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=Bg(i),l=Tg(e.shapeInfo.logicalShape,t.logicalShape),c=i-s;let d;const p=["x","y","z","w","u","v"];d=0===s?"":i<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${p[e+c]} = 0;`).join("\n");let h="";return h=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+c]}`).join(", "),`\n    float ${o}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${a}(${h});\n    }\n  `}(e,t)),a}(e,t,a)).join("\n"),u=t.texShape,l=pg(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let d,p,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Dg}\n    ${Og}\n    ${Fg}\n  `}(l);return t.isPacked?(d=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let o=a,s="",i="b, r, c";for(let u=2;u<e.length-1;u++)o*=e[e.length-u-1],s=`\n      int b${u} = index / ${o};\n      index -= b${u} * ${o};\n    `+s,i=`b${u}, `+i;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${s}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${i});\n    }\n  `}(e,t)}}(t.logicalShape,u),p=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(d=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return r.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=hg(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=hg(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=hg(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=hg(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,u),p=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),a&&(h+=Mg),[h,c,p,s,d,i,n].join("\n")}function Ag(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[o,s]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${o}, ${s}, ${Pg(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Lg(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],o=r[1];if(1===o&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const s=Pg(t);return 1===o?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${s}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${s}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${o}, index + ${s});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape;if(null!=o&&r.arraysEqual(t,o))return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${o[0]}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const{newShape:s,keptDims:i}=r.squeezeShape(t);if(s.length<t.length){const t=["row","col"];return`\n      ${Ag(Vg(e,s))}\n      float ${a}(int row, int col) {\n        return ${a}(${zg(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${Lg(e)}\n      }\n    `;const u=o[0],l=o[1],c=Pg(n);return 1===l?`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t[1]*t[2],s=t[2],{newShape:i,keptDims:u}=r.squeezeShape(t);if(i.length<t.length){const t=["row","col","depth"];return`\n        ${Ag(Vg(e,i))}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${zg(t,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${s}, 1)));\n        ${Lg(e)}\n      }\n    `;const l=e.shapeInfo.texShape,c=l[0],d=l[1],p=e.shapeInfo.flatOffset;return d===o&&null==p?`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `:d===s&&null==p?`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${s} + depth + ${Pg(n)};\n        vec2 uv = uvFromFlat(${c}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t[3],s=t[2]*o,i=t[1]*s,{newShape:u,keptDims:l}=r.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${Ag(Vg(e,u))}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${zg(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${o}, 1)));\n        ${Lg(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];return h===i&&null==c?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:h===o&&null==c?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${h}, index + ${Pg(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t[4],s=t[3]*o,i=t[2]*s,u=t[1]*i,{newShape:l,keptDims:c}=r.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Ag(Vg(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${zg(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${i}, ${s}, ${o})) +\n          depth3;\n        ${Lg(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];return f===u&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===o&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} + depth * ${s} +\n          depth2 * ${o} + depth3 + ${Pg(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:o,keptDims:s}=r.squeezeShape(t);if(o.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Ag(Vg(e,o))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${zg(t,s)});\n      }\n    `}const i=t[5],u=t[4]*i,l=t[3]*u,c=t[2]*l,d=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Lg(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];return m===d&&null==p?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:m===i&&null==p?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${i} + depth4 + ${Pg(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Rg(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${pg().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],o=pg();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${o.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape,s=o[0],i=o[1],u=pg();if(null!=o&&r.arraysEqual(t,o))return`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=[1,2],a=["b","row","col"];return`\n        ${Rg(Vg(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${zg(a,n)});\n        }\n      `}const s=o[0],i=o[1],u=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${s}, ${i}, ${u*Math.ceil(t[1]/2)}, ${u}, b, row, col);\n      return ${pg().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],i=s[0],u=s[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),d="int b, int row, int col",p=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let h=2;h<n-1;h++)d=`int b${h}, `+d,c*=t[n-h-1],p=`b${h} * ${c} + `+p;return`\n    vec4 ${a}(${d}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${i});\n      return ${pg().texture2D}(${r}, uv);\n    }\n  `}(e)}}const Dg="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Og="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Fg="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Mg="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Pg(e){return`offset${e}`}function Lg(e){const t=e.name,n=r.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Bg(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Vg(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function zg(e,t){return t.map(t=>e[t]).join(", ")}function Wg(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const a=e.logicalShape,o=t[n],s=o.shape;if(!r.arraysEqual(a,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${s} must match`);if(e.isUniform&&o.isUniform)return;const i=e.texShape,u=o.isUniform?null:o.texData.texShape;if(!r.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function Gg(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}function Ug(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function Hg(e){return(t,n,a,o,s)=>{const i=g.assertAndGetBroadcastShape(t,n),u=i.length,l=r.computeStrides(i),c=r.sizeFromShape(i),d=r.getTypedArrayFromDType(s,c),p=t.length,h=n.length,f=r.computeStrides(t),m=r.computeStrides(n),b=g.getBroadcastDims(t,i),y=g.getBroadcastDims(n,i);if(b.length+y.length===0)for(let r=0;r<d.length;++r)d[r]=e(a[r%a.length],o[r%o.length]);else for(let g=0;g<d.length;++g){const t=r.indexToLoc(g,u,l),n=t.slice(-p);b.forEach(e=>n[e]=0);const s=r.locToIndex(n,p,f),i=t.slice(-h);y.forEach(e=>i[e]=0);const c=r.locToIndex(i,h,m);d[g]=e(a[s],o[c])}return[d,i]}}function jg(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,o=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(a.shape,"float32",s)},i}function qg(e,t,n="float32"){if("complex64"===n)return jg({inputs:{real:qg(e,t,"float32"),imag:qg(e,t,"float32")},backend:e});const a=r.makeZerosTypedArray(r.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function Kg(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Xg(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===o.dtype)return Kg({inputs:{x:o},backend:n});const e=qg(n,o.shape,o.dtype),t=Xg({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),r=jg({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===o.dtype){const e=function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,o)}({inputs:{input:o},backend:n}),t=Xg({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!r.hasEncodingLoss(o.dtype,s)){const e=Kg({inputs:{x:o},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(o.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(o.shape,"int32",t)}if("bool"===s){const e=n.data.get(o.dataId).values,t=r.toTypedArray([0],o.dtype),[a,s]=Hg((e,t)=>e!==t?1:0)(o.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",a)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}function Qg(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:o,b:s}=n,i=a;Gg([o,s],e);const u=i.data.get(o.dataId).values,l=i.data.get(s.dataId).values,c=r||o.dtype,[d,p]=t(o.shape,s.shape,u,l,c);return i.makeTensorInfo(p,c,d)}:({inputs:e,backend:a})=>{const{a:o,b:s}=e,i=a;if("complex64"===o.dtype||"complex64"===s.dtype){const e=Xg({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.imag,a=i.data.get(t.complexTensorInfos.real.dataId).values,u=i.data.get(r.dataId).values,l=Xg({inputs:{x:s},backend:i,attrs:{dtype:"complex64"}}),c=i.data.get(l.dataId),d=c.complexTensorInfos.imag,p=i.data.get(c.complexTensorInfos.real.dataId).values,h=i.data.get(d.dataId).values,[f,m,g]=n(o.shape,s.shape,a,u,p,h),b=i.makeTensorInfo(g,"float32",f),y=i.makeTensorInfo(g,"float32",m),x=jg({inputs:{real:b,imag:y},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(l),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(y),x}{const e=i.data.get(o.dataId).values,n=i.data.get(s.dataId).values,a=r||o.dtype,[u,l]=t(o.shape,s.shape,e,n,a);return i.makeTensorInfo(l,a,u)}}}function Yg(e){return(t,n,a,o,s,i)=>{const u=g.assertAndGetBroadcastShape(t,n),l=r.sizeFromShape(u),c=u.length,d=r.computeStrides(u),p=r.getTypedArrayFromDType("float32",l),h=r.getTypedArrayFromDType("float32",l),f=g.getBroadcastDims(t,u),m=g.getBroadcastDims(n,u),b=g.mergeRealAndImagArrays(a,o),y=g.mergeRealAndImagArrays(s,i),x=t.length,v=r.computeStrides(t),w=n.length,_=r.computeStrides(n);if(f.length+m.length===0)for(let r=0;r<p.length;r++){const t=r%b.length,n=r%y.length,a=e(b[2*t],b[2*t+1],y[2*n],y[2*n+1]);p[r]=a.real,h[r]=a.imag}else for(let g=0;g<p.length;g++){const t=r.indexToLoc(g,c,d),n=t.slice(-x);f.forEach(e=>n[e]=0);const a=r.locToIndex(n,x,v),o=t.slice(-w);m.forEach(e=>o[e]=0);const s=r.locToIndex(o,w,_),i=e(b[2*a],b[2*a+1],y[2*s],y[2*s+1]);p[g]=i.real,h[g]=i.imag}return[p,h,u]}}const Zg=Hg((e,t)=>e+t),Jg=Yg((e,t,n,r)=>({real:e+n,imag:t+r}));function eb(e,t,n,a,o){const s=r.sizeFromShape(a),i=r.makeZerosTypedArray(o,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=o||(i[n]+=s>0?t[r]:1)}return i}function tb(e,t,n,r=!1){const a=e.shape[0],o=e.shape[1],s=su([a,n],t.dtype);for(let i=0;i<a;i++)for(let a=0;a<o;a++){const o=e.get(i,a);if(o<0)throw new Error("Input x must be non-negative!");o>=n||s.set(r?1:t.size>0?s.get(i,o)+t.get(i,a):s.get(i,o)+1,i,o)}return s}function nb(e){return(t,n,a)=>{const o=r.getTypedArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)o[r]=e(t[r],a);return o}}function rb(e,t,n){return({inputs:r,attrs:a,backend:o})=>{const{x:s}=r;if(Gg(s,e),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=o,u=i.data.get(s.dataId).values,l=n||s.dtype,c=t(u,l,a);return i.makeTensorInfo(s.shape,l,c)}}Qg(pr,Zg,Jg);const ab=nb(e=>Math.ceil(e));function ob(e,t,n,a){const o=r.getArrayFromDType(n,r.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach(e=>{const n=r.sizeFromShape(e.shape);o.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const a="string"===n?g.fromUint8ToStringArray(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)o[i+t]=a[s++]}r+=e.shape[1]})}return o}rb(Rr,ab);const sb=nb(e=>Math.exp(e)),ib=(rb(ia,sb),nb(e=>Math.expm1(e))),ub=(rb(la,ib),nb(e=>Math.floor(e)));function lb(e,t,n){const r=su(n,e.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),o=t.locToIndex([n[0],n[2]]);n[2]=t.values[o];const s=e.locToIndex(n);r.values[a]=e.values[s]}return r}rb(ha,ub);const cb=Hg((e,t)=>e>t?1:0),db=(Qg(ya,cb,null,"bool"),Hg((e,t)=>e<t?1:0));function pb(e,t,n){const a=(t-e)/(n-1),o=r.makeZerosTypedArray(n,"float32");o[0]=e;for(let r=1;r<o.length;r++)o[r]=o[r-1]+a;return o}Qg(Ia,db,null,"bool");const hb=nb(e=>Math.log(e));function fb(e,t,n,a){const o=r.getTypedArrayFromDType(a,r.sizeFromShape(n));for(let r=0;r<o.length;++r){const n=r*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];t>a&&(a=t)}o[r]=a}return o}rb(Ea,hb);const mb=Hg((e,t)=>Math.max(e,t)),gb=(Qg(Ba,mb),Hg((e,t)=>Math.min(e,t))),bb=(Qg(qa,gb),Hg((e,t)=>e*t)),yb=Yg((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}));function xb(e,t,n){const a=r.createScalarValue(-1,n);return bb([],t,a,e,n)}Qg(Ya,bb,yb);const vb=Hg((e,t)=>e!==t?1:0);function wb(e,t,n,a,o){const s=t.length,i=r.sizeFromShape(t),u=r.computeStrides(t),l=r.computeStrides(o),c=r.getTypedArrayFromDType(n,r.sizeFromShape(o));for(let d=0;d<i;++d){const t=r.indexToLoc(d,s,u),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];c[r.locToIndex(n,s,l)]=e[d]}return c}function _b(e,t,n,a){const[o,s]=g.computeOutAndReduceShapes(e,a),i=Gs(t,"int32"),u=r.makeZerosTypedArray(r.sizeFromShape(o),i),l=r.sizeFromShape(s);for(let r=0;r<u.length;++r){const e=r*l;let t=1;for(let r=0;r<l;++r)t*=n[e+r];u[r]=t}return{outVals:u,outShape:o,outDtype:i}}function Nb(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.makeZerosTypedArray(0,a);const o=Math.abs(Math.ceil((t-e)/n)),s=r.makeZerosTypedArray(o,a);t<e&&1===n&&(n=-1),s[0]=e;for(let r=1;r<s.length;r++)s[r]=s[r-1]+n;return s}Qg(Ja,vb,null,"bool");const kb=nb(e=>1/Math.sqrt(e));function Cb(e,t,n,a,o){const s=d.isSliceContinous(a,t,n),i=r.sizeFromShape(n),u=r.computeStrides(a);if(s){const n=d.computeFlatOffset(t,u);return"string"===o?e.slice(n,n+i):e.subarray(n,n+i)}const l=su(a,o,"string"===o?g.fromUint8ToStringArray(e):e),c=su(n,o);for(let r=0;r<c.size;++r){const e=c.indexToLoc(r),n=e.map((e,n)=>e+t[n]);c.set(l.get(...n),...e)}return"string"===o?g.fromStringArrayToUint8(c.values):c.values}rb(ko,kb);const $b=Hg((e,t)=>{const n=e-t;return n*n});function Ib(e,t,n,r){const a=su(e,t.dtype);for(let o=0;o<a.size;o++){const e=a.indexToLoc(o),s=new Array(e.length);for(let t=0;t<s.length;t++)s[t]=e[t]*n[t]+r[t];a.set(t.get(...s),...e)}return a}Qg(Bo,$b);const Sb=Hg((e,t)=>e-t),Tb=Yg((e,t,n,r)=>({real:e-n,imag:t-r}));function Eb(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const r=su(n,e.dtype);for(let a=0;a<r.values.length;++a){const t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const o=e.locToIndex(n);r.values[a]=e.values[o]}return r}function Ab(e,t,n,a,o){const s=t[t.length-1],[i,u]=[e.length/s,s],l=r.getTypedArrayFromDType(n,i*a),c=r.getTypedArrayFromDType("int32",i*a);for(let r=0;r<i;r++){const t=r*u,n=e.subarray(t,t+u),o=[];for(let e=0;e<n.length;e++)o.push({value:n[e],index:e});o.sort((e,t)=>t.value-e.value);const s=r*a,i=l.subarray(s,s+a),d=c.subarray(s,s+a);for(let e=0;e<a;e++)i[e]=o[e].value,d[e]=o[e].index}const d=t.slice();return d[d.length-1]=a,[su(d,n,l),su(d,"int32",c)]}function Rb(e,t,n,a){const o=r.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let r=0;r<o;r++)s[0]*=n[r];s[1]=n[o];for(let r=o+1;r<n.length;r++)s[2]*=n[r];const i={},u=new Int32Array(n[o]),l=new As(s,a,e),c=[],d=1===s[0]&&1===s[2];for(let r=0;r<n[o];r++){let t;if(d)t=e[r].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(l.get(t,r,n));t=e.join(",")}if(void 0!==i[t])u[r]=i[t];else{const e=Object.keys(i).length;i[t]=e,u[r]=e,c.push(r)}}const p=s.slice();p[1]=Object.keys(i).length;const h=new As(p,a);c.forEach((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)h.set(l.get(n,e,r),n,t,r)});const f=n.slice();return f[o]=p[1],{outputValues:h.values,outputShape:f,indices:u}}Qg(zo,Sb,Tb);const{addImpl:Db,bincountImpl:Ob,bincountReduceImpl:Fb,ceilImpl:Mb,concatImpl:Pb,expImpl:Lb,expm1Impl:Bb,floorImpl:Vb,gatherV2Impl:zb,greaterImpl:Wb,lessImpl:Gb,linSpaceImpl:Ub,logImpl:Hb,maxImpl:jb,maximumImpl:qb,minimumImpl:Kb,multiplyImpl:Xb,negImpl:Qb,prodImpl:Yb,rangeImpl:Zb,rsqrtImpl:Jb,simpleAbsImpl:ey,sliceImpl:ty,stridedSliceImpl:ny,subImpl:ry,tileImpl:ay,topKImpl:oy,transposeImpl:sy,uniqueImpl:iy}=x;function uy(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function ly(e,t){return 1===t?[e]:uy(e,t)}class cy{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=ly("rc",t),r=Bg(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),o=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),s=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let o=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)o=`${t[t.length-1-n]},`+o;n.push(o)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${o}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}}class dy{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2==1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${hg(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${fg(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class py{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=fy(t,n),a=my(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const o=hy(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let s;return r===Bm.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Bm.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Bm.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Bm.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Bm.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=fy(n,r),o=my(t,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const s=hy(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=ar().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=s):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;const u=this.usedTextures[o],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function hy(e,t,n,r,a){const o=function(e,t){switch(e){case Bm.PACKED_2X2_FLOAT32:return $g(t);case Bm.PACKED_2X2_FLOAT16:return Ig(t);case Bm.UNPACKED_FLOAT32:return Ng(t);case Bm.UNPACKED_FLOAT16:return kg(t);case Bm.PACKED_4X1_UNSIGNED_BYTE:return Cg(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let s;if(a){const[t,n]=Wm(e[0],e[1]);s=t*n}else{const[t,n]=Vm(e[0],e[1]);s=t*n}return s*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,o)}function fy(e,t){if(e===Lm.UPLOAD)return Bm.PACKED_2X2_FLOAT32;if(e===Lm.RENDER||null==e)return function(e){return ar().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Bm.PACKED_2X2_FLOAT32:Bm.UNPACKED_FLOAT32:e?Bm.PACKED_2X2_FLOAT16:Bm.UNPACKED_FLOAT16}(t);if(e===Lm.DOWNLOAD||e===Lm.PIXELS)return Bm.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function my(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class gy{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const by="return abs(x);",yy="return x;";class xy{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class vy{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=ly("rc",t),r=Bg(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),o=n.slice(-2),s=t<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}const wy=b.whereImpl,_y={};class Ny extends un{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!ar().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=Mm(ar().getNumber("WEBGL_VERSION"));this.binaryCache=((t=ar().getNumber("WEBGL_VERSION"))in _y||(_y[t]={}),_y[t]),this.gpgpu=new Sg(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new py(this.gpgpu),this.numMBBeforeWarning=null==ar().global.screen?1024:ar().global.screen.height*ar().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new sn(this,Nl())}nextDataId(){return Ny.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((ar().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ar().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Lm.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(ar().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Lm.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:o,slice:s,shape:i,isPacked:u}=t;if(null!=s){let t;t=u?new xy(i,yy):new gy(i,yy);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let c,d;if(l&&(c=r.now()),"complex64"===a){const e=this.readSync(o.real.dataId),t=this.readSync(o.imag.dataId);d=g.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=r.now()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:a,slice:o,dtype:s,complexTensorInfos:i,isPacked:u}=t;if(null!=o){let t;t=u?new xy(a,yy):new gy(a,yy);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!ar().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ar().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,d=null;if("complex64"!==s&&ar().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture,...zm(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);c=g.mergeRealAndImagArrays(e[0],e[1])}else if(null==d)c=this.getValuesFromTexture(e);else{const e=r.sizeFromShape(a);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const p=this.convertAndCacheOnCPU(e,c),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(e=>e(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Nl().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.decodeString(e))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return su(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Hm(n)){if(ar().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),o=r.sizeFromShape(t);if(ar().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...zm(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(n),a}const s=ar().getBool("WEBGL_PACK")&&!0===a,i=s?ng(t):t,u=s?new xg(i):new yg(i),l=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const o=r.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=r.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(o);i.kernelMs=r.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.now(),endMs:null}}endTimer(e){return ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.now(),e)}async getQueryTime(e){return ar().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:o,slice:s}=this.texData.get(e),i=s&&s.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,o)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return ar().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Nl().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return ar().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every(e=>null==this.texData.get(e.dataId).texture&&r.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){g.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return wy(e.shape,t)}packedUnaryOp(e,t,n){const r=new xy(e.shape,t),a=this.compileAndRun(r,[e],n);return Nl().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=ey(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ar().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,by,e.dtype);const t=new gy(e.shape,by),n=this.compileAndRun(t,[e]);return Nl().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.isString(n[0])){const o=n.map(e=>r.encodeString(e));a=this.write(o,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Nl().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new vy(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new cy(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[eg(e.shape),...tg(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[eg(t),...tg(t)],o=new dy(a,n),s=this.runWebGLProgram(o,[r],e.dtype,null,!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,o=ng(r);let s;return s=n?new bg(o):new gg(o),{dtype:a,shape:r,dataId:this.runWebGLProgram(s,[{shape:o,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,a,o=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===Pm.DENSE){const t=zm(e.outputShape);i.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===r.sizeFromShape(s.shape))return i.values=r.getTypedArrayFromDType(s.dtype,0),s;const u=[],l=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.sizeFromShape(t.shape)<=ar().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!ag(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:i,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach(e=>{r+=`${e.shape}_${e.isUniform?"uniform":e.texData.texShape}_${null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0}`});let a=e.constructor.name;return a+="_"+r+"_"+e.userCode,a}(e,l,c),p=this.getAndSaveBinary(d,()=>function(e,t,n,r){const a=t.userCode,o=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),s=o.map(e=>e.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Eg(o,i,a,t.packedInputs),l=e.createProgram(u);let c=null;const d=e.getUniformLocation(l,"NAN",!1);1===ar().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const p={};for(let h=0;h<t.variableNames.length;h++){const n=t.variableNames[h],r=!1;p[n]=e.getUniformLocation(l,n,r),p[`offset${n}`]=e.getUniformLocation(l,`offset${n}`,r)}return{program:t,source:u,webGLProgram:l,uniformLocations:p,inShapeInfos:s,outShapeInfo:i,infLoc:c,nanLoc:d}}(this.gpgpu,e,l,c)),h=null!=this.activeTimers;let f;h&&(f=this.startTimer()),function(e,t,n,a,o){Wg(t.inShapeInfos,n),Wg([t.outShapeInfo],[a]);const s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===ar().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,a)=>{const o=t.program.variableNames[a],s=t.uniformLocations[o],i=t.uniformLocations[`offset${o}`];if(null!=s)if(n.isUniform)if(r.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,a)}),null!=o&&o(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,p,l,c,a),u.forEach(e=>this.disposeIntermediateTensorInfo(e)),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=ar().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=r.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ar().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===o){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return this.runWebGLProgram(e,t,n=n||t[0].dtype,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ar().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=$l(()=>{if(!ar().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ar().getBool("DEBUG");ar().set("DEBUG",!1);const t=this.abs(Jl(1e-8)).dataSync()[0];if(ar().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:o,texture:s,usage:i,isPacked:u}=t;if(null!=s)return;const l=null!=this.activeTimers;let c;l&&(c=r.now());let d=t.texShape;if(null==d&&(d=function(e,t=!1){let n=ar().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?r.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=r.squeezeShape(e);e=t.newShape}let a=r.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=eg(e);let n=2,o=2;return e.length&&([n,o]=tg(e)),a=t*(n/2)*(o/2),r.sizeToSquarishShape(a).map(e=>2*e)}return r.sizeToSquarishShape(a)}(n,u),t.texShape=d),null!=o){const e=ng(n);let s,i=d[1],p=d[0];const h=o instanceof Uint8Array;u?([i,p]=Wm(d[0],d[1]),s=new wg(e,[p,i],h)):s=new vg(e,[p,i],h);const f=this.makeTensorInfo([p,i],a);this.texData.get(f.dataId).usage=h?Lm.PIXELS:Lm.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,o);const m=this.runWebGLProgram(s,[f],a,null,!0),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(m.dataId),t.values=null,l&&(this.uploadWaitMs+=r.now()-c)}else{const e=this.acquireTexture(d,i,a,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.bytesPerElement(t)}}Ny.nextDataId=0,o.isBrowser()&&Ml("webgl",()=>new Ny,2);class ky{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=g.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Cy{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=g.assertAndGetBroadcastShape(t,n);const o=this.outputShape.length;let s="";if(a)if(0===o||1===r.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${Bg(o)} coords = getOutputCoords();\n        `,1===o)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=ly("coords",o);s+=`\n            bool nextRowOutOfBounds =\n              (${e[o-2]} + 1) >= ${this.outputShape[o-2]};\n            bool nextColOutOfBounds =\n              (${e[o-1]} + 1) >= ${this.outputShape[o-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function $y(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Iy={kernelName:va,backendName:"webgl",kernelFunc:$y};function Sy(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,o=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(o.dataId),i=$y({inputs:{x:r},backend:n}),u=$y({inputs:{x:a},backend:n});return s.complexTensorInfos={real:i,imag:u},o}const Ty={kernelName:Or,backendName:"webgl",kernelFunc:Sy},Ey="return (a < 0.) ? b * a : a;",Ay="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Ry={kernelName:$a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",r.createScalarValue(s,"float32")),u=ar().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cy(Ay,o.shape,i.shape):new ky(Ey,o.shape,i.shape),l=n.runWebGLProgram(u,[o,i],o.dtype);return n.disposeIntermediateTensorInfo(i),l}},Dy="return (a < 0.) ? b * a : a;",Oy="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Fy={kernelName:lo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,o=ar().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cy(Oy,r.shape,a.shape):new ky(Dy,r.shape,a.shape);return n.runWebGLProgram(o,[r,a],r.dtype)}};function My({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:o})=>{const{x:s}=a,i=o,u=r||s.dtype;if(i.shouldExecuteOnCPU([s])&&null!=n){const e=i.texData.get(s.dataId),t=n(e.values,u);return i.makeTensorInfo(s.shape,u,t)}let l;return l=ar().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new xy(s.shape,t):new gy(s.shape,e),i.runWebGLProgram(l,[s],u)}}function Py({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:o}){return({inputs:s,backend:i})=>{const{a:u,b:l}=s,c=i;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},o={dataId:r.dataId,dtype:r.dtype,shape:l.shape},s=new ky(e,u.shape,l.shape);return c.runWebGLProgram(s,[a,o],Gs(n.dtype,r.dtype))}),o=Sy({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),o}const d=o||Gs(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=a){const e=c.texData.get(u.dataId),t=c.texData.get(l.dataId),[n,r]=a(u.shape,l.shape,e.values,t.values,d),o=c.makeTensorInfo(r,d);return c.texData.get(o.dataId).values=n,o}let p;return p=ar().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Cy(t,u.shape,l.shape,n):new ky(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],d)}}function Ly(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Oy:Dy;if("leakyrelu"===e)return t?Ay:Ey;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class By{constructor(e,t,n,r=!1,a=!1,o=!1,s=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=Math.ceil((r?e[1]:e[2])/2),c=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";s&&(f=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,m="result = activation(result);");const g=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",y="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${b};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${h[0]});\n          result += (${p[1]} * ${h[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class Vy{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=g.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const zy="return a * b;";function Wy(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,o=g.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),o=new Vy("return areal * breal - aimag * bimag;",r.shape,a.shape),s=new Vy("return areal * bimag + aimag * breal;",r.shape,a.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(o,i,"float32"),l=n.runWebGLProgram(s,i,"float32"),c=Sy({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,i]=Xb(r.shape,a.shape,e.values,t.values,o),u=n.makeTensorInfo(i,o);return n.texData.get(u.dataId).values=s,u}let s;return s=ar().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cy(zy,r.shape,a.shape):new ky(zy,r.shape,a.shape),n.runWebGLProgram(s,[r,a],o)}const Gy={kernelName:Ya,backendName:"webgl",kernelFunc:Wy};function Uy(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{shape:s}=a,i=n,u=r.sizeFromShape(o.shape),l=r.inferFromImplicitShape(s,u),c=r.sizeFromShape(l);r.assert(u===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${o.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(o.dataId);return!d.isPacked||ag(o.shape,l)||null!==d.texture&&ag(d.shape,l)?(i.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype}):function(e,t,n){const r=[eg(e.shape),...tg(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},o=[eg(t),...tg(t)],s=new dy(o,r),i=n.runWebGLProgram(s,[a],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}(o,l,i)}const Hy={kernelName:go,backendName:"webgl",kernelFunc:Uy};class jy{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:o,outSize:s}=e;this.outputShape=[a,s];const i=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${r.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";o%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class qy{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];let s="0.0",i="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",i="min"):"max"===t&&(s="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===t?(s="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(s="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function Ky(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=g.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let o=e;for(let s=0;s<a.length;s++){const{inSize:i,windowSize:u,outSize:l}=a[s];let c,d;c="mean"===n?0===s?new jy({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new jy({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new qy({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),d=o,o=r.runWebGLProgram(c,[o],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return o}class Xy{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.rank=n.length;const r=Bg(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Qy{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Bg(this.rank),a=uy("rc",this.rank),o=new Array(this.rank);for(let l=0;l<t.length;l++)o[t[l]]=a[l];const s=`vec2(${o.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${o.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Yy(e,t,n){const r=ar().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qy(e.shape,t):new Xy(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Zy(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a;return function(e,t,n,a){const o=e.shape.length,s=r.parseAxisParam(t,e.shape);let i=s;const u=g.getAxesPermutation(i,o),l=null!=u;let c=e;l&&(c=Yy(e,u,a),i=g.getInnerMostAxes(i.length,o)),g.assertAxesAreInnerMostDims("sum",i,o);const[d,p]=g.computeOutAndReduceShapes(c.shape,i);let h=d;n&&(h=g.expandShapeToKeepDim(d,s));const f=r.sizeFromShape(p),m=Uy({inputs:{x:c},attrs:{shape:[r.sizeFromShape(e.shape)/f,f]},backend:a}),b=Ky(m,Us(e.dtype),"sum",a),y=Uy({inputs:{x:b},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(b),l&&a.disposeIntermediateTensorInfo(c),y}(o,s,i,n)}const Jy={kernelName:Fo,backendName:"webgl",kernelFunc:Zy};function ex(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:o}=r,s=n,i=new Array(a.shape.length);for(let l=0;l<i.length;l++)i[l]=a.shape[o[l]];let u;if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId),t=sy(e.values,a.shape,a.dtype,o,i);u=s.makeTensorInfo(i,a.dtype),s.texData.get(u.dataId).values=t}else u=Yy(a,o,s);return u}const tx={kernelName:Xo,backendName:"webgl",kernelFunc:ex};function nx({a:e,b:t,transposeA:n,transposeB:a,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,d=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],h=a?t.shape[d-1]:t.shape[d-2],f=n?e.shape[c-1]:e.shape[c-2],m=a?t.shape[d-2]:t.shape[d-1],g=e.shape.slice(0,-2),b=t.shape.slice(0,-2),y=r.sizeFromShape(g),x=r.sizeFromShape(b);r.assert(c>=2&&d>=2&&(y===x||1===y||1===x),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${b}).`);const v=(y>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);r.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`);const w=n?[y,p,f]:[y,f,p],_=a?[x,m,h]:[x,h,m],N=Uy({inputs:{x:e},backend:o,attrs:{shape:w}}),k=Uy({inputs:{x:t},backend:o,attrs:{shape:_}}),C=[N,k],$=Math.max(y,x),I=n?N.shape[1]:N.shape[2],S=null!=s,T=null!=i,E="leakyrelu"===l,A=null!=l?Ly(l,!0):null;let R;if((1===f||1===m)&&I>1e3&&!1===(S||T||E||null!=A)){let e=N,t=k;n&&(e=ex({inputs:{x:N},backend:o,attrs:{perm:[0,2,1]}}),C.push(e)),a&&(t=ex({inputs:{x:k},backend:o,attrs:{perm:[0,2,1]}}),C.push(t));const r=1===m;let s=e;1!==m&&(s=Uy({inputs:{x:e},backend:o,attrs:{shape:[$,I,1]}}),C.push(s));const i=1===m?2:1;let u=t;r&&(u=Uy({inputs:{x:t},backend:o,attrs:{shape:[$,1,I]}}),C.push(u));const l=Wy({inputs:{a:s,b:u},backend:o});R=Zy({inputs:{x:l},backend:o,attrs:{axis:i,keepDims:!0}}),C.push(l)}else{const l=Gs(e.dtype,t.dtype),c=new By(w,_,[$,f,m],n,a,S,A,T,E),d=[N,k];if(null!=s&&d.push(s),T&&d.push(i),E){const e=o.makeTensorInfo([],"float32",r.createScalarValue(u,"float32"));d.push(e),C.push(e)}R=o.runWebGLProgram(c,d,l)}const D=Uy({inputs:{x:R},backend:o,attrs:{shape:v}});C.push(R);for(const r of C)o.disposeIntermediateTensorInfo(r);return D}const rx={kernelName:rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return nx({a:a,b:o,transposeA:u,transposeB:l,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:d,activation:c})}},ax="return abs(x);",ox={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=ey(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=ar().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new xy(r.shape,ax):new gy(r.shape,ax),n.runWebGLProgram(a,[r],r.dtype)}},sx=My({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ix={kernelName:cr,backendName:"webgl",kernelFunc:sx},ux=My({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),lx={kernelName:dr,backendName:"webgl",kernelFunc:ux},cx="return a + b;",dx=Py({opSnippet:cx,packedOpSnippet:cx,supportsComplex:!0,cpuKernelImpl:Db}),px={kernelName:pr,backendName:"webgl",kernelFunc:dx};class hx{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class fx{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const mx={kernelName:hr,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return $y({inputs:{x:a[0]},backend:r});if(a.length>ar().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),o=e({inputs:a.slice(t),backend:r});return e({inputs:[n,o],backend:r})}const o=a.map(e=>e.dtype).reduce((e,t)=>Gs(e,t)),s=a.map(e=>e.shape),i=ar().getBool("WEBGL_PACK")?new fx(a[0].shape,s):new hx(a[0].shape,s);return r.runWebGLProgram(i,a,o)}},gx={kernelName:fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a,u=o.shape.length,l=r.parseAxisParam(s,o.shape);let c=l;const d=g.getAxesPermutation(c,u);let p=o;null!=d&&(p=ex({inputs:{x:o},backend:n,attrs:{perm:d}}),c=g.getInnerMostAxes(c.length,u)),g.assertAxesAreInnerMostDims("all",c,u);const[h,f]=g.computeOutAndReduceShapes(p.shape,c),m=Uy({inputs:{x:p},backend:n,attrs:{shape:[-1,r.sizeFromShape(f)]}}),b=Ky(m,m.dtype,"all",n);let y;return y=Uy(i?{inputs:{x:b},backend:n,attrs:{shape:g.expandShapeToKeepDim(h,l)}}:{inputs:{x:b},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),y}},bx={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a,u=o.shape.length,l=r.parseAxisParam(s,o.shape);let c=l;const d=g.getAxesPermutation(c,u);let p=o;null!=d&&(p=ex({inputs:{x:o},backend:n,attrs:{perm:d}}),c=g.getInnerMostAxes(c.length,u)),g.assertAxesAreInnerMostDims("any",c,u);const[h,f]=g.computeOutAndReduceShapes(p.shape,c),m=Uy({inputs:{x:p},backend:n,attrs:{shape:[-1,r.sizeFromShape(f)]}}),b=Ky(m,m.dtype,"any",n);let y;return y=Uy(i?{inputs:{x:b},backend:n,attrs:{shape:g.expandShapeToKeepDim(h,l)}}:{inputs:{x:b},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),y}};class yx{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:o}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,o],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class xx{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const o=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");const s=this.outputShape,i=s.length,u=Bg(i),l=ly("coords",i);let c,d;if(1===o){d=i+1;const e=Bg(d);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[i-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[i-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[i-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[i-2]};`}else d=i,c=`\n        ${u} sourceLocR = coords;\n        ++${l[i-1]};\n        ${u} sourceLocG = coords;\n        ++${l[i-2]};\n        ${u} sourceLocA = coords;\n        --${l[i-1]};\n        ${u} sourceLocB = coords;\n        --${l[i-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(e=>"int "+e),m=ly("sourceLocR",d-1).concat("inIdx.r"),g=ly("sourceLocG",d-1).concat("inIdx.g"),b=ly("sourceLocB",d-1).concat("inIdx.b"),y=ly("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,_=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${_}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[i-1]} < ${s[i-1]-1};\n        bool hasNextRow = ${l[i-2]} < ${s[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function vx(e,t,n,r=null){let a=t.shape[0],o=t.shape[1];null!=r&&(a=r.shape[0],o=r.shape[1]);const s=g.computeOptimalWindowSize(o),i={windowSize:s,inSize:o,batchSize:a,outSize:Math.ceil(o/s)},u=new yx(i,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const d=vx(e,t,n,c);return e.disposeIntermediateTensorInfo(c),d}function wx(e,t,n,r=null){const a=null!=r?r.shape:t.shape,o=g.computeOptimalWindowSize(a[a.length-1]),s=new xx(a,o,n,null==r),i=e.runWebGLProgram(s,null==r?[t]:[t,r],"int32");if(i.shape.length===t.shape.length){const r=wx(e,t,n,i);return e.disposeIntermediateTensorInfo(i),r}return i}function _x(e,t,n,a){const o=[n];if(g.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),o,t.shape.length),!ar().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,i]=g.computeOutAndReduceShapes(t.shape,o),u=r.sizeFromShape(i),l=Uy({inputs:{x:t},backend:e,attrs:{shape:[-1,u]}});n.push(l);const c=vx(e,l,a);n.push(c);const d=Uy({inputs:{x:c},backend:e,attrs:{shape:s}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),d}return wx(e,t,a)}const Nx={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s}=a;let i=r.parseAxisParam(s,o.shape);const u=g.getAxesPermutation(i,o.shape.length);let l=o;const c=[];null!=u&&(l=ex({inputs:{x:o},backend:n,attrs:{perm:u}}),c.push(l),i=g.getInnerMostAxes(i.length,l.shape.length)),g.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const d=_x(n,l,i[0],"max");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},kx={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s}=a;let i=r.parseAxisParam(s,o.shape);const u=g.getAxesPermutation(i,o.shape.length);let l=o;const c=[];null!=u&&(l=ex({inputs:{x:o},backend:n,attrs:{perm:u}}),c.push(l),i=g.getInnerMostAxes(i.length,l.shape.length)),g.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const d=_x(n,l,i[0],"min");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},Cx=My({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),$x={kernelName:yr,backendName:"webgl",kernelFunc:Cx},Ix=My({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Sx={kernelName:xr,backendName:"webgl",kernelFunc:Ix},Tx=My({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Ex={kernelName:vr,backendName:"webgl",kernelFunc:Tx},Ax=Py({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Rx={kernelName:_r,backendName:"webgl",kernelFunc:Ax},Dx=My({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Ox={kernelName:wr,backendName:"webgl",kernelFunc:Dx};class Fx{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t;let m="0.0";if(f||(m="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${i});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let g=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(g="avgValue / count");const b=4*Math.floor(o/4),y=o%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${g});\n      }\n    `}}class Mx{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(o/4),_=o%4,N=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const Px={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t;cg(o,"avgPool");const{filterSize:s,strides:i,pad:u,dimRoundingMode:l}=a;r.assert(g.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=g.computePool2DInfo(o.shape,s,i,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))return $y({inputs:{x:o},backend:n});const d=new Fx(c,"avg",!1);return n.runWebGLProgram(d,[o],"float32")}},Lx={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:u,dataFormat:l}=r,c=g.computePool3DInfo(a.shape,o,s,[1,1,1],i,u,l),d=new Mx(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class Bx{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Vx{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const zx={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,s=o,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,d=g.computePool3DInfo(s.shape,i,u,[1,1,1],l,c),p=new Vx(d);return n.runWebGLProgram(p,[a],s.dtype)}},Wx={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,s=o;cg([a,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=g.computePool2DInfo(s.shape,i,u,1,l),d=new Bx(c);return n.runWebGLProgram(d,[a],s.dtype)}},Gx={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:o}=t,{transposeA:s,transposeB:i}=r;return nx({a:a,b:o,transposeA:s,transposeB:i,backend:n})}};class Ux{constructor(e,t,n,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],g.assertAndGetBroadcastShape(e,t),g.assertAndGetBroadcastShape(e,n);let s="0.0";null!=r&&(g.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let i="1.0";null!=a&&(g.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${s};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Hx{constructor(e,t,n,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],g.assertAndGetBroadcastShape(e,t),g.assertAndGetBroadcastShape(e,n);let s="vec4(0.0)";null!=r&&(g.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=a&&(g.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${s};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const jx={kernelName:ma,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:o,variance:s,offset:i,scale:u}=e;r.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.assert(null==u||o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[a,o,s];let d=null;null!=i&&(d=i.shape,c.push(i));let p=null;null!=u&&(p=u.shape,c.push(u));const h=ar().getBool("WEBGL_PACK_NORMALIZATION")?new Hx(a.shape,o.shape,s.shape,d,p,l):new Ux(a.shape,o.shape,s.shape,d,p,l);return t.runWebGLProgram(h,c,c[0].dtype)}};class qx{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Bg(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return Kx.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${Kx[t]} = start[${t}] + coords.${Kx[t]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const Kx=["x","y","z","w","u","v"];class Xx{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=Bg(this.rank),n=ly("coords",this.rank),r=ly("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${a})`,s=`\n      result.x = ${o};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${o};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${o};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${o};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${s}\n        ${i}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function Qx(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{begin:s,size:i}=a,[u,l]=d.parseSliceParams(o,s,i);if(d.assertParamsValid(o,u,l),0===r.sizeFromShape(l))return n.makeTensorInfo(l,o.dtype,[]);if(n.shouldExecuteOnCPU([o])||"string"===o.dtype){const e=n.texData.get(o.dataId),t=ty(e.values,u,l,o.shape,o.dtype);return n.makeTensorInfo(l,o.dtype,t)}const{isPacked:c}=n.texData.get(o.dataId),p=d.isSliceContinous(o.shape,u,l);if(c||!p){const e=ar().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xx(l):new qx(l),t=e.getCustomSetupFunc(u);return n.runWebGLProgram(e,[o],o.dtype,t)}return n.uploadToGPU(o.dataId),function(e,t,n,a){const o=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,o),i.refCount=1,i.shape=n,i.dtype=e.dtype;let u=d.computeFlatOffset(t,r.computeStrides(e.shape));o.slice&&(u+=o.slice.flatOffset),i.slice={flatOffset:u,origDataId:o.slice&&o.slice.origDataId||e.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),s}(o,u,l,n)}const Yx={kernelName:So,backendName:"webgl",kernelFunc:Qx},Zx={kernelName:Sr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{blockShape:s,crops:i}=a;r.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const u=s.reduce((e,t)=>e*t),l=g.getReshaped(o.shape,s,u),c=g.getPermuted(l.length,s.length),d=g.getReshapedPermuted(o.shape,s,u),p=g.getSliceBeginCoords(i,s.length),h=g.getSliceSize(d,i,s.length),f=[],m=Uy({inputs:{x:o},backend:n,attrs:{shape:l}}),b=ex({inputs:{x:m},backend:n,attrs:{perm:c}}),y=Uy({inputs:{x:b},backend:n,attrs:{shape:d}}),x=Qx({inputs:{x:y},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(b),f.push(y),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},Jx={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:o}=t,{size:s}=r,i=n.readSync(a.dataId),u=n.readSync(o.dataId),l=Ob(i,u,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,l)}},ev=Py({opSnippet:"return float(a != b);",dtype:"bool"}),tv={kernelName:Ja,backendName:"webgl",kernelFunc:ev};function nv(e){const{inputs:t,backend:n}=e,{input:r}=t;return $y({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const rv={kernelName:ho,backendName:"webgl",kernelFunc:nv},av={kernelName:Ar,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:o}=t,{x:s}=n,{dtype:i}=o;if("complex64"===i){if("complex64"===s.dtype)return $y({inputs:{x:s},backend:a});const t=$p(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=Sy({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=nv({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!r.hasEncodingLoss(s.dtype,i)){const e=$y({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new gy(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",r.getTypedArrayFromDType("bool",1)),t=ev({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},ov="return ceil(x);",sv=My({opSnippet:ov,packedOpSnippet:ov,cpuKernelImpl:Mb}),iv={kernelName:Rr,backendName:"webgl",kernelFunc:sv};class uv{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class lv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const cv={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:o,clipValueMax:s}=r;let i;i=ar().getBool("WEBGL_PACK_CLIP")?new lv(a.shape):new uv(a.shape);const u=i.getCustomSetupFunc(o,s);return n.runWebGLProgram(i,[a],a.dtype,u)}};class dv{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function pv(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const hv={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),o=new dv(r.shape),s=[pv(r,a.complexTensorInfos.real),pv(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(o,s,s[0].dtype)}};class fv{constructor(e){this.outputShape=[],this.outputShape=g.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++)n.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${t[r-1]}));`);n.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class mv{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=g.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=Bg(r),o=ly("coords",r),s=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>`T${t}`);const i=new Array(e.length-1);i[0]=e[0][t];for(let h=1;h<i.length;h++)i[h]=i[h-1]+e[h][t];const u=s[t],l=s.slice(-2),c=s.join();let d=`if (${u} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let h=1;h<i.length;h++){const e=i[h-1];d+=`\n        if (${u} < ${i[h]}  && ${u} >= ${i[h-1]}) {\n          return getChannel(\n            getT${h}(${gv(s,u,e)}),\n            vec2(${gv(l,u,e)}));\n        }`}const p=i[i.length-1];d+=`\n        return getChannel(\n          getT${i.length}(${gv(s,u,p)}),\n          vec2(${gv(l,u,p)}));`,this.userCode=`\n      float getValue(${s.map(e=>"int "+e)}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function gv(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function bv(e){const{inputs:t,backend:n}=e,{input:r}=t;return $y({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const yv={kernelName:_a,backendName:"webgl",kernelFunc:bv};function xv(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>nv({inputs:{input:e},backend:n})),a=e.map(e=>bv({inputs:{input:e},backend:n})),o=xv(r,t,n),s=xv(a,t,n),i=Sy({inputs:{real:o,imag:s},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(s),i}if("string"===r){const{tensors2D:a,outShape:o}=vv(e,t,n),s=a.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=Pb(s,o,r,1===a[0].shape[0]),u=g.computeOutShape(e.map(e=>e.shape),t),l=n.makeTensorInfo(u,r,i);return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}if(e.length>ar().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=xv(e.slice(0,r),t,n),o=xv(e.slice(r),t,n),s=xv([a,o],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}if(ar().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new mv(e.map(e=>e.shape),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:a,outShape:o}=vv(e,t,n),s=new fv(a.map(e=>e.shape)),i=n.runWebGLProgram(s,a,r);a.forEach(e=>n.disposeIntermediateTensorInfo(e));const u=Uy({inputs:{x:i},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(i),u}function vv(e,t,n){const a=g.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>Uy({inputs:{x:e},attrs:{shape:[-1,r.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:a}}function wv(e){const{inputs:t,backend:n,attrs:a}=e,{axis:o}=a,s=r.parseAxisParam(o,t[0].shape)[0],i=g.computeOutShape(t.map(e=>e.shape),s);if(0===r.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter(e=>r.sizeFromShape(e.shape)>0);if(1===u.length)return $y({inputs:{x:u[0]},backend:n});const l=u.map(e=>e.shape);return g.assertParamsConsistent(l,s),xv(u,s,n)}const _v={kernelName:Mr,backendName:"webgl",kernelFunc:wv};class Nv{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,s=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${o}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class kv{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${o}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Cv{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:o,strideHeight:s,padInfo:i,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:d}=n,{left:p,top:h}=i,f=a*r,m=pg(),g="channelsLast"===d,b=g?0:1,y=g?1:2;let x="";for(let v=0;v<=1;v++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${v};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${s} - ${h};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${o}. - ${p}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*v+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*v+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function $v({x:e,filter:t,convInfo:n,backend:a,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape,c=a.texData.get(e.dataId),d="channelsLast"===n.dataFormat;let p;const h=[],f=l[2]%2!=0&&!!c.isPacked;if((1!=l[0]*l[1]*l[2]&&1!==n.outChannels||!(n.inChannels>1e3))&&ar().getBool("WEBGL_LAZILY_UNPACK")&&ar().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&f){const f={dataId:e.dataId,shape:[1,d?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),n.inChannels],dtype:e.dtype},m=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,r.assert(ag(c.shape,f.shape),()=>`packed reshape ${c.shape} to ${f.shape} isn't free`);const g=Uy({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});h.push(g);const b=nx({a:f,b:g,backend:a,transposeA:!1,transposeB:!1,bias:o,activation:u,preluActivationWeights:s,leakyreluAlpha:i}),y=a.texData.get(b.dataId);r.assert(y.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=m,y.shape=n.outShape,p=$y({inputs:{x:b},backend:a}),p.shape=n.outShape,h.push(b)}else{const r=Uy({inputs:{x:e},backend:a,attrs:{shape:[1,d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=Uy({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),f=nx({a:r,b:c,transposeA:!1,transposeB:!1,backend:a,bias:o,activation:u,preluActivationWeights:s,leakyreluAlpha:i});p=Uy({inputs:{x:f},backend:a,attrs:{shape:n.outShape}}),h.push(r),h.push(c),h.push(f)}for(const r of h)a.disposeIntermediateTensorInfo(r);return p}function Iv({x:e,filter:t,convInfo:n,backend:a,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=n,m="channelsLast"===f,g=l*c*d,b=h*p,y=[g,b],x=[],v=Uy({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),w=Uy({inputs:{x:t},backend:a,attrs:{shape:[1,g,r.sizeFromShape(t.shape)/g]}});x.push(v),x.push(w);const _=new Cv(y,v.shape,n),N=a.runWebGLProgram(_,[v],"float32"),k=Uy({inputs:{x:N},backend:a,attrs:{shape:[1,y[0],y[1]]}});x.push(N),x.push(k);const C=null!=o,$=null!=s,I="leakyrelu"===u,S=u?Ly(u,!0):null,T=new By(k.shape,w.shape,[1,b,n.outChannels],!0,!1,C,S,$,I),E=[k,w];if(o&&E.push(o),$&&E.push(s),I){const e=a.makeTensorInfo([],"float32",r.createScalarValue(i,"float32"));E.push(e),x.push(e)}const A=a.runWebGLProgram(T,E,"float32"),R=Uy({inputs:{x:A},backend:a,attrs:{shape:m?[1,h,p,n.outChannels]:[1,n.outChannels,h,p]}});x.push(A);for(const r of x)a.disposeIntermediateTensorInfo(r);return R}const Sv={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:s,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,d=g.convertConv2DDataFormat(u),p=g.computeConv2DInfo(a.shape,o.shape,s,l,i,c,!1,d);let h;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(ar().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])h=Iv({x:a,filter:o,convInfo:p,backend:n});else{const e=new Nv(p);h=n.runWebGLProgram(e,[a,o],"float32")}else h=$v({x:a,filter:o,convInfo:p,backend:n});const f=Uy({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}};class Tv{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===e.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ev{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Av{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Rv{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Dv={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:s,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,d=g.convertConv2DDataFormat(u),p=g.computeConv2DInfo(a.shape,c,s,1,i,l,!1,d),h=new Tv(p);return n.runWebGLProgram(h,[a,o],"float32")}},Ov={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{inputShape:s,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=g.convertConv2DDataFormat(l),p=g.computeConv2DInfo(s,o.shape,i,1,u,c,!1,d),h=new Ev(p);return n.runWebGLProgram(h,[a,o],"float32")}},Fv={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:s,pad:i,dilations:u}=r,l=g.computeConv3DInfo(a.shape,o.shape,s,u,i),c=new kv(l);return n.runWebGLProgram(c,[a,o],"float32")}},Mv={kernelName:zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:s,pad:i,filterShape:u}=r,l=g.computeConv3DInfo(a.shape,u,s,1,i),c=new Av(l);return n.runWebGLProgram(c,[a,o],"float32")}},Pv={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{pad:s,strides:i,inputShape:u}=r,l=g.computeConv3DInfo(u,o.shape,i,1,s),c=new Rv(l);return n.runWebGLProgram(c,[a,o],"float32")}},Lv=My({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),Bv={kernelName:Gr,backendName:"webgl",kernelFunc:Lv},Vv=My({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),zv={kernelName:Ur,backendName:"webgl",kernelFunc:Vv};class Wv{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,s,i,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const p="bilinear"===r?1:0,[h,f]=[s-1+".0",i-1+".0"],[m,g,b]=c>1?[""+(s-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,x,v]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${o}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Gv={kernelName:jr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:o,boxInd:s}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new Wv(a.shape,o.shape,i,u,l);return n.runWebGLProgram(c,[a,o,s],"float32")}};class Uv{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Hv(r,"coords")})`,o=e[e.length-1];let s="",i="";t?(s=n?"end != "+(o-1):"end != 0",i=n?"end + 1":"end - 1"):(s=n?`end + pow2 < ${o}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${Bg(r)} coords = getOutputCoords();\n        int end = ${jv(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${s}) {\n          int idx = ${i};\n          ${jv(r,"coords")} = idx;\n          val += getX(${Hv(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function Hv(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function jv(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const qv={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,exclusive:s,reverse:i}=r,u=a.shape.length,l=g.getAxesPermutation([o],u);let c=a;null!=l&&(c=ex({inputs:{x:a},backend:n,attrs:{perm:l}}));const d=g.getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${o}`);const p=c.shape[d];let h=$y({inputs:{x:c},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){const e=new Uv(c.shape,!1,i),t=e.getCustomSetupFunc(f),r=h;h=n.runWebGLProgram(e,[h],h.dtype,t),n.disposeIntermediateTensorInfo(r)}if(s){const e=new Uv(c.shape,s,i),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=ex({inputs:{x:h},backend:n,attrs:{perm:g.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),e}return h}},Kv={kernelName:qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:o}=t,{size:s,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(o.dataId),r=Ob(e,t,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(o),r=Fb(e,t,s,i);return n.makeTensorInfo(r.shape,o.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Xv{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Qv={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{blockSize:s,dataFormat:i}=a;r.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);const u=o.shape[0],l=("NHWC"===i?o.shape[1]:o.shape[2])*s,c=("NHWC"===i?o.shape[2]:o.shape[3])*s,d=("NHWC"===i?o.shape[3]:o.shape[1])/(s*s),p=new Xv("NHWC"===i?[u,l,c,d]:[u,d,l,c],s,i);return n.runWebGLProgram(p,[o],o.dtype)}};class Yv{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.inHeight,s=e.inWidth,i=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",b="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${i}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${o}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${s}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class Zv{constructor(e,t=!1,n=null,a=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,u=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,d=e.strideWidth,p=e.dilationHeight,h=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let b="int xR; int xC; int xCOffset;";for(let r=0;r<f;r++)for(let e=0;e<m;e++)b+=`\n          vec4 xTexelR${r}C${2*e} = vec4(0.);\n          vec4 wR${r}C${e} = vec4(0.);\n          vec4 xR${r}C${e} = vec4(0.);`;for(let w=0;w<f;w++)for(let e=0;e<g;e++){const t=2*e;if(b+=`\n          xR = xRCorner + ${w*p};\n          xC = xCCorner + ${t*h};\n        `,1===d){if(t<m&&(b+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${w}C${t}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${w}C${t} = vec4(previous.zw, xTexelR${w}C${t}.xy);\n                } else {\n                  xR${w}C${t} = vec4(0, 0, xTexelR${w}C${t}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xR${w}C${t} = xTexelR${w}C${t};\n              `,t+1<m)){const e=l%2==0?r.nearestLargerEven(h):h;h%2==0&&l%2==1||h%2!=0&&l%2!=1?(b+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(b+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${w}C${t} = vec4(0.);\n                    }\n                  `),b+=`\n                  xR${w}C${t+1} = vec4(\n                    xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.xy);\n                `):b+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${w}C${t+1} = xTexelR${w}C${t+2};\n                `}}else t<m&&(b+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,l%2==1?(b+=`\n                xCOffset = xC + 1 - ${d};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${w}C${t+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${w}C${t+2} = vec4(0.);\n                }\n\n                xR${w}C${t} = vec4(\n                  xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.zw);\n              `,t+1<m&&(b+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${d};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${w}C${t+1} = vec4(xTexelR${w}C${t+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xCOffset = xC + ${d};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${t+2} = vec4(0.);\n                }\n\n                xR${w}C${t} = vec4(\n                  xTexelR${w}C${t}.xy, xTexelR${w}C${t+2}.xy);\n              `,t+1<m&&(b+=`\n                  xR${w}C${t+1} = vec4(\n                    xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.zw);\n                `)),b+="}");t<m&&(b+=`\n            vec4 wTexelR${w}C${t} = getW(${w}, ${t}, d1, q);\n            wR${w}C${t} = vec4(wTexelR${w}C${t}.xz, wTexelR${w}C${t}.xz);\n          `,t+1<m&&(b+=`\n              vec4 wTexelR${w}C${t+1} = getW(${w}, ${t+1}, d1, q);\n              wR${w}C${t+1} =\n                vec4(wTexelR${w}C${t+1}.xz, wTexelR${w}C${t+1}.xz);`))}for(let r=0;r<f;r++)for(let e=0;e<m;e++)b+=`dotProd += xR${r}C${e} * wR${r}C${e};`;let y="",x="";n&&(y=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${c}, ${d});\n      const ivec2 pads = ivec2(${u}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${b}\n\n        vec4 result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const Jv={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:s}=t,{strides:i,pad:u,dilations:l,dimRoundingMode:c}=a;let d=l;null==d&&(d=[1,1]),r.assert(g.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=g.computeConv2DInfo(o.shape,s.shape,i,d,u,c,!0);let h;return h=ar().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new Zv(p):new Yv(p),n.runWebGLProgram(h,[o,s],"float32")}};class ew{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tw{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const nw={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:s,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r,d=g.computeConv2DInfo(a.shape,c,s,i,u,l,!0),p=new ew(d);return n.runWebGLProgram(p,[a,o],"float32")}},rw={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{strides:s,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r,d=g.computeConv2DInfo(c,o.shape,s,i,u,l,!0),p=new tw(d);return n.runWebGLProgram(p,[a,o],"float32")}};class aw{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ow={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,o=[...a.shape,...a.shape],s=r.sizeFromShape(a.shape),i=Uy({inputs:{x:a},backend:n,attrs:{shape:[s]}}),u=new aw(s),l=n.runWebGLProgram(u,[i],i.dtype),c=Uy({inputs:{x:l},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}};class sw{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:o,filterHeight:s,filterWidth:i,dilationHeight:u,dilationWidth:l}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const iw={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:s,pad:i,dilations:u}=r,l=g.computeDilation2DInfo(a.shape,o.shape,s,i,"NHWC",u);let c;const d=new sw(l);c=n.runWebGLProgram(d,[a,o],"float32");const p=Uy({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}},uw=My({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),lw={kernelName:ra,backendName:"webgl",kernelFunc:uw},cw={kernelName:aa,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,o=ar().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cy("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new ky("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(o,[r,a],r.dtype)}},dw=Py({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),pw={kernelName:sa,backendName:"webgl",kernelFunc:dw},hw=My({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${g.ERF_P};\n  float a1 = ${g.ERF_A1};\n  float a2 = ${g.ERF_A2};\n  float a3 = ${g.ERF_A3};\n  float a4 = ${g.ERF_A4};\n  float a5 = ${g.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),fw={kernelName:oa,backendName:"webgl",kernelFunc:hw},mw="return exp(x);",gw=My({opSnippet:mw,packedOpSnippet:mw,cpuKernelImpl:Lb}),bw={kernelName:ia,backendName:"webgl",kernelFunc:gw};function yw(e){const{inputs:t,attrs:n,backend:a}=e,{dim:o}=n,{input:s}=t,i=s.shape.length,u=s.shape.slice();let l=o;return o<0&&(r.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),u.splice(l,0,1),Uy({inputs:{x:s},backend:a,attrs:{shape:u}})}const xw={kernelName:ua,backendName:"webgl",kernelFunc:yw},vw="return exp(x) - 1.0;",ww=My({opSnippet:vw,packedOpSnippet:vw,cpuKernelImpl:Bb}),_w={kernelName:la,backendName:"webgl",kernelFunc:ww};class Nw{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=n?`${r}.0`:"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function kw(e,t,n){const a=n.texData.get(e.dataId),o=r.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=Uy({inputs:{x:e},backend:n,attrs:{shape:[o/s,s]}}),u=i.shape,l=new Nw("real",u,t),c=new Nw("imag",u,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:u},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(l,d,"float32"),h=n.runWebGLProgram(c,d,"float32"),f=Sy({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=Uy({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const Cw={kernelName:ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return kw(r,!1,n)}};class $w{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function Iw(e){const{backend:t,attrs:n}=e,{shape:a,value:o}=n;let{dtype:s}=n;if(s=s||r.inferDtype(o),"string"===s){const e=r.getArrayFromDType(s,r.sizeFromShape(a));return e.fill(o),t.makeTensorInfo(a,s,e)}{const e=new $w(a,o),n=e.getCustomSetupFunc(o);return t.runWebGLProgram(e,[],s,n)}}const Sw={kernelName:da,backendName:"webgl",kernelFunc:Iw};class Tw{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Ew={kernelName:pa,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Tw(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Aw="return floor(x);",Rw=My({opSnippet:Aw,packedOpSnippet:Aw,cpuKernelImpl:Vb}),Dw={kernelName:ha,backendName:"webgl",kernelFunc:Rw},Ow=Py({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Fw={kernelName:fa,backendName:"webgl",kernelFunc:Ow};class Mw{constructor(e){this.variableNames=["A"];const t=pg(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Pw{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=pg(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Lw={kernelName:ts,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:o}=r,s="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],d=[l,u,o];(i||s)&&(null==Bw&&(Bw=document.createElement("canvas").getContext("2d")),Bw.canvas.width=u,Bw.canvas.height=l,Bw.drawImage(a,0,0,u,l),a=Bw.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=Lm.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const h=ar().getBool("WEBGL_PACK")?new Pw(d):new Mw(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}};let Bw;const Vw={kernelName:as,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:s,bias:i,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=a,b=g.convertConv2DDataFormat(d),y=g.computeConv2DInfo(o.shape,s.shape,l,p,c,h,!1,b);let x;const v=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(ar().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])x=Iv({x:o,filter:s,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=i,t=null!=u,a="leakyrelu"===f,l=f?Ly(f,!1):null,c=new Nv(y,e,l,t,a),d=[o,s];if(i&&d.push(i),u&&d.push(u),a){const e=n.makeTensorInfo([],"float32",r.createScalarValue(m,"float32"));d.push(e),v.push(e)}x=n.runWebGLProgram(c,d,"float32")}else x=$v({x:o,filter:s,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const w=Uy({inputs:{x:x},backend:n,attrs:{shape:y.outShape}});return v.push(x),v.forEach(e=>n.disposeIntermediateTensorInfo(e)),w}},zw={kernelName:os,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:s,bias:i,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=[];let b=d;null==b&&(b=[1,1]),r.assert(g.eitherStridesOrDilationsAreOne(l,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${b}'`);const y=g.computeConv2DInfo(o.shape,s.shape,l,b,c,p,!0),x=ar().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,v=h?Ly(h,x):null,w=[o,s],_=null!=i,N=null!=u,k="leakyrelu"===h;if(_&&w.push(i),N&&w.push(u),k){const e=n.makeTensorInfo([],"float32",r.createScalarValue(f,"float32"));w.push(e),m.push(e)}let C;C=x?new Zv(y,_,v,N,k):new Yv(y,_,v,N,k);const $=n.runWebGLProgram(C,w,"float32");return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),$}};class Ww{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=Bg(t.length),a=Bg(n.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Gw={kernelName:ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:o}=t,s=o.shape,i=s[s.length-1],[u,l,c,d]=g.prepareAndValidate(a,o),p=Uy({inputs:{x:o},backend:n,attrs:{shape:[l,i]}}),h=Uy({inputs:{x:a},backend:n,attrs:{shape:[r.sizeFromShape(a.shape)/c,c]}}),f=new Ww(i,d,[l,c]),m=n.runWebGLProgram(f,[h,p],h.dtype),b=Uy({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),b}};class Uw{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Bg(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)r.push(2===a?"int(getIndices(resRC.x, resRC.z))":`${n[a]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const Hw={kernelName:ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,indices:s}=t,{axis:i,batchDims:u}=a,l=r.parseAxisParam(i,o.shape)[0],c=g.segment_util.collectGatherOpShapeInfo(o,s,l,u),d=r.sizeFromShape(s.shape),p=[],h=Uy({inputs:{x:o},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Uy({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});p.push(h),p.push(f);const m=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([o,s])||"string"===o.dtype){const e=n.bufferSync(f),t=n.bufferSync(h),r=zb(t,e,m);return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const b=new Uw(h.shape,m),y=n.runWebGLProgram(b,[h,f],h.dtype);p.push(y);const x=Uy({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},jw=Py({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Wb,dtype:"bool"}),qw={kernelName:ya,backendName:"webgl",kernelFunc:jw},Kw=Py({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),Xw={kernelName:xa,backendName:"webgl",kernelFunc:Kw},Qw={kernelName:wa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return kw(r,!0,n)}},Yw=My({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Zw={kernelName:Na,backendName:"webgl",kernelFunc:Yw},Jw=My({opSnippet:"return float(isinf(x));",dtype:"bool"}),e_={kernelName:ka,backendName:"webgl",kernelFunc:Jw},t_=My({opSnippet:"return float(isnan(x));",dtype:"bool"}),n_={kernelName:Ca,backendName:"webgl",kernelFunc:t_},r_=Py({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Gb,dtype:"bool"}),a_={kernelName:Ia,backendName:"webgl",kernelFunc:r_},o_=Py({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),s_={kernelName:Sa,backendName:"webgl",kernelFunc:o_},i_={kernelName:Ta,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:o}=n,s=Ub(r,a,o);return t.makeTensorInfo([s.length],"float32",s)}},u_=My({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Hb}),l_={kernelName:Ea,backendName:"webgl",kernelFunc:u_},c_=My({opSnippet:"return log(1.0 + x);"}),d_={kernelName:Aa,backendName:"webgl",kernelFunc:c_},p_=Py({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),h_={kernelName:Ra,backendName:"webgl",kernelFunc:p_},f_=My({opSnippet:"return float(!(x >= 1.0));"}),m_={kernelName:Da,backendName:"webgl",kernelFunc:f_},g_=Py({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),b_={kernelName:Oa,backendName:"webgl",kernelFunc:g_};class y_{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const o=t,s=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${o}; j <= ${o}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class x_{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,s=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${o};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${o}; j <= ${o}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const v_={kernelName:Ma,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:o,bias:s,alpha:i,beta:u}=r,l=ar().getBool("WEBGL_PACK_NORMALIZATION")?new x_(a.shape,o,s,i,u):new y_(a.shape,o,s,i,u);return n.runWebGLProgram(l,[a],a.dtype)}};class w_{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const __={kernelName:Pa,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:o,dy:s}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r,d=new w_(a.shape,i,u,l,c);return n.runWebGLProgram(d,[a,o,s],a.dtype)}};function N_(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{reductionIndices:s,keepDims:i}=a,u=o.shape.length,l=r.parseAxisParam(s,o.shape);let c=l;const d=g.getAxesPermutation(c,u),p=null!=d,h=n.shouldExecuteOnCPU([o]);let f=o;if(p){if(h){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let n=0;n<t.length;n++)t[n]=o.shape[d[n]];const r=sy(e,o.shape,o.dtype,d,t);f=n.makeTensorInfo(t,o.dtype),n.texData.get(f.dataId).values=r}else f=Yy(o,d,n);c=g.getInnerMostAxes(c.length,u)}g.assertAxesAreInnerMostDims("max",c,u);const[m,b]=g.computeOutAndReduceShapes(f.shape,c);let y,x=m;if(i&&(x=g.expandShapeToKeepDim(m,l)),h){const e=n.texData.get(f.dataId),t=jb(e.values,r.sizeFromShape(b),x,o.dtype);y=n.makeTensorInfo(x,o.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,a){const o=r.sizeFromShape(t),s=Uy({inputs:{x:e},attrs:{shape:[r.sizeFromShape(e.shape)/o,o]},backend:a}),i=Ky(s,e.dtype,"max",a),u=Uy({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),u}(f,b,x,n);return p&&n.disposeIntermediateTensorInfo(f),y}const k_={kernelName:La,backendName:"webgl",kernelFunc:N_},C_=Py({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:qb}),$_={kernelName:Ba,backendName:"webgl",kernelFunc:C_},I_={kernelName:Va,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t;cg(o,"maxPool");const{filterSize:s,strides:i,pad:u,dimRoundingMode:l}=a;r.assert(g.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=g.computePool2DInfo(o.shape,s,i,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))return $y({inputs:{x:o},backend:n});const d=new Fx(c,"max",!1);return n.runWebGLProgram(d,[o],o.dtype)}},S_={kernelName:Wa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:s,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=g.computePool3DInfo(a.shape,o,s,[1,1,1],i,l,u),d=new Mx(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class T_{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${t*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class E_{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${t*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const A_={kernelName:Ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,s=o,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,d=g.computePool3DInfo(s.shape,i,u,[1,1,1],l,c),p=new Mx(d,"max",!0),h=n.runWebGLProgram(p,[s],s.dtype),f=new E_(d),m=n.runWebGLProgram(f,[a,h],s.dtype);return n.disposeIntermediateTensorInfo(h),m}},R_={kernelName:za,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o,output:s}=t,i=o;cg([o,s],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=g.computePool2DInfo(i.shape,u,l,1,c,d),h=new Fx(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new T_(p),b=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),b}},D_={kernelName:Ua,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:o,strides:s,pad:i,includeBatchInIndex:u}=t,l=n;r.assert(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);const c=[1,1];r.assert(g.eitherStridesOrDilationsAreOne(s,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);const d=g.computePool2DInfo(a.shape,o,s,c,i),[p,h]=function(e,t,n,r){let a=new Fx(n,"max",!1);const o=r.runWebGLProgram(a,[e],"float32");return a=new Fx(n,"max",!0,!0,t),[o,r.runWebGLProgram(a,[e],"float32")]}(a,u,d,l);return[p,h]}},O_={kernelName:Ha,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:o,axis:s}=t,i=n,u=a.shape.length,l=r.parseAxisParam(s,a.shape);let c=l;const d=g.getAxesPermutation(c,u),p=null!=d,h=i.shouldExecuteOnCPU([a]),f=[];let m=a;if(p){if(h){const e=i.texData.get(m.dataId).values,t=new Array(u);for(let r=0;r<t.length;r++)t[r]=a.shape[d[r]];const n=sy(e,a.shape,a.dtype,d,t);m=i.makeTensorInfo(t,a.dtype),i.texData.get(m.dataId).values=n}else m=Yy(a,d,i);f.push(m),c=g.getInnerMostAxes(c.length,u)}g.assertAxesAreInnerMostDims("sum",c,u);const[b,y]=g.computeOutAndReduceShapes(m.shape,c);let x=b;o&&(x=g.expandShapeToKeepDim(b,l));const v=function(e,t,n,a){const o=r.sizeFromShape(t),s=Uy({inputs:{x:e},attrs:{shape:[r.sizeFromShape(e.shape)/o,o]},backend:a}),i=Ky(s,"float32","mean",a),u=Uy({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),u}(m,y,x,i);for(const r of f)i.disposeIntermediateTensorInfo(r);return v}},F_={kernelName:ja,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a,u=o.shape.length,l=r.parseAxisParam(s,o.shape);let c=l;const d=g.getAxesPermutation(c,u);let p=o;null!=d&&(p=ex({inputs:{x:o},backend:n,attrs:{perm:d}}),c=g.getInnerMostAxes(c.length,o.shape.length)),g.assertAxesAreInnerMostDims("min",c,u);const[h,f]=g.computeOutAndReduceShapes(p.shape,c),m=Uy({inputs:{x:p},backend:n,attrs:{shape:[-1,r.sizeFromShape(f)]}}),b=Ky(m,m.dtype,"min",n);let y;return y=Uy(i?{inputs:{x:b},backend:n,attrs:{shape:g.expandShapeToKeepDim(h,l)}}:{inputs:{x:b},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),y}},M_=Py({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Kb}),P_={kernelName:qa,backendName:"webgl",kernelFunc:M_};class L_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Bg(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${o};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class B_{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Bg(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=ly("rc",r),u=ly("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const V_={kernelName:Ka,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:o}=n,s=ar().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new B_(r.shape,a,o):new L_(r.shape,a,o);return t.runWebGLProgram(s,[r],r.dtype)}},z_=Py({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),W_={kernelName:Xa,backendName:"webgl",kernelFunc:z_};class G_{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const U_=Py({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),H_={kernelName:na,backendName:"webgl",kernelFunc:U_},j_="return a - b;",q_=Py({opSnippet:j_,packedOpSnippet:j_,supportsComplex:!0,cpuKernelImpl:ry}),K_={kernelName:zo,backendName:"webgl",kernelFunc:q_};function X_(e){const{inputs:t,backend:n,attrs:a}=e,{logits:o}=t,{dim:s}=a,i=r.parseAxisParam([s],o.shape),u=N_({inputs:{x:o},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=g.expandShapeToKeepDim(u.shape,i),c=Uy({inputs:{x:u},backend:n,attrs:{shape:l}}),d=q_({inputs:{a:o,b:c},backend:n}),p=gw({inputs:{x:d},backend:n}),h=Zy({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),f=Uy({inputs:{x:h},backend:n,attrs:{shape:l}}),m=U_({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const Q_={kernelName:Lo,backendName:"webgl",kernelFunc:X_},Y_={kernelName:Qa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:o,seed:s,normalized:i}=r,u=i?a:X_({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=new G_(u.shape[0],u.shape[1],o),c=l.getCustomSetupFunc(s),d=n.runWebGLProgram(l,[u],"int32",c);return i||n.disposeIntermediateTensorInfo(u),d}},Z_="return -x;",J_={kernelName:Za,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=Qb(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=ar().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new xy(r.shape,Z_):new gy(r.shape,Z_),n.runWebGLProgram(a,[r],r.dtype)}},eN=b.nonMaxSuppressionV3Impl,tN={kernelName:eo,backendName:"webgl",kernelFunc:function(e){g.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(o.dataId),{selectedIndices:d}=eN(l,c,s,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},nN=b.nonMaxSuppressionV4Impl,rN={kernelName:to,backendName:"webgl",kernelFunc:function(e){g.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),d=n.readSync(o.dataId),{selectedIndices:p,validOutputs:h}=nN(c,d,s,i,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},aN=b.nonMaxSuppressionV5Impl,oN={kernelName:no,backendName:"webgl",kernelFunc:function(e){g.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),d=n.readSync(o.dataId),p=s,h=i,f=u,m=l,{selectedIndices:b,selectedScores:y}=aN(c,d,p,h,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class sN{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const iN={kernelName:ao,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:o}=t,{depth:s,onValue:i,offValue:u}=a,l=r.sizeFromShape(o.shape),c=new sN(l,s,i,u),d=Uy({inputs:{x:o},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[d],o.dtype);n.disposeIntermediateTensorInfo(d);const h=Uy({inputs:{x:p},backend:n,attrs:{shape:[...o.shape,s]}});return n.disposeIntermediateTensorInfo(p),h}};function uN(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=nv({inputs:{input:r},backend:n}),t=uN({inputs:{x:e},backend:n}),a=bv({inputs:{input:r},backend:n}),o=uN({inputs:{x:a},backend:n}),s=Sy({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}return Iw({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const lN={kernelName:Jo,backendName:"webgl",kernelFunc:uN},cN={kernelName:ro,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=nv({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),o=bv({inputs:{input:a},backend:r}),s=uN({inputs:{x:o},backend:r}),i=Sy({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),i}return Iw({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},dN={kernelName:oo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:o}=a;if(1===t.length)return yw({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{r.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),r.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],l=wv({inputs:t.map(e=>{const t=yw({inputs:{input:e},backend:n,attrs:{dim:o}});return u.push(t),t}),backend:n,attrs:{axis:o}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}};class pN{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Bg(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${s});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${o};\n        int end = ${s};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class hN{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Bg(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=ly("rc",r),u=ly("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===r?2:4;f<m;f++)h+=`\n        ${d[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${s});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const fN=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:o,constantValue:s}=r,i=ar().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hN(a.shape,o,s):new pN(a.shape,o,s),u=i.getCustomSetupFunc(s);return n.runWebGLProgram(i,[a],a.dtype,u)},mN={kernelName:so,backendName:"webgl",kernelFunc:fN},gN=Py({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),bN={kernelName:uo,backendName:"webgl",kernelFunc:gN},yN={kernelName:co,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a,u=o.shape.length,l=[],c=r.parseAxisParam(s,o.shape);let d=c;const p=g.getAxesPermutation(d,u);let h,f=o;if(null!=p&&(f=ex({inputs:{x:o},backend:n,attrs:{perm:p}}),d=g.getInnerMostAxes(d.length,u),l.push(f)),g.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Yb(f.shape,f.dtype,e,d);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=g.computeOutAndReduceShapes(f.shape,d),a=r.sizeFromShape(t),s=Uy({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),i=Ky(s,Us(o.dtype),"prod",n);h=Uy({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(s),l.push(i)}if(i){l.push(h);const e=g.expandShapeToKeepDim(h.shape,c);h=Uy({inputs:{x:h},backend:n,attrs:{shape:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},xN=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:o,dtype:s}=n,i=Zb(r,a,o,s);return t.makeTensorInfo([i.length],s,i)},vN={kernelName:po,backendName:"webgl",kernelFunc:xN},wN=My({opSnippet:"return 1.0 / x;"}),_N={kernelName:fo,backendName:"webgl",kernelFunc:wN},NN=My({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),kN={kernelName:mo,backendName:"webgl",kernelFunc:NN},CN=My({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),$N={kernelName:wo,backendName:"webgl",kernelFunc:CN};class IN{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[o,s,i,u]=e;this.outputShape=[o,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class SN{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,u]=e;this.outputShape=[o,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const TN={kernelName:xo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:s,size:i}=r,[u,l]=i,c=ar().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new SN(a.shape,u,l,o,s):new IN(a.shape,u,l,o,s);return n.runWebGLProgram(c,[a],"float32")}};class EN{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,o,s]=e,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],u=[n&&o>1?o-1:o,n&&s>1?s-1:s],l=i[0]/u[0],c=i[1]/u[1],d=1/l,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const AN={kernelName:vo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:o}=t,{alignCorners:s}=r,i=new EN(o.shape,a.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class RN{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[o,s,i,u]=e;this.outputShape=[o,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const DN={kernelName:bo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:s,size:i}=r,[u,l]=i,c=new RN(a.shape,u,l,o,s);return n.runWebGLProgram(c,[a],a.dtype)}};class ON{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,o,s]=e,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],u=[n&&o>1?o-1:o,n&&s>1?s-1:s],l=i[0]/u[0],c=i[1]/u[1],d=1/l,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const FN={kernelName:yo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:o}=t,{alignCorners:s}=r,i=new ON(o.shape,a.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class MN{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=Bg(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class PN{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=ly("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=Bg(n);function i(n){const r=e.map((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${o}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const LN={kernelName:_o,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{dims:s}=a,i=o.shape.length,u=r.parseAxisParam(s,o.shape);if(0===i)return $y({inputs:{x:o},backend:n});const l=ar().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PN(o.shape,u):new MN(o.shape,u);return n.runWebGLProgram(l,[o],o.dtype)}};class BN{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,o)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(o,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const VN={kernelName:ns,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:o,center:s}=t,i=n,u=new BN(r.shape,o),[l,c]=g.getImageCenter(s,r.shape[1],r.shape[2]),d=u.getCustomSetupFunc(l,c,Math.sin(a),Math.cos(a));return i.runWebGLProgram(u,[r],r.dtype,d)}},zN=My({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),WN={kernelName:No,backendName:"webgl",kernelFunc:zN},GN=My({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Jb}),UN={kernelName:ko,backendName:"webgl",kernelFunc:GN};class HN{constructor(e,t,n,r,a,o,s=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const i=Bg(a.length),u=Bg(o.length);let l="";1===n?l="i":2===n&&(l="i, j");let c="";1===r?c="i":2===r&&(c="i, coords[1]"),this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(getIndices(${l}));\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${c});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const jN={kernelName:Co,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:o}=t,{shape:s}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=g.calculateShapes(o,a,s),p=[d/l,l];if(0===d)return n.makeTensorInfo(s,a.dtype);const h=Uy({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),f=Uy({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),b=new HN(u,i,h.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(b,[f,h,m],f.dtype),x=Uy({inputs:{x:y},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}};class qN{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[];for(let r=0;r<t.length;r++)s.push(`${n[r]}`),r<e&&o.push(`${n[r]}`);r=o.join(),a=s.join()}const o=Bg(n);this.userCode=`\n      void main() {\n        ${o} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const KN={kernelName:$o,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:o}=t,s=new qN(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(s,[r,a,o],Gs(a.dtype,o.dtype))}},XN=My({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${g.SELU_SCALEALPHA};\n  float scale = ${g.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),QN={kernelName:Io,backendName:"webgl",kernelFunc:XN},YN=My({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),ZN={kernelName:Ro,backendName:"webgl",kernelFunc:YN},JN=My({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),ek={kernelName:Ao,backendName:"webgl",kernelFunc:JN},tk=My({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),nk={kernelName:To,backendName:"webgl",kernelFunc:tk},rk=My({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),ak={kernelName:Eo,backendName:"webgl",kernelFunc:rk},ok=My({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),sk={kernelName:Do,backendName:"webgl",kernelFunc:ok},ik={kernelName:Mo,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{blockShape:s,paddings:i}=a;r.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const u=s.reduce((e,t)=>e*t),l=[[0,0]];l.push(...i);for(let r=1+s.length;r<o.shape.length;++r)l.push([0,0]);const c=[],d=fN({inputs:{x:o},backend:n,attrs:{paddings:l,constantValue:0}}),p=g.getReshaped(d.shape,s,u,!1),h=g.getPermuted(p.length,s.length,!1),f=g.getReshapedPermuted(d.shape,s,u,!1),m=Uy({inputs:{x:d},backend:n,attrs:{shape:p}}),b=ex({inputs:{x:m},backend:n,attrs:{perm:h}}),y=Uy({inputs:{x:b},backend:n,attrs:{shape:f}});return c.push(d),c.push(m),c.push(b),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},uk={kernelName:Wo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:o,defaultValue:s}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:d}=g.calculateShapes(o,a,i),p=new HN(l,u,a.shape.length,o.shape.length,c,[d,1],!1),h=n.runWebGLProgram(p,[o,a,s],o.dtype),f=Uy({inputs:{x:h},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),f}},lk={kernelName:Po,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{numOrSizeSplits:s,axis:i}=a,u=r.parseAxisParam(i,o.shape)[0],l=g.prepareSplitSize(o,s,u),c=new Array(o.shape.length).fill(0),d=o.shape.slice();return l.map(e=>{const t=[...d];t[u]=e;const r=Qx({inputs:{x:o},backend:n,attrs:{begin:c,size:t}});return c[u]+=e,r})}},ck=My({opSnippet:"return sqrt(x);"}),dk={kernelName:Oo,backendName:"webgl",kernelFunc:ck},pk=My({opSnippet:"return x * x;"}),hk={kernelName:Vo,backendName:"webgl",kernelFunc:pk},fk="return (a - b) * (a - b);",mk=Py({opSnippet:fk,packedOpSnippet:fk}),gk={kernelName:Bo,backendName:"webgl",kernelFunc:mk},bk={kernelName:es,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=new gy(r.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return n.runWebGLProgram(a,[r],r.dtype)}};class yk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Bg(n.length),o=Bg(n.length);let s="";if(1===r)s="coords * strides + begin";else{let e=0;s=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}const xk={kernelName:Go,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,end:s,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:h}=r,{nonStrided:f,$begin:m,$strides:g,size:b,newShape:y,outShape:x}=d.sliceInfo(a.shape,o,s,i,u,l,c,p,h),v=Uy({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(f){const e=Qx({inputs:{x:v},backend:n,attrs:{begin:m,size:b}});w=Uy({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))w=n.makeTensorInfo(x,a.dtype,[]);else if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId),t=su(v.shape,v.dtype,e.values),r=ny(x,t,g,m);w=n.makeTensorInfo(x,v.dtype,r.values)}else{const e=new yk(m,g,x);w=n.runWebGLProgram(e,[v],v.dtype)}const _=Uy({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),_}},vk=My({opSnippet:"return tan(x);"}),wk={kernelName:Uo,backendName:"webgl",kernelFunc:vk},_k=My({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Nk={kernelName:Ho,backendName:"webgl",kernelFunc:_k};class kk{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.rank=n.length;const r=Bg(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function Ck(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{reps:s}=a;if("string"===o.dtype){const e=n.readSync(o.dataId).map(e=>r.decodeString(e)),t=su(o.shape,o.dtype,e),a=ay(t,s);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const i=new kk(o.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}const $k={kernelName:jo,backendName:"webgl",kernelFunc:Ck},Ik={kernelName:qo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:o,sorted:s}=r,i=n.readSync(a.dataId),[u,l]=oy(i,a.shape,a.dtype,o,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};class Sk{constructor(e,t,n,r,a,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const s="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${s} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Tk={kernelName:Ko,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:u,outputShape:l}=r,[c,d,p,h]=a.shape,[f,m]=null!=l?l:[d,p],g=new Sk(d,p,s,i,u,[c,f,m,h]);return n.runWebGLProgram(g,[a,o],"float32")}},Ek={kernelName:Qo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:o}=t;cg(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:l}=iy(s,a,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},Ak={kernelName:Yo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:o}=r;o<0&&(o+=a.shape.length);const s=a,i=s.shape.length,u=a.shape[o],l=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==o&&(l[c++]=s.shape[m]);const d=[],p=new Array(i).fill(0),h=s.shape.slice();h[o]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[o]=m;const e=Qx({inputs:{x:s},backend:n,attrs:{begin:p,size:h}}),t=Uy({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,d.push(e)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class Rk{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,o=e.numSegments,s=o*Math.ceil(a/n);this.outputShape=[r,s];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${o})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${o})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Dk=[v_,__,rx,ox,ix,lx,px,mx,gx,bx,Nx,kx,$x,Sx,Rx,Ex,Ox,Lx,Px,zx,Wx,Gx,jx,Zx,Jx,av,iv,cv,hv,Ty,_v,Dv,Ov,Sv,Mv,Pv,Fv,Bv,zv,Gv,qv,Kv,Qv,nw,rw,Jv,ow,iw,lw,cw,pw,fw,bw,xw,_w,Cw,Sw,Ew,Dw,Fw,Lw,Vw,zw,Gw,Hw,qw,Xw,Iy,Qw,yv,Zw,e_,n_,Ry,a_,s_,i_,d_,l_,h_,m_,b_,k_,S_,I_,A_,R_,D_,$_,O_,F_,P_,V_,W_,Y_,Gy,J_,tN,rN,oN,tv,iN,cN,dN,mN,bN,Fy,yN,vN,rv,H_,_N,$N,kN,Hy,TN,AN,DN,FN,LN,VN,WN,UN,jN,KN,QN,ZN,ek,nk,ak,Yx,Q_,sk,ik,uk,lk,dk,hk,gk,bk,xk,K_,Jy,wk,Nk,$k,Ik,Tk,tx,Ek,Ak,{kernelName:Zo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,segmentIds:s}=t,{numSegments:i}=a,u=o.shape.length,l=[];let c=0;const d=g.getAxesPermutation([c],u);let p=o;null!=d&&(p=ex({inputs:{x:o},backend:n,attrs:{perm:d}}),l.push(p),c=g.getInnerMostAxes(1,u)[0]);const h=g.segment_util.computeOutShape(p.shape,c,i),f=r.sizeFromShape([p.shape[c]]),m=Uy({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});l.push(m);const b=Us(o.dtype),y=(e,t,r,a,o)=>{const s=e.shape[0],i=e.shape[1],u=g.segment_util.segOpComputeOptimalWindowSize(i,o),c=new Rk({windowSize:u,inSize:i,batchSize:s,numSegments:o},t),d=n.compileAndRun(c,[e,r],a);if(l.push(d),d.shape[1]===o)return d;const p=xN({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),h=Ck({inputs:{x:p},backend:n,attrs:{reps:[i/u]}});return l.push(p),l.push(h),y(d,t,h,a,o)},x=Uy({inputs:{x:y(m,"unsortedSegmentSum",s,b,i)},backend:n,attrs:{shape:h}});let v=x;if(null!=d){l.push(x);const e=g.getUndoAxesPermutation(d);v=ex({inputs:{x:v},backend:n,attrs:{perm:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}},lN];for(const iI of Dk)ds(iI);var Ok,Fk;!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Ok||(Ok={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Fk||(Fk={}));const Mk={};function Pk(e){return Mk[e]}function Lk(e,t,n,a,o){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return Bk(t.inputNames[s.inputIndexStart],n,a,o);if("tensors"===s.type)return t.inputNames.slice(e,i).map(e=>Bk(e,n,a,o));const u=Bk(t.inputNames.slice(e)[0],n,a,o),l=u.dataSync();return"number"===s.type?l[0]:r.toNestedArray(u.shape,l)}const i=t.attrParams[e];return i&&i.value}function Bk(e,t,n,r){const[a,o]=Wk(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const s=n.currentContextIds.find(e=>!!t[zk(a,e)]);return void 0!==s?t[zk(a,s)][o]:void 0}function Vk(e,t){const[n,r]=Wk(e);return[zk(n,t&&t.currentContextId),r]}function zk(e,t){return t?`${e}-${t}`:e}function Wk(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function Gk(e,t,n){let r=Lk("pad",e,t,n);if("explicit"===r){r=Lk("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function Uk(e){return e.kept?e:uu(e)}const Hk=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],jk=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qk=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Kk=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Xk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Qk=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Yk=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Zk=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Jk=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],eC=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],tC=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nC=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],rC=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],aC=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],oC=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],sC=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],iC=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class uC{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[v,w,_,N,k,C,$,E,T,I,A,R,D,O,F,M,S].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=[],r=[],a=[],o=e.node.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?n.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e),{});let s=[];const i=[];let u={},l={};null!=t&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const c=Object.keys(o);c.forEach(e=>{const t=o[e];t.inputNames.forEach(e=>{const[n]=Vk(e);t.inputs.push(o[n]),o[n].children.push(t)})}),0===Object.keys(l).length?c.forEach(e=>{const t=o[e];0===t.children.length&&i.push(t)}):Object.keys(l).forEach(e=>{const[t]=Vk(e),n=o[t];null!=n&&(n.signatureKey=l[e],i.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{const[t]=Vk(e),n=o[t];n&&(n.signatureKey=u[e],s.push(n))}):s=n;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const p={nodes:o,inputs:s,outputs:i,weights:r,placeholders:n,signature:t,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=Pk(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=cC(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=cC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=vC(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=vC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=pC(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=pC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=xC(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=xC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=dC(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=dC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=_C(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_C(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=yC(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=yC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=wC(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=wC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=mC(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=mC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=gC(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=gC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=fC(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const a=[],o=[];e.signature.inputArg.forEach(e=>{const[t]=Vk(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:hC(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}),Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach(e=>{const[n]=Vk(e);t.inputs.push(r[n]),r[n].children.push(t)})});const s=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=Vk(s[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,o.push(a))});const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function lC(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=ar().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function cC(e,t,n,r=!1){const a=e[t];return null!=a?lC(a.s,r):n}function dC(e,t,n){const r=e[t];return r?r.b:n}function pC(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function hC(e){switch("string"==typeof e&&(e=Ok[e]),e){case Ok.DT_FLOAT:return"float32";case Ok.DT_INT32:case Ok.DT_INT64:case Ok.DT_INT8:case Ok.DT_UINT8:return"int32";case Ok.DT_BOOL:return"bool";case Ok.DT_DOUBLE:return"float32";case Ok.DT_STRING:return"string";default:return null}}function fC(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function mC(e,t,n){const r=e[t];return r&&r.type?hC(r.type):n}function gC(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>hC(e)):n}function bC(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function yC(e,t,n){const r=e[t];return r&&r.shape?bC(r.shape):n}function xC(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function vC(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>lC(e,r)):n}function wC(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>bC(e)):n}function _C(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class NC{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return Bk(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Bk(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return pC(this.node.rawAttrs,e,t);if(null!=n.s)return cC(this.node.rawAttrs,e,t);if(null!=n.b)return dC(this.node.rawAttrs,e,t);if(null!=n.shape)return yC(this.node.rawAttrs,e,t);if(null!=n.type)return mC(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return xC(this.node.rawAttrs,e,t);if(null!=n.list.s)return vC(this.node.rawAttrs,e,t);if(null!=n.list.shape)return wC(this.node.rawAttrs,e,t);if(null!=n.list.b)return _C(this.node.rawAttrs,e,t);if(null!=n.list.type)return gC(this.node.rawAttrs,e,t)}return t}}function kC(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){r.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let a=0;a<e.length;a++){const o=e[a],s=t[a];r.assert(o<0||s<0||o===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function CC(e){return"number"!=typeof e&&!e.some(e=>e<0)}function $C(e,t,n){let r=IC(e,n);const a=!CC(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(e=>{r=IC(e.shape,r)}),!CC(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function IC(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],o=t[r];if(a>=0&&o>=0&&a!==o)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:o}return n}class SC{constructor(e,t,n,r,a,o,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=o,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=Jl(0),Sl(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),kC(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Sl(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return fi([],[0].concat(this.elementShape));const n=this.readMany(e);return kC(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Nh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return fi([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return kC(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Uc(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Mh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,o=[];$l(()=>{t=zc(t,[1,n,a]);for(let n=0;n<e.length;++n)o[n]=zc(jc(t,[0,0===n?0:r[n-1],0],[1,e[n],a]),this.elementShape);return o});const s=[];for(let i=0;i<e.length;i++)s[i]=i;this.writeMany(s,o)}}class TC{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);kC(t,e.shape,"TensorList shape mismatch: "),Sl(e)}),this.idTensor=Jl(0),this.maxNumElements=r,Sl(this.idTensor)}get id(){return this.idTensor.id}copy(){return new TC([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);kC(e,this.elementShape,"TensorList shape mismatch: ");const r=$C(this.elementShape,this.tensors,e);return $l(()=>{const e=this.tensors.map(e=>zc(e,r));return Nh(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=$C(this.elementShape,this.tensors,e),r=this.tensors.pop();return kC(r.shape,e,"TensorList shape mismatch: "),zc(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(kC(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Sl(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);kC(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=$C(this.elementShape,this.tensors,t);return zc(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);kC(this.elementShape,t.shape,"TensorList shape mismatch: "),Sl(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);kC(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=$C(this.elementShape,this.tensors,n);return 0===e.length?fi([],[0].concat(r)):$l(()=>{const t=e.map(e=>zc(this.tensors[e],r));return Nh(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);kC(this.elementShape,t,"TensorList shape mismatch: ");const n=$C(this.elementShape,this.tensors,t);return 0===this.size()?fi([],[0].concat(n)):$l(()=>{const e=this.tensors.map(e=>zc(e,n));return Uc(e,0)})}}function EC(e,t,n){const[r,a]=Lk("fusedOps",e,t,n),o="biasadd"===r,s="prelu"===a,i="fusedbatchnorm"===r,u=Lk("numArgs",e,t,n);if(o){if(s&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=Lk("strides",e,t,n),c=Gk(e,t,n),d=Lk("dataFormat",e,t,n).toUpperCase(),p=Lk("dilations",e,t,n),[h,f]=Lk("args",e,t,n);return{stride:l,pad:c,dataFormat:d,dilations:p,biasArg:h,preluArg:f,activationFunc:a,leakyreluAlpha:Lk("leakyreluAlpha",e,t,n)}}function AC(e,t,n){return{boxes:Lk("boxes",e,t,n),scores:Lk("scores",e,t,n),maxOutputSize:Lk("maxOutputSize",e,t,n),iouThreshold:Lk("iouThreshold",e,t,n),scoreThreshold:Lk("scoreThreshold",e,t,n),softNmsSigma:Lk("softNmsSigma",e,t,n)}}class RC{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Jl(0),this.tensorMap=new Map,Sl(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Jl(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),$l(()=>{const e=Mh(t),a=n.length,o=e.length;r.assert(a===o,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${o} elements.`);for(let t=0;t<a;t++){const r=n[t],a=e[t];Sl(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return $l(()=>{const e=[];for(let r=0;r<n.length;r++){const a=this.findWithDefault(n[r],t);e.push(a)}return Nh(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function DC(e,t,n,a){const o=((e,t,n)=>{switch(e.category){case"arithmetic":return $l(()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Bl(Lk("a",e,t,n),Lk("b",e,t,n))];case"AddN":return[yc(Lk("tensors",e,t,n))];case"FloorMod":case"Mod":return[wp(Lk("a",e,t,n),Lk("b",e,t,n))];case"Mul":return[Wl(Lk("a",e,t,n),Lk("b",e,t,n))];case"RealDiv":case"Div":return[zl(Lk("a",e,t,n),Lk("b",e,t,n))];case"DivNoNan":return[Cd(Lk("a",e,t,n),Lk("b",e,t,n))];case"FloorDiv":return[Vl(Lk("a",e,t,n),Lk("b",e,t,n))];case"Sub":return[oc(Lk("a",e,t,n),Lk("b",e,t,n))];case"Minimum":return[xp(Lk("a",e,t,n),Lk("b",e,t,n))];case"Maximum":return[dc(Lk("a",e,t,n),Lk("b",e,t,n))];case"Pow":return[ac(Lk("a",e,t,n),Lk("b",e,t,n))];case"SquaredDifference":return[wh(Lk("a",e,t,n),Lk("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return $l(()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[ic(Lk("x",e,t,n))];case"Acos":return[gc(Lk("x",e,t,n))];case"Acosh":return[bc(Lk("x",e,t,n))];case"Asin":return[Nc(Lk("x",e,t,n))];case"Asinh":return[kc(Lk("x",e,t,n))];case"Atan":return[Cc(Lk("x",e,t,n))];case"Atan2":return[$c(Lk("x",e,t,n),Lk("y",e,t,n))];case"Atanh":return[Ic(Lk("x",e,t,n))];case"Ceil":return[nd(Lk("x",e,t,n))];case"Complex":return[pi(Lk("real",e,t,n),Lk("imag",e,t,n))];case"Cos":return[md(Lk("x",e,t,n))];case"Cosh":return[gd(Lk("x",e,t,n))];case"Elu":return[Id(Lk("x",e,t,n))];case"Erf":return[Sd(Lk("x",e,t,n))];case"Exp":return[Td(Lk("x",e,t,n))];case"Expm1":return[Ad(Lk("x",e,t,n))];case"Floor":return[Od(Lk("x",e,t,n))];case"Log":return[qd(Lk("x",e,t,n))];case"Log1p":return[Kd(Lk("x",e,t,n))];case"Imag":return[Ld(Lk("x",e,t,n))];case"Neg":return[Xd(Lk("x",e,t,n))];case"Reciprocal":return[Xp(Lk("x",e,t,n))];case"Real":return[Kp(Lk("x",e,t,n))];case"Relu":return[Qp(Lk("x",e,t,n))];case"Round":return[rh(Lk("x",e,t,n))];case"Selu":return[oh(Lk("x",e,t,n))];case"Sigmoid":return[Hc(Lk("x",e,t,n))];case"Sin":return[lh(Lk("x",e,t,n))];case"Sign":return[uh(Lk("x",e,t,n))];case"Sinh":return[ch(Lk("x",e,t,n))];case"Softplus":return[Qd(Lk("x",e,t,n))];case"Sqrt":return[Gl(Lk("x",e,t,n))];case"Square":return[Ul(Lk("x",e,t,n))];case"Tanh":return[qc(Lk("x",e,t,n))];case"Tan":return[$h(Lk("x",e,t,n))];case"ClipByValue":return[rd(Lk("x",e,t,n),Lk("clipValueMin",e,t,n),Lk("clipValueMax",e,t,n))];case"Relu6":return[Yp(Lk("x",e,t,n))];case"Rsqrt":return[ah(Bk(e.inputNames[0],t,n))];case"Prod":return[Lp(Lk("x",e,t,n),Lk("axes",e,t,n))];case"LeakyRelu":return[Wd(Lk("x",e,t,n),Lk("alpha",e,t,n))];case"Prelu":return[Pp(Lk("x",e,t,n),Lk("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Lk("thenBranch",e,t,n),a=Lk("elseBranch",e,t,n),o=Lk("cond",e,t,n),s=Lk("args",e,t,n);return(await o.data())[0]?n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Lk("body",e,t,n),a=Lk("cond",e,t,n),o=Lk("args",e,t,n),s=await n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),i=o.map(e=>e.id);let u=await s[0].data();s.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()});let l=o;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const o=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await o[0].data(),o.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[Uk(Lk("pred",e,t,n))];case"Switch":{const r=Lk("pred",e,t,n);let a=Lk("data",e,t,n);return a.kept||(a=Uk(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==Bk(e,t,n));return r?[Uk(Bk(r,t,n))]:void 0}case"Enter":{const r=Lk("frameName",e,t,n),a=Lk("tensor",e,t,n);return n.enterFrame(r),[Uk(a)]}case"Exit":{const r=Lk("tensor",e,t,n);return n.exitFrame(),[Uk(r)]}case"NextIteration":{const r=Lk("tensor",e,t,n);return n.nextIteration(),[Uk(r)]}case"TensorArrayV3":{const r=Lk("size",e,t,n),a=Lk("dtype",e,t,n),o=Lk("elementShape",e,t,n),s=Lk("dynamicSize",e,t,n),i=Lk("clearAfterRead",e,t,n),u=Lk("identicalElementShapes",e,t,n),l=Lk("name",e,t,n),c=new SC(l,a,r,o,u,s,i);return n.addTensorArray(c),[c.idTensor,Jl(1)]}case"TensorArrayWriteV3":{const r=Lk("tensorArrayId",e,t,n),a=Lk("index",e,t,n),o=Lk("tensor",e,t,n),s=n.getTensorArray(r.id);return s.write(a,o),[s.idTensor]}case"TensorArrayReadV3":{const r=Lk("tensorArrayId",e,t,n),a=Lk("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Lk("tensorArrayId",e,t,n),a=Lk("indices",e,t,n),o=Lk("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,o)]}case"TensorArrayScatterV3":{const r=Lk("tensorArrayId",e,t,n),a=Lk("indices",e,t,n),o=Lk("tensor",e,t,n),s=n.getTensorArray(r.id);return s.scatter(a,o),[s.idTensor]}case"TensorArrayConcatV3":{const r=Lk("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),o=Lk("dtype",e,t,n);return[a.concat(o)]}case"TensorArraySplitV3":{const r=Lk("tensorArrayId",e,t,n),a=Lk("tensor",e,t,n),o=Lk("lengths",e,t,n),s=n.getTensorArray(r.id);return s.split(o,a),[s.idTensor]}case"TensorArraySizeV3":{const r=Lk("tensorArrayId",e,t,n);return[Jl(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Lk("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Lk("tensorListId",e,t,n),a=Lk("index",e,t,n),o=Lk("tensor",e,t,n),s=n.getTensorList(r.id);return s.setItem(a,o),[s.idTensor]}case"TensorListGetItem":{const r=Lk("tensorListId",e,t,n),a=Lk("index",e,t,n),o=Lk("elementShape",e,t,n),s=Lk("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,o,s)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Lk("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const o=new TC([],n,e.dtype,r),s=Mh(e,0);return t.forEach((e,t)=>{o.setItem(e,s[t])}),o}(Lk("tensor",e,t,n),r,Lk("elementShape",e,t,n),Lk("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Lk("elementShape",e,t,n),a=Lk("elementDType",e,t,n);let o;o="TensorListReserve"===e.op?"numElements":"maxNumElements";const s=function(e,t,n){return new TC([],e,t,n)}(r,a,Lk(o,e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListGather":{const r=Lk("tensorListId",e,t,n),a=Lk("indices",e,t,n),o=Lk("elementShape",e,t,n),s=Lk("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,s,o)]}case"TensorListStack":{const r=Lk("tensorListId",e,t,n),a=Lk("elementShape",e,t,n),o=Lk("elementDType",e,t,n),s=Lk("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,o,s)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);kC(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Mh(e);return new TC(a,t,r)}(Lk("tensor",e,t,n),Lk("elementShape",e,t,n),Lk("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Lk("tensorListId",e,t,n),a=n.getTensorList(r.id),o=Lk("dtype",e,t,n),s=Lk("elementShape",e,t,n);return[a.concat(o,s)]}case"TensorListPushBack":{const r=Lk("tensorListId",e,t,n),a=Lk("tensor",e,t,n),o=n.getTensorList(r.id);return o.pushBack(a),[o.idTensor]}case"TensorListPopBack":{const r=Lk("tensorListId",e,t,n),a=Lk("elementShape",e,t,n),o=Lk("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,o)]}case"TensorListSplit":{const r=Lk("tensor",e,t,n),a=Lk("elementShape",e,t,n),o=function(e,t,n){let r=0;const a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const o=IC(e.shape.slice(1),n),s=0===r?0:e.size/r,i=$l(()=>{const n=[];e=zc(e,[1,r,s]);for(let r=0;r<t.length;++r)n[r]=zc(jc(e,[0,0===r?0:a[r-1],0],[1,t[r],s]),o);return e.dispose(),n}),u=new TC([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)u.setItem(l,i[l]);return u}(r,Lk("lengths",e,t,n),a);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return $l(()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=Lk("stride",e,t,n),a=Lk("pad",e,t,n),o=Lk("dataFormat",e,t,n).toUpperCase(),s=Lk("dilation",e,t,n);return[ld(Lk("x",e,t,n),Lk("filter",e,t,n),r,a,o,s)]}case"Conv2D":{const r=Lk("strides",e,t,n),a=Gk(e,t,n),o=Lk("dataFormat",e,t,n).toUpperCase(),s=Lk("dilations",e,t,n);return[ud(Lk("x",e,t,n),Lk("filter",e,t,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:o,dilations:s,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:c}=EC(e,t,n);return[f.conv2d({x:Lk("x",e,t,n),filter:Lk("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[s[1],s[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:o,dilations:s,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:c}=EC(e,t,n);return[f.depthwiseConv2d({x:Lk("x",e,t,n),filter:Lk("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[s[1],s[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Lk("outputShape",e,t,n),a=Lk("strides",e,t,n),o=Gk(e,t,n);return[dd(Lk("x",e,t,n),Lk("filter",e,t,n),r,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Lk("strides",e,t,n),a=Gk(e,t,n),o=Lk("dilations",e,t,n),s=Lk("dataFormat",e,t,n).toUpperCase();return[vd(Lk("input",e,t,n),Lk("filter",e,t,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"Conv3D":{const r=Lk("strides",e,t,n),a=Lk("pad",e,t,n),o=Lk("dataFormat",e,t,n).toUpperCase(),s=Lk("dilations",e,t,n);return[pd(Lk("x",e,t,n),Lk("filter",e,t,n),[r[1],r[2],r[3]],a,o,[s[1],s[2],s[3]])]}case"AvgPool":{const r=Lk("strides",e,t,n),a=Lk("pad",e,t,n),o=Lk("kernelSize",e,t,n);return[Wc(Lk("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Lk("strides",e,t,n),a=Lk("pad",e,t,n),o=Lk("kernelSize",e,t,n);return[fp(Lk("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Lk("strides",e,t,n),a=Lk("pad",e,t,n),o=Lk("kernelSize",e,t,n),s=Lk("includeBatchInIndex",e,t,n),{result:i,indexes:u}=gp(Lk("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a,s);return[i,u]}case"AvgPool3D":{const r=Lk("strides",e,t,n),a=Lk("pad",e,t,n),o=Lk("kernelSize",e,t,n);return[Gc(Lk("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Lk("strides",e,t,n),a=Lk("pad",e,t,n),o=Lk("kernelSize",e,t,n);return[mp(Lk("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Lk("strides",e,t,n),a=Lk("pad",e,t,n),o=Lk("dilations",e,t,n),s=r[1],i=r[2],u=o[1],l=o[2];return[_d(Lk("x",e,t,n),Lk("filter",e,t,n),[s,i],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return $l(()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=Lk("shape",e,t,n),a=Lk("dtype",e,t,n);return[nc(r,Lk("value",e,t,n),a)]}case"LinSpace":return[Hd(Lk("start",e,t,n),Lk("stop",e,t,n),Lk("num",e,t,n))];case"Multinomial":{const r=Lk("logits",e,t,n),a=Lk("numSamples",e,t,n),o=Lk("seed",e,t,n);return[kp(r,a,o)]}case"OneHot":{const r=Lk("indices",e,t,n),a=Lk("depth",e,t,n),o=Lk("onValue",e,t,n),s=Lk("offValue",e,t,n);return[Su(r,a,o,s)]}case"Ones":return[Ip(Lk("shape",e,t,n),Lk("dtype",e,t,n))];case"OnesLike":return[Sp(Lk("x",e,t,n))];case"RandomUniform":return[jp(Lk("shape",e,t,n),Lk("minval",e,t,n),Lk("maxval",e,t,n),Lk("dtype",e,t,n))];case"Range":return[qp(Lk("start",e,t,n),Lk("stop",e,t,n),Lk("step",e,t,n),Lk("dtype",e,t,n))];case"TruncatedNormal":{const r=Lk("shape",e,t,n),a=Lk("mean",e,t,n),o=Lk("stdDev",e,t,n),s=Lk("seed",e,t,n);return[Dh(r,a,o,Lk("dtype",e,t,n),s)]}case"Zeros":return[$p(Lk("shape",e,t,n),Lk("dtype",e,t,n))];case"ZerosLike":return[Hl(Lk("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i,softNmsSigma:u}=AC(e,t,n),l=await qf.nonMaxSuppressionWithScoreAsync(r,a,o,s,i,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i}=AC(e,t,n),u=Lk("padToMaxOutputSize",e,t,n),l=await qf.nonMaxSuppressionPaddedAsync(r,a,o,s,i,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i}=AC(e,t,n);return[await qf.nonMaxSuppressionAsync(r,a,o,s,i)]}case"Where":{const r=iu(Lk("condition",e,t,n),"bool"),a=[await Bh(r)];return r.dispose(),a}case"ListDiff":return ih(Lk("x",e,t,n),Lk("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return $l(()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=Lk("x",e,t,n),a=Lk("k",e,t,n),o=Lk("sorted",e,t,n),s=Rh(r,a,o);return[s.values,s.indices]}case"Unique":{const r=Lk("x",e,t,n),a=Oh(r);return[a.values,a.indices]}case"UniqueV2":{const r=Lk("x",e,t,n),a=Lk("axis",e,t,n),o=Oh(r,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return $l(()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Lk("images",e,t,n),a=Lk("size",e,t,n),o=Lk("alignCorners",e,t,n),s=Lk("halfPixelCenters",e,t,n);return[qf.resizeBilinear(r,[a[0],a[1]],o,s)]}case"ResizeNearestNeighbor":{const r=Lk("images",e,t,n),a=Lk("size",e,t,n),o=Lk("alignCorners",e,t,n),s=Lk("halfPixelCenters",e,t,n);return[qf.resizeNearestNeighbor(r,[a[0],a[1]],o,s)]}case"CropAndResize":{const r=Lk("image",e,t,n),a=Lk("boxes",e,t,n),o=Lk("boxInd",e,t,n),s=Lk("cropSize",e,t,n),i=Lk("method",e,t,n),u=Lk("extrapolationValue",e,t,n);return[qf.cropAndResize(r,a,o,s,i,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return $l(()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Lk("default",e,t,n);return[Bk(e.name,t,n)||r];case"Placeholder":return[Bk(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[Uk(Lk("x",e,t,n))];case"IdentityN":return Lk("x",e,t,n).map(e=>Uk(e));case"Snapshot":return[Uk(Lk("x",e,t,n))];case"Shape":return[Ih(Lk("x",e,t,n).shape,"int32")];case"ShapeN":return Lk("x",e,t,n).map(e=>Ih(e.shape));case"Size":return[Jl(Lk("x",e,t,n).size,"int32")];case"Rank":return[Jl(Lk("x",e,t,n).rank,"int32")];case"NoOp":return[Jl(1)];case"Print":const a=Lk("x",e,t,n),o=Lk("data",e,t,n),s=Lk("message",e,t,n),i=Lk("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(s);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,i));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return $l(()=>((e,t,n)=>{switch(e.op){case"Equal":return[Nd(Lk("a",e,t,n),Lk("b",e,t,n))];case"NotEqual":return[Cp(Lk("a",e,t,n),Lk("b",e,t,n))];case"Greater":return[Md(Lk("a",e,t,n),Lk("b",e,t,n))];case"GreaterEqual":return[Pd(Lk("a",e,t,n),Lk("b",e,t,n))];case"Less":return[Gd(Lk("a",e,t,n),Lk("b",e,t,n))];case"LessEqual":return[Ud(Lk("a",e,t,n),Lk("b",e,t,n))];case"LogicalAnd":return[cp(Lk("a",e,t,n),Lk("b",e,t,n))];case"LogicalNot":return[dp(Lk("a",e,t,n))];case"LogicalOr":return[pp(Lk("a",e,t,n),Lk("b",e,t,n))];case"Select":case"SelectV2":return[kd(Lk("condition",e,t,n),Lk("a",e,t,n),Lk("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return $l(()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Iu(Lk("a",e,t,n),Lk("b",e,t,n),Lk("transposeA",e,t,n),Lk("transposeB",e,t,n))];case"Transpose":return[Tu(Lk("x",e,t,n),Lk("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Lk("fusedOps",e,t,n),o="biasadd"===r,s="prelu"===a,i=Lk("numArgs",e,t,n),u=Lk("leakyreluAlpha",e,t,n);if(o){if(s&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=Lk("args",e,t,n);return[f.matMul({a:Lk("a",e,t,n),b:Lk("b",e,t,n),transposeA:Lk("transposeA",e,t,n),transposeB:Lk("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return $l(()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Qc(Lk("x",e,t,n),Lk("mean",e,t,n),Lk("variance",e,t,n),Lk("offset",e,t,n),Lk("scale",e,t,n),Lk("epsilon",e,t,n))];case"LRN":return[jd(Lk("x",e,t,n),Lk("radius",e,t,n),Lk("bias",e,t,n),Lk("alpha",e,t,n),Lk("beta",e,t,n))];case"Softmax":return[mh(Lk("x",e,t,n))];case"LogSoftmax":return[ep(Lk("x",e,t,n))];case"SparseToDense":return[Hh(Lk("sparseIndices",e,t,n),Lk("outputShape",e,t,n),Lk("sparseValues",e,t,n),Lk("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return $l(()=>((e,t,n)=>{switch(e.op){case"Max":{const r=Lk("axis",e,t,n),a=Lk("keepDims",e,t,n);return[Zd(Lk("x",e,t,n),r,a)]}case"Mean":{const r=Lk("axis",e,t,n),a=Lk("keepDims",e,t,n);return[bp(Lk("x",e,t,n),r,a)]}case"Min":{const r=Lk("axis",e,t,n),a=Lk("keepDims",e,t,n);return[yp(Lk("x",e,t,n),r,a)]}case"Sum":{const r=Lk("axis",e,t,n),a=Lk("keepDims",e,t,n);return[Jd(Lk("x",e,t,n),r,a)]}case"All":{const r=Lk("axis",e,t,n),a=Lk("keepDims",e,t,n);return[xc(Lk("x",e,t,n),r,a)]}case"Any":{const r=Lk("axis",e,t,n),a=Lk("keepDims",e,t,n);return[vc(Lk("x",e,t,n),r,a)]}case"ArgMax":{const r=Lk("axis",e,t,n);return[wc(Lk("x",e,t,n),r)]}case"ArgMin":{const r=Lk("axis",e,t,n);return[_c(Lk("x",e,t,n),r)]}case"Prod":{const r=Lk("axis",e,t,n),a=Lk("keepDims",e,t,n);return[Lp(Lk("x",e,t,n),r,a)]}case"Cumsum":{const r=Lk("axis",e,t,n),a=Lk("exclusive",e,t,n),o=Lk("reverse",e,t,n);return[bd(Lk("x",e,t,n),r,a,o)]}case"Bincount":const r=Lk("x",e,t,n),a=Lk("weights",e,t,n),o=Lk("size",e,t,n);return[ed(r,a,o)];case"DenseBincount":{const r=Lk("x",e,t,n),a=Lk("weights",e,t,n),o=Lk("size",e,t,n),s=Lk("binaryOutput",e,t,n);return[yd(r,a,o,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return $l(()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Lk("n",e,t,n),a=Lk("axis",e,t,n);let o=Lk("tensors",e,t,n);return o=o.slice(0,r),[Uc(o,a)]}case"Gather":{const r=Lk("x",e,t,n),a=Lk("indices",e,t,n);return[Fd(r,iu(a,"int32"),0)]}case"GatherV2":{const r=Lk("axis",e,t,n),a=Lk("batchDims",e,t,n),o=Lk("x",e,t,n),s=Lk("indices",e,t,n);return[Fd(o,iu(s,"int32"),r,a)]}case"Reverse":{const r=Lk("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const o=Lk("x",e,t,n);return[Zp(o,a)]}case"ReverseV2":{const r=Lk("axis",e,t,n),a=Lk("x",e,t,n);return[Zp(a,r)]}case"Slice":{const r=Lk("begin",e,t,n),a=Lk("size",e,t,n);return[jc(Lk("x",e,t,n),r,a)]}case"StridedSlice":{const r=Lk("begin",e,t,n),a=Lk("end",e,t,n),o=Lk("strides",e,t,n),s=Lk("beginMask",e,t,n),i=Lk("endMask",e,t,n),u=Lk("ellipsisMask",e,t,n),l=Lk("newAxisMask",e,t,n),c=Lk("shrinkAxisMask",e,t,n),d=Lk("x",e,t,n);return[Ch(d,r,a,o,s,i,u,l,c)]}case"Pack":return $l(()=>{const a=Lk("axis",e,t,n),o=Lk("tensors",e,t,n),s=o[0].shape,i=_h(o[0]).shape,u=o.map(e=>{const t=r.arraysEqual(e.shape,s);if(!t&&!r.arraysEqual(_h(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:zc(e,s)});return[Nh(u,a)]});case"Unpack":{const r=Lk("axis",e,t,n),a=Lk("tensor",e,t,n);return Mh(a,r)}case"Tile":{const r=Lk("reps",e,t,n);return[Rd(Lk("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Lk("axis",e,t,n),a=Lk("numOrSizeSplits",e,t,n),o=Lk("x",e,t,n);return xh(o,a,r)}case"ScatterNd":{const r=Lk("indices",e,t,n),a=Lk("values",e,t,n),o=Lk("shape",e,t,n);return[Uh(r,a,o)]}case"GatherNd":{const r=Lk("x",e,t,n),a=Lk("indices",e,t,n);return[jh(r,a)]}case"SparseToDense":{const r=Lk("sparseIndices",e,t,n),a=Lk("outputShape",e,t,n),o=Lk("sparseValues",e,t,n),s=Lk("defaultValue",e,t,n);return[Hh(r,o,a,o.dtype===s.dtype?s:iu(s,o.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return $l(()=>((e,t,n)=>{switch(e.op){case"FFT":return[gh(Lk("x",e,t,n))];case"IFFT":return[bh(Lk("x",e,t,n))];case"RFFT":return[vh(Lk("x",e,t,n))];case"IRFFT":return[yh(Lk("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return $l(()=>((e,t,n)=>{switch(e.op){case"Cast":return[iu(Lk("x",e,t,n),Lk("dtype",e,t,n))];case"ExpandDims":{const r=Lk("axis",e,t,n);return[Ed(Lk("x",e,t,n),r)]}case"Squeeze":{const r=Lk("axis",e,t,n);return[_h(Lk("x",e,t,n),r)]}case"Reshape":return[zc(Lk("x",e,t,n),Lk("shape",e,t,n))];case"MirrorPad":return[vp(Lk("x",e,t,n),Lk("padding",e,t,n),Lk("mode",e,t,n))];case"PadV2":case"Pad":return[Ep(Lk("x",e,t,n),Lk("padding",e,t,n),Lk("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Lk("blockShape",e,t,n),a=Lk("paddings",e,t,n);return[Fp(Lk("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Lk("blockShape",e,t,n),a=Lk("crops",e,t,n);return[Xc(Lk("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Lk("blockSize",e,t,n),a=Lk("dataFormat",e,t,n).toUpperCase();return[xd(Lk("x",e,t,n),r,a)]}case"BroadcastTo":return[td(Lk("x",e,t,n),Lk("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=Lk("keyDType",e,t,n),o=Lk("valueDType",e,t,n),s=new RC(a,o);return r.addHashTable(e.name,s),[s.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Lk("tableHandle",e,t,n,r),o=Lk("keys",e,t,n),s=Lk("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(o,s)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Lk("tableHandle",e,t,n,r),o=Lk("keys",e,t,n),s=Lk("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(o,s)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Lk("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,a);case"custom":const o=Pk(e.op);if(o&&o.customExecutor)return o.customExecutor(new NC(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return r.isPromise(o)?o.then(e=>[].concat(e)):[].concat(o)}class OC{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function FC(e,t,n,r){const a=new Set,o=[];let s=null,i=null;const u=new Set,l=Object.keys(e).map(e=>Wk(e)[0]);let c=[];null!=r&&(c=r.map(e=>Wk(e.name)[0]));const d=[...t];for(;d.length>0;){const e=d.pop();(BC(e)||VC(e)||zC(e))&&null==s&&(s=e,i=s.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),d.push(e))}):o.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:o,dynamicNode:s,syncInputs:i}}const MC=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],PC=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],LC=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function BC(e){return MC.indexOf(e.op)>=0}function VC(e){return PC.indexOf(e.op)>=0}function zC(e){return LC.indexOf(e.op)>=0}class WC{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new WC(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=FC(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:o}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,o=[],s=Object.keys(a).map(e=>Wk(e)[0]).map(t=>e.nodes[t]),i=e.initNodes;s.forEach(e=>{r.has(e.name)&&o.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&o.push(e)}),null!=i&&i.forEach(e=>{r.has(e.name)&&o.push(e)});const u=new Set,l=[];for(;o.length>0;){const e=o.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach(e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>u.has(e.name))&&o.push(e)})}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map(e=>this.graph.nodes[Wk(e)[0]]),o=t.map(e=>Wk(e)[0]);let s=o.map(e=>this.graph.nodes[e]);0===s.length&&(s=this._outputs);const i=this.getCompilationKey(a,s);let u=this.compiledMap.get(i);null==u&&(u=this.compile(e,s),this.compiledMap.set(i,u));const l={},c={};return $l(()=>{const n=new OC(this.weightMap,l,c,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Wk(t),o=[];o[r]=e[t],a[n]=o});const s=this.getFrozenTensorIds(a),i={};for(let e=0;e<u.length;e++){const t=u[e];if(!a[t.name]){const e=DC(t,a,n,this._resourceManager);if(r.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);a[t.name]=e,this.checkTensorForDisposal(t.name,t,a,n,s,o,i)}}return null==this.parent&&n.dispose(s),t.map(e=>Bk(e,a,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,o,s){"control"!==t.category&&-1===o.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(s[e.id]=(s[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=function(e,t,n){return t[zk(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!a.has(e.id)){const t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const o=new OC(this.weightMap,r,a,this.functionExecutorMap),s=await this.executeWithControlFlow(e,o,t,n),i=t.map(e=>Bk(e,s,o)),u=i.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),c=new Set([...u,...l,...this.weightIds]);return Object.keys(s).forEach(e=>{s[e].forEach(e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()})}),null==this.parent&&o.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),o=a.map(e=>this.graph.nodes[Wk(e)[0]]),s=n.map(e=>Wk(e)[0]);let i=s.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:d}=FC(e,i,this.weightMap,this._initNodes),p=[...o,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Wk(t),a=[];a[r]=e[t],h[n]=a});const f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){const e=this.processStack(o,p,t,h,g,m,s,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=i.filter(e=>!BC(e)&&!Bk(e.name,h,t)).map(e=>e.name);if(b.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return h}processStack(e,t,n,a,o,s,i,u,l){const c=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&Lk("isConstant",e.node,a,n)&&([d]=Vk(e.node.name,n)),null==a[e.node.name]){const p=DC(e.node,a,n,this._resourceManager);d||([d]=Vk(e.node.name,n));const h=n.currentContext;r.isPromise(p)?c.push(p.then(r=>(a[d]=r,n.currentContext=h,this.checkTensorForDisposal(d,e.node,a,n,s,i,u),this.processChildNodes(e.node,t,n,a,o,l),r))):(a[d]=p,this.checkTensorForDisposal(d,e.node,a,n,s,i,u),this.processChildNodes(e.node,t,n,a,o,l))}else this.processChildNodes(e.node,t,n,a,o,l)}return c}processChildNodes(e,t,n,r,a,o){e.children.forEach(e=>{const[s]=Vk(e.name,n);!a[s]&&o.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!Bk(e,r,n))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!Bk(e,r,n))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[a]=Wk(t),o=this.graph.nodes[a];if(o.attrParams.shape&&o.attrParams.shape.value){const e=o.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);r.assert(t,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&r.assert(n.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=Wk(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e,{})}checkOutputs(e){e.forEach(e=>{const[t]=Wk(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class GC{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class UC{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new GC}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=s.browserHTTPRequest(e,this.loadOptions);else{const t=s.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(s.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=s.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new WC(uC.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=uC.Instance.transformGraph(e.modelInitializer);this.initializer=new WC(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=s.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Fs||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function HC(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new UC(e,t);return await n.load(),n}var jC=function(e,t){return(jC=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function qC(e,t){function n(){this.constructor=e}jC(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var KC=function(){return(KC=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function XC(e,t,n,r){return new(n||(n=Promise))(function(a,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function i(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){e.done?a(e.value):new n(function(t){t(e.value)}).then(s,i)}u((r=r.apply(e,t||[])).next())})}function QC(e,t){var n,r,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}var YC=function(){function e(e,t){this.model=e,this.outputStride=t;var n=this.model.inputs[0].shape;r.assert(-1===n[1]&&-1===n[2],function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"})}return e.prototype.predict=function(e){var t=this;return $l(function(){var n=t.preprocessInput(iu(e,"float32")),r=Ed(n,0),a=t.model.predict(r).map(function(e){return _h(e,[0])}),o=t.nameOutputResults(a);return{heatmapScores:Hc(o.heatmap),offsets:o.offsets,displacementFwd:o.displacementFwd,displacementBwd:o.displacementBwd}})},e.prototype.dispose=function(){this.model.dispose()},e}(),ZC=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return qC(t,e),t.prototype.preprocessInput=function(e){return $l(function(){return oc(zl(e,127.5),1)})},t.prototype.nameOutputResults=function(e){return{offsets:e[0],heatmap:e[1],displacementFwd:e[2],displacementBwd:e[3]}},t}(YC);function JC(e){return Math.floor(e/2)}var e$=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(JC(e),e);)this.exchange(e,JC(e)),e=JC(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function t$(e,t,n,r,a,o){for(var s=o.shape,i=s[0],u=s[1],l=!0,c=Math.max(n-a,0),d=Math.min(n+a+1,i),p=c;p<d;++p){for(var h=Math.max(r-a,0),f=Math.min(r+a+1,u),m=h;m<f;++m)if(o.get(p,m,e)>t){l=!1;break}if(!l)break}return l}var n$=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],r$=n$.length,a$=n$.reduce(function(e,t,n){return e[t]=n,e},{}),o$=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map(function(e){return[a$[e[0]],a$[e[1]]]});function s$(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+r$)}}function i$(e,t,n){var r=s$(e.heatmapY,e.heatmapX,e.id,n);return{x:e.heatmapX*t+r.x,y:e.heatmapY*t+r.y}}function u$(e,t,n){return e<t?t:e>n?n:e}function l$(e,t){return{x:e.x+t.x,y:e.y+t.y}}var c$=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map(function(e){return[a$[e[0]],a$[e[1]]]}),d$=c$.map(function(e){return e[1]}),p$=c$.map(function(e){return e[0]});function h$(e,t,n,r){return{y:u$(Math.round(e.y/t),0,n-1),x:u$(Math.round(e.x/t),0,r-1)}}function f$(e,t,n,r,a,o,s,i){void 0===i&&(i=2);for(var u=r.shape,l=u[0],c=u[1],d=function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,h$(t.position,o,l,c),s),p=l$(t.position,d),h=0;h<i;h++){var f=h$(p,o,l,c),m=s$(f.y,f.x,n,a);p=l$({x:f.x*o,y:f.y*o},{x:m.x,y:m.y})}var g=h$(p,o,l,c),b=r.get(g.y,g.x,n);return{position:p,part:n$[n],score:b}}function m$(e,t,n,r,a,o){var s=d$.length,i=new Array(t.shape[2]),u=e.part,l=e.score,c=i$(u,r,n);i[u.id]={score:l,part:n$[u.id],position:c};for(var d=s-1;d>=0;--d){var p=d$[d],h=p$[d];i[p]&&!i[h]&&(i[h]=f$(d,i[p],h,t,n,r,o))}for(d=0;d<s;++d)h=d$[d],i[p=p$[d]]&&!i[h]&&(i[h]=f$(d,i[p],h,t,n,r,a));return i}function g$(e,t,n,r){var a=n.x,o=n.y;return e.some(function(e){var n=e.keypoints[r].position;return function(e,t,n,r){var a=n-e,o=r-t;return a*a+o*o}(o,a,n.y,n.x)<=t})}function b$(e,t,n){return n.reduce(function(n,r,a){var o=r.score;return g$(e,t,r.position,a)||(n+=o),n},0)/n.length}function y$(e,t,n,r,a,o,s,i){void 0===s&&(s=.5),void 0===i&&(i=20);for(var u=[],l=function(e,t,n){for(var r=n.shape,a=r[0],o=r[1],s=r[2],i=new e$(a*o*s,function(e){return e.score}),u=0;u<a;++u)for(var l=0;l<o;++l)for(var c=0;c<s;++c){var d=n.get(u,l,c);d<e||t$(c,d,u,l,1,n)&&i.enqueue({score:d,part:{heatmapY:u,heatmapX:l,id:c}})}return i}(s,0,e),c=i*i;u.length<o&&!l.empty();){var d=l.dequeue();if(!g$(u,c,i$(d.part,a,t),d.part.id)){var p=m$(d,e,t,a,n,r),h=b$(u,c,p);u.push({keypoints:p,score:h})}}return u}function x$(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+r$)}}function v$(e,t,n){return $l(function(){var r=function(e,t){for(var n=[],r=0;r<r$;r++){var a=x$(e.get(r,0).valueOf(),e.get(r,1).valueOf(),r,t),o=a.x;n.push(a.y),n.push(o)}return Sh(n,[r$,2])}(e,n);return Bl(iu(Wl(e.toTensor(),Jl(t,"int32")),"float32"),r)})}function w$(e,t,n){return XC(this,void 0,void 0,function(){var r,a,o,s,i,u,l,c,d;return QC(this,function(p){switch(p.label){case 0:return r=0,a=function(e){var t=e.shape,n=t[0],r=t[1],a=t[2];return $l(function(){var t=zc(e,[n*r,a]),o=wc(t,0),s=Ed(zl(o,Jl(r,"int32")),1),i=Ed(function(e,t){return $l(function(){var n=zl(e,Jl(t,"int32"));return oc(e,Wl(n,Jl(t,"int32")))})}(o,r),1);return Uc([s,i],1)})}(e),[4,Promise.all([e.buffer(),t.buffer(),a.buffer()])];case 1:return o=p.sent(),s=o[0],[4,(u=v$(i=o[2],n,o[1])).buffer()];case 2:return l=p.sent(),c=Array.from(function(e,t){for(var n=t.shape[0],r=new Float32Array(n),a=0;a<n;a++){var o=t.get(a,0),s=t.get(a,1);r[a]=e.get(o,s,a)}return r}(s,i)),d=c.map(function(e,t){return r+=e,{position:{y:l.get(t,0),x:l.get(t,1)},part:n$[t],score:e}}),a.dispose(),u.dispose(),[2,{keypoints:d,score:r/d.length}]}})})}var _$="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",N$="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/",k$=[-123.15,-115.9,-103.06],C$=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return qC(t,e),t.prototype.preprocessInput=function(e){return Bl(e,k$)},t.prototype.nameOutputResults=function(e){return{offsets:e[2],heatmap:e[3],displacementFwd:e[0],displacementBwd:e[1]}},t}(YC),$$=Number.NEGATIVE_INFINITY,I$=Number.POSITIVE_INFINITY;function S$(e){return XC(this,void 0,void 0,function(){return QC(this,function(t){return[2,Promise.all(e.map(function(e){return e.buffer()}))]})})}function T$(e,t){return D$(e,t)?e:Math.floor(e/t)*t+1}function E$(e){r.assert("number"==typeof e||"object"==typeof e,function(){return"Invalid inputResolution "+e+". Should be a number or an object with width and height"}),"object"==typeof e&&(r.assert("number"==typeof e.width,function(){return"inputResolution.width has a value of "+e.width+" which is invalid; it must be a number"}),r.assert("number"==typeof e.height,function(){return"inputResolution.height has a value of "+e.height+" which is invalid; it must be a number"}))}function A$(e,t){return E$(e),"object"==typeof e?[T$(e.height,t),T$(e.width,t)]:[T$(e,t),T$(e,t)]}var R$=[8,16,32];function D$(e,t){return(e-1)%t==0}function O$(e){return e instanceof Fs?[e.shape[0],e.shape[1]]:[e.height,e.width]}function F$(e,t){var n=t[0],r=t[1],a=O$(e),o=a[0],s=a[1],i=r/n,l=[0,0,0,0],c=l[0],d=l[1],p=l[2],h=l[3];return s/o<i?(c=0,d=0,p=Math.round(.5*(i*o-s)),h=Math.round(.5*(i*o-s))):(c=Math.round(.5*(1/i*s-o)),d=Math.round(.5*(1/i*s-o)),p=0,h=0),{resized:$l(function(){var t=function(e){return e instanceof Fs?e:u.fromPixels(e)}(e);return t=Dp(t,[[c,d],[p,h],[0,0]]),qf.resizeBilinear(t,[n,r])}),padding:{top:c,left:p,right:h,bottom:d}}}function M$(e,t,n,r,a){var o=t[1],s=function(e,t,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),1===n&&1===t&&0===r&&0===a?e:e.map(function(e){return function(e,t,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),{score:e.score,keypoints:e.keypoints.map(function(e){var o=e.position;return{score:e.score,part:e.part,position:{x:o.x*n+a,y:o.y*t+r}}})}}(e,t,n,r,a)})}(e,(t[0]+r.top+r.bottom)/n[0],(o+r.left+r.right)/n[1],-r.top,-r.left);return a?function(e,t){return t<=0?e:e.map(function(e){return function(e,t){return{score:e.score,keypoints:e.keypoints.map(function(e){var n=e.position;return{score:e.score,part:e.part,position:{x:t-1-n.x,y:n.y}}})}}(e,t)})}(s,o):s}var P$={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:257},L$=["MobileNetV1","ResNet50"],B$={MobileNetV1:[8,16,32],ResNet50:[32,16]},V$={MobileNetV1:[.5,.75,1],ResNet50:[1]},z$=[1,2,4],W$={flipHorizontal:!1},G$={flipHorizontal:!1,maxDetections:5,scoreThreshold:.5,nmsRadius:20},U$=function(){function e(e,t){(function(e){r.assert("number"==typeof e,function(){return"outputStride is not a number"}),r.assert(R$.indexOf(e)>=0,function(){return"outputStride of "+e+" is invalid. It must be either 8, 16, or 32"})})(e.outputStride),function(e,t){r.assert("number"==typeof e[0]&&"number"==typeof e[1],function(){return"both resolution values must be a number but had values "+e}),r.assert(D$(e[0],t),function(){return"height of "+e[0]+" is invalid for output stride "+t+"."}),r.assert(D$(e[1],t),function(){return"width of "+e[1]+" is invalid for output stride "+t+"."})}(t,e.outputStride),this.baseModel=e,this.inputResolution=t}return e.prototype.estimateMultiplePoses=function(e,t){return void 0===t&&(t=G$),XC(this,void 0,void 0,function(){var n,r,a,o,s,i,u,l,c,d,p,h,f,m,g,b,y;return QC(this,function(x){switch(x.label){case 0:return n=KC({},G$,t),function(e){var t=e.maxDetections,n=e.scoreThreshold,r=e.nmsRadius;if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(n<0||n>1)throw new Error("Invalid scoreThreshold "+n+". Should be in range [0.0, 1.0]");if(r<=0)throw new Error("Invalid nmsRadius "+r+".")}(t),r=this.baseModel.outputStride,a=this.inputResolution,o=O$(e),s=o[0],i=o[1],u=F$(e,a),c=u.padding,d=this.baseModel.predict(l=u.resized),[4,S$([p=d.heatmapScores,h=d.offsets,f=d.displacementFwd,m=d.displacementBwd])];case 1:return[4,y$((g=x.sent())[0],g[1],g[2],g[3],r,n.maxDetections,n.scoreThreshold,n.nmsRadius)];case 2:return b=x.sent(),y=M$(b,[s,i],a,c,n.flipHorizontal),p.dispose(),h.dispose(),f.dispose(),m.dispose(),l.dispose(),[2,y]}})})},e.prototype.estimateSinglePose=function(e,t){return void 0===t&&(t=W$),XC(this,void 0,void 0,function(){var n,r,a,o,s,i,u,l,c,d,p,h,f,m,g,b;return QC(this,function(y){switch(y.label){case 0:return n=KC({},W$,t),r=this.baseModel.outputStride,a=this.inputResolution,o=O$(e),s=o[0],i=o[1],u=F$(e,a),c=u.padding,d=this.baseModel.predict(l=u.resized),f=d.displacementFwd,m=d.displacementBwd,[4,w$(p=d.heatmapScores,h=d.offsets,r)];case 1:return g=y.sent(),b=M$([g],[s,i],a,c,n.flipHorizontal),p.dispose(),h.dispose(),f.dispose(),m.dispose(),l.dispose(),[2,b[0]]}})})},e.prototype.estimatePoses=function(e,t){return XC(this,void 0,void 0,function(){return QC(this,function(n){switch(n.label){case 0:return"single-person"!==t.decodingMethod?[3,2]:[4,this.estimateSinglePose(e,t)];case 1:return[2,[n.sent()]];case 2:return[2,this.estimateMultiplePoses(e,t)]}})})},e.prototype.dispose=function(){this.baseModel.dispose()},e}();function H$(e){return XC(this,void 0,void 0,function(){var t,n,r,a,o,s,i;return QC(this,function(u){switch(u.label){case 0:if(t=e.outputStride,n=e.quantBytes,r=e.multiplier,null==y)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return a=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},a="model-stride"+e+".json";return 4===n?_$+"float/"+r[t]+"/"+a:_$+"quant"+n+"/"+r[t]+"/"+a}(t,r,n),[4,HC(e.modelUrl||a)];case 1:return o=u.sent(),s=new ZC(o,t),i=A$(e.inputResolution,s.outputStride),[2,new U$(s,i)]}})})}function j$(e){return XC(this,void 0,void 0,function(){var t,n,r,a,o,s;return QC(this,function(i){switch(i.label){case 0:if(t=e.outputStride,n=e.quantBytes,null==y)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return r=function(e,t){var n="model-stride"+e+".json";return 4===t?N$+"float/"+n:N$+"quant"+t+"/"+n}(t,n),[4,HC(e.modelUrl||r)];case 1:return a=i.sent(),o=new C$(a,t),s=A$(e.inputResolution,o.outputStride),[2,new U$(o,s)]}})})}let q$=(()=>{class e{constructor(){}getNet(){return on(this,void 0,void 0,function*(){return function(e){return void 0===e&&(e=P$),XC(this,void 0,void 0,function(){return QC(this,function(t){return"ResNet50"===(e=function(e){if(null==(e=e||P$).architecture&&(e.architecture="MobileNetV1"),L$.indexOf(e.architecture)<0)throw new Error("Invalid architecture "+e.architecture+". Should be one of "+L$);if(null==e.inputResolution&&(e.inputResolution=257),E$(e.inputResolution),null==e.outputStride&&(e.outputStride=16),B$[e.architecture].indexOf(e.outputStride)<0)throw new Error("Invalid outputStride "+e.outputStride+". Should be one of "+B$[e.architecture]+" for architecture "+e.architecture+".");if(null==e.multiplier&&(e.multiplier=1),V$[e.architecture].indexOf(e.multiplier)<0)throw new Error("Invalid multiplier "+e.multiplier+". Should be one of "+V$[e.architecture]+" for architecture "+e.architecture+".");if(null==e.quantBytes&&(e.quantBytes=4),z$.indexOf(e.quantBytes)<0)throw new Error("Invalid quantBytes "+e.quantBytes+". Should be one of "+z$+" for architecture "+e.architecture+".");if("MobileNetV1"===e.architecture&&32===e.outputStride&&1!==e.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return e}(e)).architecture?[2,j$(e)]:"MobileNetV1"===e.architecture?[2,H$(e)]:[2,null]})})}({architecture:"ResNet50",outputStride:32,inputResolution:{width:257,height:200},quantBytes:2})})}getAdjacentKeyPoints(e,t){return n=e,r=t,o$.reduce(function(e,t){var a=t[0],o=t[1];return function(e,t,n){return e<n||t<n}(n[a].score,n[o].score,r)||e.push([n[a],n[o]]),e},[]);var n,r}getBoundingBox(e){return e.reduce(function(e,t){var n=e.maxY,r=e.minX,a=e.minY,o=t.position,s=o.x,i=o.y;return{maxX:Math.max(e.maxX,s),maxY:Math.max(n,i),minX:Math.min(r,s),minY:Math.min(a,i)}},{maxX:$$,maxY:$$,minX:I$,minY:I$})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=L.Hb({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),K$=(()=>{class e{constructor(){this.color="aqua",this.boundingBoxColor="red",this.lineWidth=2}toTuple({y:e,x:t}){return[e,t]}drawPoint(e,t,n,r,a){e.beginPath(),e.arc(n,t,r,0,2*Math.PI),e.fillStyle=a,e.fill()}drawSegment([e,t],[n,r],a,o,s){s.beginPath(),s.moveTo(t*o,e*o),s.lineTo(r*o,n*o),s.lineWidth=this.lineWidth,s.strokeStyle=a,s.stroke()}drawSkeleton(e,t,n=1){e.forEach(e=>{this.drawSegment(this.toTuple(e[0].position),this.toTuple(e[1].position),this.color,n,t)})}drawKeypoints(e,t,n,r=1){for(let a=0;a<e.length;a++){const o=e[a];if(o.score<t)continue;const{y:s,x:i}=o.position;this.drawPoint(n,s*r,i*r,3,this.color)}}drawBoundingBox(e,t){t.rect(e.minX,e.minY,e.maxX-e.minX,e.maxY-e.minY),t.strokeStyle=this.boundingBoxColor,t.stroke()}renderToCanvas(e,t){return on(this,void 0,void 0,function*(){const[n,r]=e.shape,a=new ImageData(r,n),o=yield e.data();for(let e=0;e<n*r;++e){const t=4*e,n=3*e;a.data[t+0]=o[n+0],a.data[t+1]=o[n+1],a.data[t+2]=o[n+2],a.data[t+3]=255}t.putImageData(a,0,0)})}renderImageToCanvas(e,t,n){n.width=t[0],n.height=t[1],n.getContext("2d").drawImage(e,0,0)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=L.Hb({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),X$=(()=>{class e{constructor(){}convertToCSV(e){for(var t="object"!=typeof e?JSON.parse(e):e,n="",r=0;r<t.length;r++){var a="";for(var o in t[r])""!=a&&(a+=","),a+=t[r][o];n+=a+"\r\n"}return n}exportCSVFile(e,t,n){e&&t.unshift(e);var r=JSON.stringify(t),a=this.convertToCSV(r),o=n+".csv"||!1,s=new Blob([a],{type:"text/csv;charset=utf-8;"});if(navigator.msSaveBlob)navigator.msSaveBlob(s,o);else{var i=document.createElement("a");if(void 0!==i.download){var u=URL.createObjectURL(s);i.setAttribute("href",u),i.setAttribute("download",o),i.style.visibility="hidden",document.body.appendChild(i),i.click(),document.body.removeChild(i)}}}download(e,t,n){this.exportCSVFile(e,t,n)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=L.Hb({token:e,factory:e.\u0275fac,providedIn:"root"}),e})();const Q$=["videofeed"],Y$=["canvas"];let Z$=(()=>{class e{constructor(e,t,n){this.posenetService=e,this.renderer=t,this.csvService=n,this.videoWidth=600,this.videoHeight=500,this.video=null,this.canvas=null,this.capture=!1,this.fps=0,this.rendered=0,this.poses=[],this.state={algorithm:"single-pose",input:{architecture:"ResNet50",outputStride:32,inputResolution:250,multiplier:1,quantBytes:2},singlePoseDetection:{minPoseConfidence:.1,minPartConfidence:.5},multiPoseDetection:{maxPoseDetections:5,minPoseConfidence:.15,minPartConfidence:.1,nmsRadius:30},output:{showVideo:!0,showSkeleton:!0,showPoints:!0,showBoundingBox:!1},net:null}}ngAfterViewInit(){return on(this,void 0,void 0,function*(){this.video=this.videoElement.nativeElement,this.canvas=this.canvasElement.nativeElement,this.posenet=yield this.posenetService.getNet(),this.setupCamera(),this.video.onloadedmetadata=()=>{this.detectPoseInRealTime()}})}setupCamera(){return on(this,void 0,void 0,function*(){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error("Browser API navigator.mediaDevices.getUserMedia not available");this.video.width=this.videoWidth,this.video.height=this.videoHeight;const e=yield navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user",width:this.videoWidth,height:this.videoHeight}});this.video.srcObject=e})}detectPoseInRealTime(){return on(this,void 0,void 0,function*(){const e=this.canvas.getContext("2d");let t=Date.now();this.canvas.width=this.videoWidth,this.canvas.height=this.videoHeight;const n=this;!function r(){return on(this,void 0,void 0,function*(){let a,o,s=[];const i=yield n.posenet.estimatePoses(n.video,{flipHorizontal:!0,decodingMethod:"single-person"});s=s.concat(i),a=+n.state.singlePoseDetection.minPoseConfidence,o=+n.state.singlePoseDetection.minPartConfidence,e.clearRect(0,0,n.videoWidth,n.videoHeight),n.state.output.showVideo&&(e.save(),e.scale(-1,1),e.translate(-n.videoWidth,0),e.drawImage(n.video,0,0,n.videoWidth,n.videoHeight),e.restore()),s.forEach(({score:r,keypoints:s})=>{r>=a&&(n.capture&&(n.rendered++,n.poses.push(s),n.rendered%5==0&&(n.fps=5/((Date.now()-t)/1e3),t=Date.now())),n.state.output.showPoints&&n.renderer.drawKeypoints(s,o,e),n.state.output.showSkeleton&&n.renderer.drawSkeleton(n.posenetService.getAdjacentKeyPoints(s,o),e),n.state.output.showBoundingBox&&n.renderer.drawBoundingBox(n.posenetService.getBoundingBox(s),e))}),requestAnimationFrame(r)})}()})}start(){this.capture=!0}stop(){this.capture=!1,this.fps=0,this.rendered=0,this.csvService.download(this.generatePosesHeaders(),this.generatePosesItems(),"posenet"),this.poses=[]}generatePosesHeaders(){const e={};return this.poses[0].forEach(t=>{let n=this.add_underscore(t.part);e[n+"_x"]=n+"_x",e[n+"_y"]=n+"_y"}),e}generatePosesItems(){const e=[];return this.poses.forEach(t=>{let n={};t.forEach(e=>{let t=this.add_underscore(e.part);n[t+"_x"]=e.position.x,n[t+"_y"]=e.position.y}),e.push(n)}),e}add_underscore(e){return e.replace(/[A-Z]/g,function(e){return"_"+e.toLowerCase()})}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(q$),L.Lb(K$),L.Lb(X$))},e.\u0275cmp=L.Fb({type:e,selectors:[["app-live-feed"]],viewQuery:function(e,t){if(1&e&&(L.uc(Q$,1),L.uc(Y$,1)),2&e){let e;L.ic(e=L.Yb())&&(t.videoElement=e.first),L.ic(e=L.Yb())&&(t.canvasElement=e.first)}},decls:28,vars:5,consts:[[1,"botton-bar"],["mat-raised-button","","color","primary",3,"click"],[1,"info"],["mat-raised-button","","color","accent",3,"click"],[1,"container"],["id","video","playsinline","","autoplay","",2,"display","none"],["videofeed",""],["id","output"],["canvas",""]],template:function(e,t){1&e&&(L.Qb(0,"div",0),L.rc(1,"\n  "),L.Qb(2,"button",1),L.Xb("click",function(){return t.start()}),L.rc(3,"Start"),L.Pb(),L.rc(4,"\n  "),L.Qb(5,"div",2),L.rc(6,"\n    "),L.Qb(7,"span"),L.rc(8),L.ac(9,"number"),L.Pb(),L.rc(10,"\n    "),L.Qb(11,"span"),L.rc(12),L.Pb(),L.rc(13,"\n  "),L.Pb(),L.rc(14,"\n  "),L.Qb(15,"button",3),L.Xb("click",function(){return t.stop()}),L.rc(16,"Stop"),L.Pb(),L.rc(17,"\n"),L.Pb(),L.rc(18,"\n"),L.Qb(19,"div",4),L.rc(20,"\n  "),L.Mb(21,"video",5,6),L.rc(23,"\n  "),L.Mb(24,"canvas",7,8),L.rc(26,"\n"),L.Pb(),L.rc(27,"\n")),2&e&&(L.Bb(8),L.tc("FPS: ",L.bc(9,2,t.fps,"1.2-2"),""),L.Bb(4),L.tc("Rendered: ",t.rendered,""))},directives:[Z.a],pipes:[P.d],styles:[".container[_ngcontent-%COMP%]{justify-content:center;display:flex}.botton-bar[_ngcontent-%COMP%]{justify-content:space-between;display:flex;margin:1vw}.botton-bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:5px}.botton-bar[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]{font-weight:700;display:flex;flex-direction:column;align-self:center}"]}),e})(),J$=(()=>{class e{constructor(e,t){this.dialogRef=e,this.data=t}onNoClick(){this.dialogRef.close()}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(nt.g),L.Lb(nt.a))},e.\u0275cmp=L.Fb({type:e,selectors:[["app-dashboard-modal"]],decls:21,vars:3,consts:[["mat-dialog-title",""],["mat-dialog-content",""],["mat-dialog-actions",""],["mat-button","","cdkFocusInitial","",3,"mat-dialog-close"]],template:function(e,t){1&e&&(L.Qb(0,"h1",0),L.rc(1,"AIMO Score"),L.Pb(),L.rc(2,"\n"),L.Qb(3,"div",1),L.rc(4,"\n  "),L.Qb(5,"h2"),L.rc(6,"\n    The predicted score is "),L.Qb(7,"strong"),L.rc(8),L.Pb(),L.rc(9," and the predicted\n    weakest link is "),L.Qb(10,"strong"),L.rc(11),L.Pb(),L.rc(12,"\n  "),L.Pb(),L.rc(13,"\n"),L.Pb(),L.rc(14,"\n"),L.Qb(15,"div",2),L.rc(16,"\n  "),L.Qb(17,"button",3),L.rc(18,"Ok"),L.Pb(),L.rc(19,"\n"),L.Pb(),L.rc(20,"\n")),2&e&&(L.Bb(8),L.sc(t.data.score),L.Bb(3),L.sc(t.data.weakest_link),L.Bb(6),L.ec("mat-dialog-close",t.onNoClick))},directives:[nt.h,nt.e,nt.c,Z.a,nt.d],styles:[""]}),e})(),eI=(()=>{class e{constructor(e){this.dialog=e}openDialog(e){return this.dialog.open(J$,{width:"50vh",data:e})}}return e.\u0275fac=function(t){return new(t||e)(L.Ub(nt.b))},e.\u0275prov=L.Hb({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),tI=(()=>{class e{constructor(e,t){this.scoreService=e,this.dialogService=t}onSubmit(e){this.scoreService.validatePredictors(e),this.scoreService.predictScore(e).subscribe(e=>{this.dialogService.openDialog(e).afterClosed().subscribe(e=>{console.log("The dialog was closed"),this.clear()})})}onGenerateDemo(){let e=this.scoreService.getRandomPredictors();this.singleValueForm.patchValue(e)}onClear(){this.clear()}clear(){this.singleValueForm=new Y.d({No_1_Angle_Deviation:new Y.b,No_2_Angle_Deviation:new Y.b,No_3_Angle_Deviation:new Y.b,No_4_Angle_Deviation:new Y.b,No_5_Angle_Deviation:new Y.b,No_6_Angle_Deviation:new Y.b,No_7_Angle_Deviation:new Y.b,No_8_Angle_Deviation:new Y.b,No_9_Angle_Deviation:new Y.b,No_10_Angle_Deviation:new Y.b,No_11_Angle_Deviation:new Y.b,No_12_Angle_Deviation:new Y.b,No_13_Angle_Deviation:new Y.b,No_1_NASM_Deviation:new Y.b,No_2_NASM_Deviation:new Y.b,No_3_NASM_Deviation:new Y.b,No_4_NASM_Deviation:new Y.b,No_5_NASM_Deviation:new Y.b,No_6_NASM_Deviation:new Y.b,No_7_NASM_Deviation:new Y.b,No_8_NASM_Deviation:new Y.b,No_9_NASM_Deviation:new Y.b,No_10_NASM_Deviation:new Y.b,No_11_NASM_Deviation:new Y.b,No_12_NASM_Deviation:new Y.b,No_13_NASM_Deviation:new Y.b,No_14_NASM_Deviation:new Y.b,No_15_NASM_Deviation:new Y.b,No_16_NASM_Deviation:new Y.b,No_17_NASM_Deviation:new Y.b,No_18_NASM_Deviation:new Y.b,No_19_NASM_Deviation:new Y.b,No_20_NASM_Deviation:new Y.b,No_21_NASM_Deviation:new Y.b,No_22_NASM_Deviation:new Y.b,No_23_NASM_Deviation:new Y.b,No_24_NASM_Deviation:new Y.b,No_25_NASM_Deviation:new Y.b,No_1_Time_Deviation:new Y.b,No_2_Time_Deviation:new Y.b})}ngOnInit(){this.clear()}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(an),L.Lb(eI))},e.\u0275cmp=L.Fb({type:e,selectors:[["app-default-predictor-form"]],decls:491,vars:1,consts:[[3,"formGroup","ngSubmit"],[1,"box-card"],["appearance","outline"],["matInput","","formControlName","No_1_Angle_Deviation"],["matInput","","formControlName","No_2_Angle_Deviation"],["matInput","","formControlName","No_3_Angle_Deviation"],["matInput","","formControlName","No_4_Angle_Deviation"],["matInput","","formControlName","No_5_Angle_Deviation"],["matInput","","formControlName","No_6_Angle_Deviation"],["matInput","","formControlName","No_7_Angle_Deviation"],["matInput","","formControlName","No_8_Angle_Deviation"],["matInput","","formControlName","No_9_Angle_Deviation"],["matInput","","formControlName","No_10_Angle_Deviation"],["matInput","","formControlName","No_11_Angle_Deviation"],["matInput","","formControlName","No_12_Angle_Deviation"],["matInput","","formControlName","No_13_Angle_Deviation"],["matInput","","formControlName","No_1_NASM_Deviation"],["matInput","","formControlName","No_2_NASM_Deviation"],["matInput","","formControlName","No_3_NASM_Deviation"],["matInput","","formControlName","No_4_NASM_Deviation"],["matInput","","formControlName","No_5_NASM_Deviation"],["matInput","","formControlName","No_6_NASM_Deviation"],["matInput","","formControlName","No_7_NASM_Deviation"],["matInput","","formControlName","No_8_NASM_Deviation"],["matInput","","formControlName","No_9_NASM_Deviation"],["matInput","","formControlName","No_10_NASM_Deviation"],["matInput","","formControlName","No_11_NASM_Deviation"],["matInput","","formControlName","No_12_NASM_Deviation"],["matInput","","formControlName","No_13_NASM_Deviation"],["matInput","","formControlName","No_14_NASM_Deviation"],["matInput","","formControlName","No_15_NASM_Deviation"],["matInput","","formControlName","No_16_NASM_Deviation"],["matInput","","formControlName","No_17_NASM_Deviation"],["matInput","","formControlName","No_18_NASM_Deviation"],["matInput","","formControlName","No_19_NASM_Deviation"],["matInput","","formControlName","No_20_NASM_Deviation"],["matInput","","formControlName","No_21_NASM_Deviation"],["matInput","","formControlName","No_22_NASM_Deviation"],["matInput","","formControlName","No_23_NASM_Deviation"],["matInput","","formControlName","No_24_NASM_Deviation"],["matInput","","formControlName","No_25_NASM_Deviation"],["matInput","","formControlName","No_1_Time_Deviation"],["matInput","","formControlName","No_2_Time_Deviation"],[1,"btn-container"],["mat-fab","","color","primary","type","submit"],["mat-fab","","color","accent","type","button",3,"click"],["mat-fab","","color","warn","type","button",3,"click"]],template:function(e,t){1&e&&(L.Qb(0,"form",0),L.Xb("ngSubmit",function(){return t.onSubmit(t.singleValueForm.value)}),L.rc(1,"\n  "),L.Qb(2,"mat-card",1),L.rc(3,"\n    "),L.Qb(4,"mat-card-title"),L.rc(5,"Angle Deviation"),L.Pb(),L.rc(6,"\n    "),L.Qb(7,"mat-card-content"),L.rc(8,"\n      "),L.Qb(9,"mat-form-field",2),L.rc(10,"\n        "),L.Qb(11,"mat-label"),L.rc(12,"No 1"),L.Pb(),L.rc(13,"\n        "),L.Mb(14,"input",3),L.rc(15,"\n        "),L.Qb(16,"mat-hint"),L.rc(17,"No_1_Angle_Deviation"),L.Pb(),L.rc(18,"\n      "),L.Pb(),L.rc(19,"\n\n      "),L.Qb(20,"mat-form-field",2),L.rc(21,"\n        "),L.Qb(22,"mat-label"),L.rc(23,"No 2"),L.Pb(),L.rc(24,"\n        "),L.Mb(25,"input",4),L.rc(26,"\n        "),L.Qb(27,"mat-hint"),L.rc(28,"No_2_Angle_Deviation"),L.Pb(),L.rc(29,"\n      "),L.Pb(),L.rc(30,"\n\n      "),L.Qb(31,"mat-form-field",2),L.rc(32,"\n        "),L.Qb(33,"mat-label"),L.rc(34,"No 3"),L.Pb(),L.rc(35,"\n        "),L.Mb(36,"input",5),L.rc(37,"\n        "),L.Qb(38,"mat-hint"),L.rc(39,"No_3_Angle_Deviation"),L.Pb(),L.rc(40,"\n      "),L.Pb(),L.rc(41,"\n\n      "),L.Qb(42,"mat-form-field",2),L.rc(43,"\n        "),L.Qb(44,"mat-label"),L.rc(45,"No 4"),L.Pb(),L.rc(46,"\n        "),L.Mb(47,"input",6),L.rc(48,"\n        "),L.Qb(49,"mat-hint"),L.rc(50,"No_4_Angle_Deviation"),L.Pb(),L.rc(51,"\n      "),L.Pb(),L.rc(52,"\n\n      "),L.Qb(53,"mat-form-field",2),L.rc(54,"\n        "),L.Qb(55,"mat-label"),L.rc(56,"No 5"),L.Pb(),L.rc(57,"\n        "),L.Mb(58,"input",7),L.rc(59,"\n        "),L.Qb(60,"mat-hint"),L.rc(61,"No_5_Angle_Deviation"),L.Pb(),L.rc(62,"\n      "),L.Pb(),L.rc(63,"\n\n      "),L.Qb(64,"mat-form-field",2),L.rc(65,"\n        "),L.Qb(66,"mat-label"),L.rc(67,"No 6"),L.Pb(),L.rc(68,"\n        "),L.Mb(69,"input",8),L.rc(70,"\n        "),L.Qb(71,"mat-hint"),L.rc(72,"No_6_Angle_Deviation"),L.Pb(),L.rc(73,"\n      "),L.Pb(),L.rc(74,"\n\n      "),L.Qb(75,"mat-form-field",2),L.rc(76,"\n        "),L.Qb(77,"mat-label"),L.rc(78,"No 7"),L.Pb(),L.rc(79,"\n        "),L.Mb(80,"input",9),L.rc(81,"\n        "),L.Qb(82,"mat-hint"),L.rc(83,"No_7_Angle_Deviation"),L.Pb(),L.rc(84,"\n      "),L.Pb(),L.rc(85,"\n\n      "),L.Qb(86,"mat-form-field",2),L.rc(87,"\n        "),L.Qb(88,"mat-label"),L.rc(89,"No 8"),L.Pb(),L.rc(90,"\n        "),L.Mb(91,"input",10),L.rc(92,"\n        "),L.Qb(93,"mat-hint"),L.rc(94,"No_8_Angle_Deviation"),L.Pb(),L.rc(95,"\n      "),L.Pb(),L.rc(96,"\n\n      "),L.Qb(97,"mat-form-field",2),L.rc(98,"\n        "),L.Qb(99,"mat-label"),L.rc(100,"No 9"),L.Pb(),L.rc(101,"\n        "),L.Mb(102,"input",11),L.rc(103,"\n        "),L.Qb(104,"mat-hint"),L.rc(105,"No_9_Angle_Deviation"),L.Pb(),L.rc(106,"\n      "),L.Pb(),L.rc(107,"\n\n      "),L.Qb(108,"mat-form-field",2),L.rc(109,"\n        "),L.Qb(110,"mat-label"),L.rc(111,"No 10"),L.Pb(),L.rc(112,"\n        "),L.Mb(113,"input",12),L.rc(114,"\n        "),L.Qb(115,"mat-hint"),L.rc(116,"No_10_Angle_Deviation"),L.Pb(),L.rc(117,"\n      "),L.Pb(),L.rc(118,"\n\n      "),L.Qb(119,"mat-form-field",2),L.rc(120,"\n        "),L.Qb(121,"mat-label"),L.rc(122,"No 11"),L.Pb(),L.rc(123,"\n        "),L.Mb(124,"input",13),L.rc(125,"\n        "),L.Qb(126,"mat-hint"),L.rc(127,"No_11_Angle_Deviation"),L.Pb(),L.rc(128,"\n      "),L.Pb(),L.rc(129,"\n\n      "),L.Qb(130,"mat-form-field",2),L.rc(131,"\n        "),L.Qb(132,"mat-label"),L.rc(133,"No 12"),L.Pb(),L.rc(134,"\n        "),L.Mb(135,"input",14),L.rc(136,"\n        "),L.Qb(137,"mat-hint"),L.rc(138,"No_12_Angle_Deviation"),L.Pb(),L.rc(139,"\n      "),L.Pb(),L.rc(140,"\n\n      "),L.Qb(141,"mat-form-field",2),L.rc(142,"\n        "),L.Qb(143,"mat-label"),L.rc(144,"No 13"),L.Pb(),L.rc(145,"\n        "),L.Mb(146,"input",15),L.rc(147,"\n        "),L.Qb(148,"mat-hint"),L.rc(149,"No_13_Angle_Deviation"),L.Pb(),L.rc(150,"\n      "),L.Pb(),L.rc(151,"\n    "),L.Pb(),L.rc(152,"\n  "),L.Pb(),L.rc(153,"\n\n  "),L.Qb(154,"mat-card"),L.rc(155,"\n    "),L.Qb(156,"mat-card-title"),L.rc(157,"NASM Deviation"),L.Pb(),L.rc(158,"\n    "),L.Qb(159,"mat-card-content"),L.rc(160,"\n      "),L.Qb(161,"mat-form-field",2),L.rc(162,"\n        "),L.Qb(163,"mat-label"),L.rc(164,"No 1"),L.Pb(),L.rc(165,"\n        "),L.Mb(166,"input",16),L.rc(167,"\n        "),L.Qb(168,"mat-hint"),L.rc(169,"No_1_NASM_Deviation"),L.Pb(),L.rc(170,"\n      "),L.Pb(),L.rc(171,"\n\n      "),L.Qb(172,"mat-form-field",2),L.rc(173,"\n        "),L.Qb(174,"mat-label"),L.rc(175,"No 2"),L.Pb(),L.rc(176,"\n        "),L.Mb(177,"input",17),L.rc(178,"\n        "),L.Qb(179,"mat-hint"),L.rc(180,"No_2_NASM_Deviation"),L.Pb(),L.rc(181,"\n      "),L.Pb(),L.rc(182,"\n\n      "),L.Qb(183,"mat-form-field",2),L.rc(184,"\n        "),L.Qb(185,"mat-label"),L.rc(186,"No 3"),L.Pb(),L.rc(187,"\n        "),L.Mb(188,"input",18),L.rc(189,"\n        "),L.Qb(190,"mat-hint"),L.rc(191,"No_3_NASM_Deviation"),L.Pb(),L.rc(192,"\n      "),L.Pb(),L.rc(193,"\n\n      "),L.Qb(194,"mat-form-field",2),L.rc(195,"\n        "),L.Qb(196,"mat-label"),L.rc(197,"No 4"),L.Pb(),L.rc(198,"\n        "),L.Mb(199,"input",19),L.rc(200,"\n        "),L.Qb(201,"mat-hint"),L.rc(202,"No_4_NASM_Deviation"),L.Pb(),L.rc(203,"\n      "),L.Pb(),L.rc(204,"\n\n      "),L.Qb(205,"mat-form-field",2),L.rc(206,"\n        "),L.Qb(207,"mat-label"),L.rc(208,"No 5"),L.Pb(),L.rc(209,"\n        "),L.Mb(210,"input",20),L.rc(211,"\n        "),L.Qb(212,"mat-hint"),L.rc(213,"No_5_NASM_Deviation"),L.Pb(),L.rc(214,"\n      "),L.Pb(),L.rc(215,"\n\n      "),L.Qb(216,"mat-form-field",2),L.rc(217,"\n        "),L.Qb(218,"mat-label"),L.rc(219,"No 6"),L.Pb(),L.rc(220,"\n        "),L.Mb(221,"input",21),L.rc(222,"\n        "),L.Qb(223,"mat-hint"),L.rc(224,"No_6_NASM_Deviation"),L.Pb(),L.rc(225,"\n      "),L.Pb(),L.rc(226,"\n\n      "),L.Qb(227,"mat-form-field",2),L.rc(228,"\n        "),L.Qb(229,"mat-label"),L.rc(230,"No 7"),L.Pb(),L.rc(231,"\n        "),L.Mb(232,"input",22),L.rc(233,"\n        "),L.Qb(234,"mat-hint"),L.rc(235,"No_7_NASM_Deviation"),L.Pb(),L.rc(236,"\n      "),L.Pb(),L.rc(237,"\n\n      "),L.Qb(238,"mat-form-field",2),L.rc(239,"\n        "),L.Qb(240,"mat-label"),L.rc(241,"No 8"),L.Pb(),L.rc(242,"\n        "),L.Mb(243,"input",23),L.rc(244,"\n        "),L.Qb(245,"mat-hint"),L.rc(246,"No_8_NASM_Deviation"),L.Pb(),L.rc(247,"\n      "),L.Pb(),L.rc(248,"\n\n      "),L.Qb(249,"mat-form-field",2),L.rc(250,"\n        "),L.Qb(251,"mat-label"),L.rc(252,"No 9"),L.Pb(),L.rc(253,"\n        "),L.Mb(254,"input",24),L.rc(255,"\n        "),L.Qb(256,"mat-hint"),L.rc(257,"No_9_NASM_Deviation"),L.Pb(),L.rc(258,"\n      "),L.Pb(),L.rc(259,"\n\n      "),L.Qb(260,"mat-form-field",2),L.rc(261,"\n        "),L.Qb(262,"mat-label"),L.rc(263,"No 10"),L.Pb(),L.rc(264,"\n        "),L.Mb(265,"input",25),L.rc(266,"\n        "),L.Qb(267,"mat-hint"),L.rc(268,"No_10_NASM_Deviation"),L.Pb(),L.rc(269,"\n      "),L.Pb(),L.rc(270,"\n\n      "),L.Qb(271,"mat-form-field",2),L.rc(272,"\n        "),L.Qb(273,"mat-label"),L.rc(274,"No 11"),L.Pb(),L.rc(275,"\n        "),L.Mb(276,"input",26),L.rc(277,"\n        "),L.Qb(278,"mat-hint"),L.rc(279,"No_11_NASM_Deviation"),L.Pb(),L.rc(280,"\n      "),L.Pb(),L.rc(281,"\n\n      "),L.Qb(282,"mat-form-field",2),L.rc(283,"\n        "),L.Qb(284,"mat-label"),L.rc(285,"No 12"),L.Pb(),L.rc(286,"\n        "),L.Mb(287,"input",27),L.rc(288,"\n        "),L.Qb(289,"mat-hint"),L.rc(290,"No_12_NASM_Deviation"),L.Pb(),L.rc(291,"\n      "),L.Pb(),L.rc(292,"\n\n      "),L.Qb(293,"mat-form-field",2),L.rc(294,"\n        "),L.Qb(295,"mat-label"),L.rc(296,"No 13"),L.Pb(),L.rc(297,"\n        "),L.Mb(298,"input",28),L.rc(299,"\n        "),L.Qb(300,"mat-hint"),L.rc(301,"No_13_NASM_Deviation"),L.Pb(),L.rc(302,"\n      "),L.Pb(),L.rc(303,"\n\n      "),L.Qb(304,"mat-form-field",2),L.rc(305,"\n        "),L.Qb(306,"mat-label"),L.rc(307,"No 14"),L.Pb(),L.rc(308,"\n        "),L.Mb(309,"input",29),L.rc(310,"\n        "),L.Qb(311,"mat-hint"),L.rc(312,"No_14_NASM_Deviation"),L.Pb(),L.rc(313,"\n      "),L.Pb(),L.rc(314,"\n\n      "),L.Qb(315,"mat-form-field",2),L.rc(316,"\n        "),L.Qb(317,"mat-label"),L.rc(318,"No 15"),L.Pb(),L.rc(319,"\n        "),L.Mb(320,"input",30),L.rc(321,"\n        "),L.Qb(322,"mat-hint"),L.rc(323,"No_15_NASM_Deviation"),L.Pb(),L.rc(324,"\n      "),L.Pb(),L.rc(325,"\n\n      "),L.Qb(326,"mat-form-field",2),L.rc(327,"\n        "),L.Qb(328,"mat-label"),L.rc(329,"No 16"),L.Pb(),L.rc(330,"\n        "),L.Mb(331,"input",31),L.rc(332,"\n        "),L.Qb(333,"mat-hint"),L.rc(334,"No_16_NASM_Deviation"),L.Pb(),L.rc(335,"\n      "),L.Pb(),L.rc(336,"\n\n      "),L.Qb(337,"mat-form-field",2),L.rc(338,"\n        "),L.Qb(339,"mat-label"),L.rc(340,"No 17"),L.Pb(),L.rc(341,"\n        "),L.Mb(342,"input",32),L.rc(343,"\n        "),L.Qb(344,"mat-hint"),L.rc(345,"No_17_NASM_Deviation"),L.Pb(),L.rc(346,"\n      "),L.Pb(),L.rc(347,"\n\n      "),L.Qb(348,"mat-form-field",2),L.rc(349,"\n        "),L.Qb(350,"mat-label"),L.rc(351,"No 18"),L.Pb(),L.rc(352,"\n        "),L.Mb(353,"input",33),L.rc(354,"\n        "),L.Qb(355,"mat-hint"),L.rc(356,"No_18_NASM_Deviation"),L.Pb(),L.rc(357,"\n      "),L.Pb(),L.rc(358,"\n\n      "),L.Qb(359,"mat-form-field",2),L.rc(360,"\n        "),L.Qb(361,"mat-label"),L.rc(362,"No 19"),L.Pb(),L.rc(363,"\n        "),L.Mb(364,"input",34),L.rc(365,"\n        "),L.Qb(366,"mat-hint"),L.rc(367,"No_19_NASM_Deviation"),L.Pb(),L.rc(368,"\n      "),L.Pb(),L.rc(369,"\n\n      "),L.Qb(370,"mat-form-field",2),L.rc(371,"\n        "),L.Qb(372,"mat-label"),L.rc(373,"No 20"),L.Pb(),L.rc(374,"\n        "),L.Mb(375,"input",35),L.rc(376,"\n        "),L.Qb(377,"mat-hint"),L.rc(378,"No_20_NASM_Deviation"),L.Pb(),L.rc(379,"\n      "),L.Pb(),L.rc(380,"\n\n      "),L.Qb(381,"mat-form-field",2),L.rc(382,"\n        "),L.Qb(383,"mat-label"),L.rc(384,"No 21"),L.Pb(),L.rc(385,"\n        "),L.Mb(386,"input",36),L.rc(387,"\n        "),L.Qb(388,"mat-hint"),L.rc(389,"No_21_NASM_Deviation"),L.Pb(),L.rc(390,"\n      "),L.Pb(),L.rc(391,"\n\n      "),L.Qb(392,"mat-form-field",2),L.rc(393,"\n        "),L.Qb(394,"mat-label"),L.rc(395,"No 22"),L.Pb(),L.rc(396,"\n        "),L.Mb(397,"input",37),L.rc(398,"\n        "),L.Qb(399,"mat-hint"),L.rc(400,"No_22_NASM_Deviation"),L.Pb(),L.rc(401,"\n      "),L.Pb(),L.rc(402,"\n\n      "),L.Qb(403,"mat-form-field",2),L.rc(404,"\n        "),L.Qb(405,"mat-label"),L.rc(406,"No 23"),L.Pb(),L.rc(407,"\n        "),L.Mb(408,"input",38),L.rc(409,"\n        "),L.Qb(410,"mat-hint"),L.rc(411,"No_23_NASM_Deviation"),L.Pb(),L.rc(412,"\n      "),L.Pb(),L.rc(413,"\n\n      "),L.Qb(414,"mat-form-field",2),L.rc(415,"\n        "),L.Qb(416,"mat-label"),L.rc(417,"No 24"),L.Pb(),L.rc(418,"\n        "),L.Mb(419,"input",39),L.rc(420,"\n        "),L.Qb(421,"mat-hint"),L.rc(422,"No_24_NASM_Deviation"),L.Pb(),L.rc(423,"\n      "),L.Pb(),L.rc(424,"\n\n      "),L.Qb(425,"mat-form-field",2),L.rc(426,"\n        "),L.Qb(427,"mat-label"),L.rc(428,"No 25"),L.Pb(),L.rc(429,"\n        "),L.Mb(430,"input",40),L.rc(431,"\n        "),L.Qb(432,"mat-hint"),L.rc(433,"No_25_NASM_Deviation"),L.Pb(),L.rc(434,"\n      "),L.Pb(),L.rc(435,"\n    "),L.Pb(),L.rc(436,"\n  "),L.Pb(),L.rc(437,"\n\n  "),L.Qb(438,"mat-card"),L.rc(439,"\n    "),L.Qb(440,"mat-card-title"),L.rc(441,"Time Deviation"),L.Pb(),L.rc(442,"\n    "),L.Qb(443,"mat-card-content"),L.rc(444,"\n      "),L.Qb(445,"mat-form-field",2),L.rc(446,"\n        "),L.Qb(447,"mat-label"),L.rc(448,"No 1"),L.Pb(),L.rc(449,"\n        "),L.Mb(450,"input",41),L.rc(451,"\n        "),L.Qb(452,"mat-hint"),L.rc(453,"No_1_Time_Deviation"),L.Pb(),L.rc(454,"\n      "),L.Pb(),L.rc(455,"\n\n      "),L.Qb(456,"mat-form-field",2),L.rc(457,"\n        "),L.Qb(458,"mat-label"),L.rc(459,"No 2"),L.Pb(),L.rc(460,"\n        "),L.Mb(461,"input",42),L.rc(462,"\n        "),L.Qb(463,"mat-hint"),L.rc(464,"No_2_Time_Deviation"),L.Pb(),L.rc(465,"\n      "),L.Pb(),L.rc(466,"\n    "),L.Pb(),L.rc(467,"\n  "),L.Pb(),L.rc(468,"\n\n  "),L.Qb(469,"div",43),L.rc(470,"\n    "),L.Qb(471,"button",44),L.rc(472,"\n      "),L.Qb(473,"mat-icon"),L.rc(474,"add"),L.Pb(),L.rc(475,"\n    "),L.Pb(),L.rc(476,"\n    "),L.Qb(477,"button",45),L.Xb("click",function(){return t.onGenerateDemo()}),L.rc(478,"\n      "),L.Qb(479,"mat-icon"),L.rc(480,"auto_fix_high"),L.Pb(),L.rc(481,"\n    "),L.Pb(),L.rc(482,"\n    "),L.Qb(483,"button",46),L.Xb("click",function(){return t.onClear()}),L.rc(484,"\n      "),L.Qb(485,"mat-icon"),L.rc(486,"clear"),L.Pb(),L.rc(487,"\n    "),L.Pb(),L.rc(488,"\n  "),L.Pb(),L.rc(489,"\n"),L.Pb(),L.rc(490,"\n")),2&e&&L.ec("formGroup",t.singleValueForm)},directives:[Y.l,Y.i,Y.e,q,H,U,qe,Le,et,Y.a,Y.h,Y.c,Pe,Z.a,J.a],styles:[".btn-container[_ngcontent-%COMP%]{margin:10px;align-content:space-around}.btn-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:5px}.streach[_ngcontent-%COMP%]{width:90vw;min-height:40vh}"]}),e})(),nI=(()=>{class e{constructor(e,t){this.scoreService=e,this.dialogService=t}onSubmit(e){let t=this.scoreService.convertToPredictorObject(e.allValues,"\n");this.scoreService.validatePredictors(t),this.scoreService.predictScore(t).subscribe(e=>{this.dialogService.openDialog(e).afterClosed().subscribe(e=>{console.log("The dialog was closed"),this.clear()})})}onGenerateDemo(){let e=this.scoreService.getRandomPredictors(),t=[];Object.keys(e).forEach(n=>{t.push(e[n])}),this.newLineSeparatedForm.patchValue({allValues:t.join("\n")})}onClear(){this.clear()}ngOnInit(){this.clear()}clear(){this.newLineSeparatedForm=new Y.d({allValues:new Y.b})}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(an),L.Lb(eI))},e.\u0275cmp=L.Fb({type:e,selectors:[["app-newline-separated-form"]],decls:44,vars:1,consts:[[3,"formGroup","ngSubmit"],[1,"box-card"],["appearance","outline",1,"streach"],["matInput","","formControlName","allValues",1,"streach"],[1,"btn-container"],["mat-fab","","color","primary","type","submit"],["mat-fab","","color","accent","type","button",3,"click"],["mat-fab","","color","warn","type","button",3,"click"]],template:function(e,t){1&e&&(L.Qb(0,"form",0),L.Xb("ngSubmit",function(){return t.onSubmit(t.newLineSeparatedForm.value)}),L.rc(1,"\n  "),L.Qb(2,"mat-card",1),L.rc(3,"\n    "),L.Qb(4,"mat-card-title"),L.rc(5,"All Predictors"),L.Pb(),L.rc(6,"\n    "),L.Qb(7,"mat-card-content"),L.rc(8,"\n      "),L.Qb(9,"mat-form-field",2),L.rc(10,"\n        "),L.Qb(11,"mat-label"),L.rc(12,"NewLine Separated Values"),L.Pb(),L.rc(13,"\n        "),L.Mb(14,"textarea",3),L.rc(15,"\n        "),L.Qb(16,"mat-hint"),L.rc(17,"Please enter each predictor in new line (you should not use comma\n          between variables)"),L.Pb(),L.rc(18,"\n      "),L.Pb(),L.rc(19,"\n    "),L.Pb(),L.rc(20,"\n  "),L.Pb(),L.rc(21,"\n\n  "),L.Qb(22,"div",4),L.rc(23,"\n    "),L.Qb(24,"button",5),L.rc(25,"\n      "),L.Qb(26,"mat-icon"),L.rc(27,"add"),L.Pb(),L.rc(28,"\n    "),L.Pb(),L.rc(29,"\n    "),L.Qb(30,"button",6),L.Xb("click",function(){return t.onGenerateDemo()}),L.rc(31,"\n      "),L.Qb(32,"mat-icon"),L.rc(33,"auto_fix_high"),L.Pb(),L.rc(34,"\n    "),L.Pb(),L.rc(35,"\n    "),L.Qb(36,"button",7),L.Xb("click",function(){return t.onClear()}),L.rc(37,"\n      "),L.Qb(38,"mat-icon"),L.rc(39,"clear"),L.Pb(),L.rc(40,"\n    "),L.Pb(),L.rc(41,"\n  "),L.Pb(),L.rc(42,"\n"),L.Pb(),L.rc(43,"\n")),2&e&&L.ec("formGroup",t.newLineSeparatedForm)},directives:[Y.l,Y.i,Y.e,q,H,U,qe,Le,et,Y.a,Y.h,Y.c,Pe,Z.a,J.a],styles:[".btn-container[_ngcontent-%COMP%]{margin:10px;align-content:space-around}.btn-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:5px}.streach[_ngcontent-%COMP%]{width:90vw;min-height:40vh}"]}),e})(),rI=(()=>{class e{constructor(e,t){this.scoreService=e,this.dialogService=t}onSubmit(e){let t=this.scoreService.convertToPredictorObject(e.allValues,",");this.scoreService.validatePredictors(t),this.scoreService.predictScore(t).subscribe(e=>{this.dialogService.openDialog(e).afterClosed().subscribe(e=>{console.log("The dialog was closed"),this.clear()})})}onGenerateDemo(){let e=this.scoreService.getRandomPredictors(),t=[];Object.keys(e).forEach(n=>{t.push(e[n])}),this.commaSeparatedForm.patchValue({allValues:t.join(" ,  ")})}onClear(){this.clear()}ngOnInit(){this.clear()}clear(){this.commaSeparatedForm=new Y.d({allValues:new Y.b})}}return e.\u0275fac=function(t){return new(t||e)(L.Lb(an),L.Lb(eI))},e.\u0275cmp=L.Fb({type:e,selectors:[["app-comma-separated-form"]],decls:44,vars:1,consts:[[3,"formGroup","ngSubmit"],[1,"box-card"],["appearance","outline",1,"streach"],["matInput","","formControlName","allValues",1,"streach"],[1,"btn-container"],["mat-fab","","color","primary","type","submit"],["mat-fab","","color","accent","type","button",3,"click"],["mat-fab","","color","warn","type","button",3,"click"]],template:function(e,t){1&e&&(L.Qb(0,"form",0),L.Xb("ngSubmit",function(){return t.onSubmit(t.commaSeparatedForm.value)}),L.rc(1,"\n  "),L.Qb(2,"mat-card",1),L.rc(3,"\n    "),L.Qb(4,"mat-card-title"),L.rc(5,"All Predictors"),L.Pb(),L.rc(6,"\n    "),L.Qb(7,"mat-card-content"),L.rc(8,"\n      "),L.Qb(9,"mat-form-field",2),L.rc(10,"\n        "),L.Qb(11,"mat-label"),L.rc(12,"Comma Separated Values"),L.Pb(),L.rc(13,"\n        "),L.Mb(14,"textarea",3),L.rc(15,"\n        "),L.Qb(16,"mat-hint"),L.rc(17,"Please enter each predictor in new line and use comma as the\n          seprator"),L.Pb(),L.rc(18,"\n      "),L.Pb(),L.rc(19,"\n    "),L.Pb(),L.rc(20,"\n  "),L.Pb(),L.rc(21,"\n\n  "),L.Qb(22,"div",4),L.rc(23,"\n    "),L.Qb(24,"button",5),L.rc(25,"\n      "),L.Qb(26,"mat-icon"),L.rc(27,"add"),L.Pb(),L.rc(28,"\n    "),L.Pb(),L.rc(29,"\n    "),L.Qb(30,"button",6),L.Xb("click",function(){return t.onGenerateDemo()}),L.rc(31,"\n      "),L.Qb(32,"mat-icon"),L.rc(33,"auto_fix_high"),L.Pb(),L.rc(34,"\n    "),L.Pb(),L.rc(35,"\n    "),L.Qb(36,"button",7),L.Xb("click",function(){return t.onClear()}),L.rc(37,"\n      "),L.Qb(38,"mat-icon"),L.rc(39,"clear"),L.Pb(),L.rc(40,"\n    "),L.Pb(),L.rc(41,"\n  "),L.Pb(),L.rc(42,"\n"),L.Pb(),L.rc(43,"\n")),2&e&&L.ec("formGroup",t.commaSeparatedForm)},directives:[Y.l,Y.i,Y.e,q,H,U,qe,Le,et,Y.a,Y.h,Y.c,Pe,Z.a,J.a],styles:[".btn-container[_ngcontent-%COMP%]{margin:10px;align-content:space-around}.btn-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:5px}.streach[_ngcontent-%COMP%]{width:90vw;min-height:40vh}"]}),e})(),aI=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=L.Fb({type:e,selectors:[["app-parameter-feed"]],decls:18,vars:0,consts:[["mat-align-tabs","center"],["label","Form"],["label","NewLine Separated"],["label","Comma Separated"]],template:function(e,t){1&e&&(L.Qb(0,"mat-tab-group",0),L.rc(1,"\n  "),L.Qb(2,"mat-tab",1),L.rc(3,"\n    "),L.Mb(4,"app-default-predictor-form"),L.rc(5,"\n  "),L.Pb(),L.rc(6,"\n  "),L.Qb(7,"mat-tab",2),L.rc(8,"\n    "),L.Mb(9,"app-newline-separated-form"),L.rc(10,"\n  "),L.Pb(),L.rc(11,"\n  "),L.Qb(12,"mat-tab",3),L.rc(13,"\n    "),L.Mb(14,"app-comma-separated-form"),L.rc(15,"\n  "),L.Pb(),L.rc(16,"\n"),L.Pb(),L.rc(17,"\n"))},directives:[Ht,Ot,tI,nI,rI],styles:[""]}),e})(),oI=(()=>{class e{}return e.\u0275mod=L.Jb({type:e}),e.\u0275inj=L.Ib({factory:function(t){return new(t||e)},providers:[an],imports:[[P.b,Y.f,Y.k,B.c.forChild([{path:"",component:Q},{path:"params",component:aI},{path:"webcam",component:Z$}]),Z.b,K,J.b,tt,nt.f,Jt,en]]}),e})()},YSVl:function(e,t,n){var r=n("EhIR"),a=n("uDiL"),o=n("pJ6O"),s=n("yuCN"),i=n("euyF"),u=n("ie1u"),l=n("pJ3+");l.alea=r,l.xor128=a,l.xorwow=o,l.xorshift7=s,l.xor4096=i,l.tychei=u,e.exports=l},YuTi:function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},euyF:function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,o=t.i;return t.w=r=r+1640531527|0,n=a[o+34&127],e=a[o=o+1&127],n^=n<<13,e^=e<<17,n=a[o]=(n^=n>>>15)^(e^=e>>>12),t.i=o,n+(r^r>>>16)|0},function(e,t){var n,r,a,o,s,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,o=-32;o<u;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(a=0==(n=i[127&o]^=r+(s=s+1640531527|0))?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,o=512;o>0;--o)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,i[a]=(r^=r>>>15)^(n^=n>>>12);e.w=s,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},ie1u:function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},"pJ3+":function(e,t,n){var r;!function(a,o){var s,i=this,u=256,l=o.pow(u,6),c=o.pow(2,52),d=2*c,p=255;function h(e,t,n){var r=[],p=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(a)]:null==e?function(){try{var e;return s&&(e=s.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),y(e)}catch(r){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,y(a)]}}():e,3),r),h=new f(r),x=function(){for(var e=h.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,b(y(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(o.random=e,t):e})(x,p,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,r=this,a=0,o=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);a<u;)s[a]=a++;for(a=0;a<u;a++)s[a]=s[o=p&o+e[a%n]+(t=s[a])],s[o]=t;(r.g=function(e){for(var t,n=0,a=r.i,o=r.j,s=r.S;e--;)t=s[a=p&a+1],n=n*u+s[p&(s[a]=s[o=p&o+t])+(s[o]=t)];return r.i=a,r.j=o,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(o){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(o.seedrandom=h,b(o.random(),a),e.exports){e.exports=h;try{s=n(5)}catch(x){}}else void 0===(r=(function(){return h}).call(t,n,t,e))||(e.exports=r)}([],Math)},pJ6O:function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},uDiL:function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},yuCN:function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],r[a]=n^=(e^=e<<13)^e<<9,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))}}]);